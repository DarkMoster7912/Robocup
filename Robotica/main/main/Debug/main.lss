
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00001742  000017d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001742  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a0  00800206  00800206  000017dc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000017dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000180c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  0000184c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ab3  00000000  00000000  000019d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000101a  00000000  00000000  00003487  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c58  00000000  00000000  000044a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000590  00000000  00000000  000050fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000835  00000000  00000000  0000568c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e11  00000000  00000000  00005ec1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00006cd2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	02 c1       	rjmp	.+516    	; 0x212 <__vector_3>
       e:	00 00       	nop
      10:	64 c1       	rjmp	.+712    	; 0x2da <__vector_4>
      12:	00 00       	nop
      14:	c6 c1       	rjmp	.+908    	; 0x3a2 <__vector_5>
      16:	00 00       	nop
      18:	28 c2       	rjmp	.+1104   	; 0x46a <__vector_6>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	80 c0       	rjmp	.+256    	; 0x19e <__vector_39>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	cc c6       	rjmp	.+3480   	; 0xe42 <__vector_42>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e4       	ldi	r30, 0x42	; 66
      fc:	f7 e1       	ldi	r31, 0x17	; 23
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a6 30       	cpi	r26, 0x06	; 6
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a6 e0       	ldi	r26, 0x06	; 6
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a6 3a       	cpi	r26, 0xA6	; 166
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	bf d6       	rcall	.+3454   	; 0xe9e <main>
     120:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <conversione>:
}


void TWI_Start(){
	TWCR = (1<<TWEN)|(1<<TWEA)|(1<<TWINT)|(1<<TWIE);	//Start TWI; Enable TWI; Enable TWI interrupt; Send start signal;
	TWIWaitUntilReady();								//Wait until start is send;
     126:	88 e0       	ldi	r24, 0x08	; 8
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <k+0x1>
     12e:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <k>
     132:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <k>
     136:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <k+0x1>
     13a:	08 97       	sbiw	r24, 0x08	; 8
     13c:	21 f4       	brne	.+8      	; 0x146 <conversione+0x20>
     13e:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <receivedData>
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	08 95       	ret
     146:	80 e0       	ldi	r24, 0x00	; 0
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	08 95       	ret

0000014c <init_interrupt>:
     14c:	78 94       	sei
     14e:	08 95       	ret

00000150 <init_TWI>:
     150:	85 ec       	ldi	r24, 0xC5	; 197
     152:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     156:	80 e2       	ldi	r24, 0x20	; 32
     158:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
     15c:	81 e0       	ldi	r24, 0x01	; 1
     15e:	8a b9       	out	0x0a, r24	; 10
     160:	08 95       	ret

00000162 <TWI_ACK>:
}
/*void TWI_Stop(){
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWIE)/*|(1<<TWSTO);	//Start TWI; Enable TWI; Enable TWI interrupt; Send stop signal;
}*/
void TWI_ACK(){
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWIE)|(1<<TWEA);	//Continue TWI; Enable TWI; Enable TWI interrupt; Enable acknowledgment;
     162:	85 ec       	ldi	r24, 0xC5	; 197
     164:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     168:	08 95       	ret

0000016a <k0x60>:
uint8_t receivedData[TWI_DATA_LENGTH];


void k0x60( int byteNumber){
	byteNumber = 0;							//Reset byte counter
	TWI_ACK();
     16a:	fb cf       	rjmp	.-10     	; 0x162 <TWI_ACK>
     16c:	08 95       	ret

0000016e <TWI_NACK>:
}*/
void TWI_ACK(){
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWIE)|(1<<TWEA);	//Continue TWI; Enable TWI; Enable TWI interrupt; Enable acknowledgment;
}
void TWI_NACK(){
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWIE);				//Start/continue TWI; Enable TWI; Enable TWI interrupt;
     16e:	85 e8       	ldi	r24, 0x85	; 133
     170:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     174:	08 95       	ret

00000176 <k0x80>:
	byteNumber = 0;							//Reset byte counter
	TWI_ACK();
}

void k0x80( int byteNumber){
	receivedData[byteNumber] = TWDR;		//Read the data register and save the data
     176:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     17a:	fc 01       	movw	r30, r24
     17c:	e4 58       	subi	r30, 0x84	; 132
     17e:	fd 4f       	sbci	r31, 0xFD	; 253
     180:	20 83       	st	Z, r18
	byteNumber++;							//Increase the counter for the next byte
     182:	01 96       	adiw	r24, 0x01	; 1
	if(byteNumber < TWI_DATA_LENGTH - 1){	//If the next byte is NOT the last
     184:	12 f4       	brpl	.+4      	; 0x18a <k0x80+0x14>
		TWI_ACK();								//Continue with ACK
     186:	ed cf       	rjmp	.-38     	; 0x162 <TWI_ACK>
     188:	08 95       	ret
		}else{									//Else
		TWI_NACK();								//Continue and send NACK after the next byte to stop the slave
     18a:	f1 cf       	rjmp	.-30     	; 0x16e <TWI_NACK>
     18c:	08 95       	ret

0000018e <k0x88>:
     18e:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
	}
	return 0;
}

void k0x88( int byteNumber){
	receivedData[byteNumber] = TWDR;		//Read the last byte
     192:	84 58       	subi	r24, 0x84	; 132
     194:	9d 4f       	sbci	r25, 0xFD	; 253
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18
	TWI_NACK();
     19a:	e9 cf       	rjmp	.-46     	; 0x16e <TWI_NACK>
     19c:	08 95       	ret

0000019e <__vector_39>:
	DDRD=1;
}


//TWI functions
ISR(TWI_vect){
     19e:	1f 92       	push	r1
     1a0:	0f 92       	push	r0
     1a2:	0f b6       	in	r0, 0x3f	; 63
     1a4:	0f 92       	push	r0
     1a6:	11 24       	eor	r1, r1
     1a8:	0b b6       	in	r0, 0x3b	; 59
     1aa:	0f 92       	push	r0
     1ac:	2f 93       	push	r18
     1ae:	3f 93       	push	r19
     1b0:	4f 93       	push	r20
     1b2:	5f 93       	push	r21
     1b4:	6f 93       	push	r22
     1b6:	7f 93       	push	r23
     1b8:	8f 93       	push	r24
     1ba:	9f 93       	push	r25
     1bc:	af 93       	push	r26
     1be:	bf 93       	push	r27
     1c0:	ef 93       	push	r30
     1c2:	ff 93       	push	r31
	static int byteNumber = 0;					//Count the bytes received from the slave
	
	switch(TWSR){
     1c4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     1c8:	80 38       	cpi	r24, 0x80	; 128
     1ca:	49 f0       	breq	.+18     	; 0x1de <__vector_39+0x40>
     1cc:	88 38       	cpi	r24, 0x88	; 136
     1ce:	59 f0       	breq	.+22     	; 0x1e6 <__vector_39+0x48>
     1d0:	80 36       	cpi	r24, 0x60	; 96
     1d2:	61 f4       	brne	.+24     	; 0x1ec <__vector_39+0x4e>
		case 0x60:								//0x40 SLA+R has been received; ACK has been received
		/*byteNumber = 0;							//Reset byte counter
		TWI_ACK();*/
		k0x60(byteNumber);								//Continue TWI with acknowledgment enabled
     1d4:	80 e0       	ldi	r24, 0x00	; 0
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	c8 df       	rcall	.-112    	; 0x16a <k0x60>
		conversione();
     1da:	a5 df       	rcall	.-182    	; 0x126 <conversione>
     1dc:	07 c0       	rjmp	.+14     	; 0x1ec <__vector_39+0x4e>
		break;
     1de:	80 e0       	ldi	r24, 0x00	; 0
		if(byteNumber < TWI_DATA_LENGTH - 1){	//If the next byte is NOT the last
			TWI_ACK();								//Continue with ACK
			}else{									//Else
			TWI_NACK();								//Continue and send NACK after the next byte to stop the slave
		}*/
		k0x80(byteNumber);
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	c9 df       	rcall	.-110    	; 0x176 <k0x80>
     1e4:	03 c0       	rjmp	.+6      	; 0x1ec <__vector_39+0x4e>
		break;
		
		case 0x88:								//0x58 Data byte has been received; NOT ACK has been returned
		/*receivedData[byteNumber] = TWDR;		//Read the last byte
		TWI_Stop();*/								//And stop the TWI connection
		k0x88(byteNumber);
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	d1 df       	rcall	.-94     	; 0x18e <k0x88>
     1ec:	ff 91       	pop	r31
		break;
	}
}
     1ee:	ef 91       	pop	r30
     1f0:	bf 91       	pop	r27
     1f2:	af 91       	pop	r26
     1f4:	9f 91       	pop	r25
     1f6:	8f 91       	pop	r24
     1f8:	7f 91       	pop	r23
     1fa:	6f 91       	pop	r22
     1fc:	5f 91       	pop	r21
     1fe:	4f 91       	pop	r20
     200:	3f 91       	pop	r19
     202:	2f 91       	pop	r18
     204:	0f 90       	pop	r0
     206:	0b be       	out	0x3b, r0	; 59
     208:	0f 90       	pop	r0
     20a:	0f be       	out	0x3f, r0	; 63
     20c:	0f 90       	pop	r0
     20e:	1f 90       	pop	r1
     210:	18 95       	reti

00000212 <__vector_3>:
     212:	1f 92       	push	r1
void Set_PWM4(int duty_4){//Motore 4
	OCR3A = duty_4;
}

void Set_Servo(int duty_5){
	OCR4B = duty_5;
     214:	0f 92       	push	r0
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	0f 92       	push	r0
     21a:	11 24       	eor	r1, r1
     21c:	0b b6       	in	r0, 0x3b	; 59
     21e:	0f 92       	push	r0
     220:	2f 93       	push	r18
     222:	3f 93       	push	r19
     224:	4f 93       	push	r20
     226:	5f 93       	push	r21
     228:	6f 93       	push	r22
     22a:	7f 93       	push	r23
     22c:	8f 93       	push	r24
     22e:	9f 93       	push	r25
     230:	af 93       	push	r26
     232:	bf 93       	push	r27
     234:	ef 93       	push	r30
     236:	ff 93       	push	r31
     238:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     23c:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     240:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <t_1+0x1>
     244:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <t_1>
     248:	a0 91 14 02 	lds	r26, 0x0214	; 0x800214 <t_1>
     24c:	b0 91 15 02 	lds	r27, 0x0215	; 0x800215 <t_1+0x1>
     250:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <t_old_1>
     254:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <t_old_1+0x1>
     258:	a8 1b       	sub	r26, r24
     25a:	b9 0b       	sbc	r27, r25
     25c:	20 e4       	ldi	r18, 0x40	; 64
     25e:	32 e4       	ldi	r19, 0x42	; 66
     260:	4f e0       	ldi	r20, 0x0F	; 15
     262:	50 e0       	ldi	r21, 0x00	; 0
     264:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulshisi3>
     268:	24 e2       	ldi	r18, 0x24	; 36
     26a:	34 ef       	ldi	r19, 0xF4	; 244
     26c:	40 e0       	ldi	r20, 0x00	; 0
     26e:	50 e0       	ldi	r21, 0x00	; 0
     270:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__udivmodsi4>
     274:	30 93 8d 02 	sts	0x028D, r19	; 0x80028d <deltat_1+0x1>
     278:	20 93 8c 02 	sts	0x028C, r18	; 0x80028c <deltat_1>
     27c:	a0 91 8c 02 	lds	r26, 0x028C	; 0x80028c <deltat_1>
     280:	b0 91 8d 02 	lds	r27, 0x028D	; 0x80028d <deltat_1+0x1>
     284:	28 ee       	ldi	r18, 0xE8	; 232
     286:	33 e0       	ldi	r19, 0x03	; 3
     288:	0e 94 9e 0a 	call	0x153c	; 0x153c <__usmulhisi3>
     28c:	9b 01       	movw	r18, r22
     28e:	ac 01       	movw	r20, r24
     290:	60 e0       	ldi	r22, 0x00	; 0
     292:	7a ec       	ldi	r23, 0xCA	; 202
     294:	8a e9       	ldi	r24, 0x9A	; 154
     296:	9b e3       	ldi	r25, 0x3B	; 59
     298:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__udivmodsi4>
     29c:	30 93 9b 02 	sts	0x029B, r19	; 0x80029b <velocita_1+0x1>
     2a0:	20 93 9a 02 	sts	0x029A, r18	; 0x80029a <velocita_1>
     2a4:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <t_1>
     2a8:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <t_1+0x1>
     2ac:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <t_old_1+0x1>
     2b0:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <t_old_1>
     2b4:	ff 91       	pop	r31
     2b6:	ef 91       	pop	r30
     2b8:	bf 91       	pop	r27
     2ba:	af 91       	pop	r26
     2bc:	9f 91       	pop	r25
     2be:	8f 91       	pop	r24
     2c0:	7f 91       	pop	r23
     2c2:	6f 91       	pop	r22
     2c4:	5f 91       	pop	r21
     2c6:	4f 91       	pop	r20
     2c8:	3f 91       	pop	r19
     2ca:	2f 91       	pop	r18
     2cc:	0f 90       	pop	r0
     2ce:	0b be       	out	0x3b, r0	; 59
     2d0:	0f 90       	pop	r0
     2d2:	0f be       	out	0x3f, r0	; 63
     2d4:	0f 90       	pop	r0
     2d6:	1f 90       	pop	r1
     2d8:	18 95       	reti

000002da <__vector_4>:
     2da:	1f 92       	push	r1
     2dc:	0f 92       	push	r0
     2de:	0f b6       	in	r0, 0x3f	; 63
     2e0:	0f 92       	push	r0
     2e2:	11 24       	eor	r1, r1
     2e4:	0b b6       	in	r0, 0x3b	; 59
     2e6:	0f 92       	push	r0
     2e8:	2f 93       	push	r18
     2ea:	3f 93       	push	r19
     2ec:	4f 93       	push	r20
     2ee:	5f 93       	push	r21
     2f0:	6f 93       	push	r22
     2f2:	7f 93       	push	r23
     2f4:	8f 93       	push	r24
     2f6:	9f 93       	push	r25
     2f8:	af 93       	push	r26
     2fa:	bf 93       	push	r27
     2fc:	ef 93       	push	r30
     2fe:	ff 93       	push	r31
     300:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     304:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     308:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <t_2+0x1>
     30c:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <t_2>
     310:	a0 91 10 02 	lds	r26, 0x0210	; 0x800210 <t_2>
     314:	b0 91 11 02 	lds	r27, 0x0211	; 0x800211 <t_2+0x1>
     318:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <t_old_2>
     31c:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <t_old_2+0x1>
     320:	a8 1b       	sub	r26, r24
     322:	b9 0b       	sbc	r27, r25
     324:	20 e4       	ldi	r18, 0x40	; 64
     326:	32 e4       	ldi	r19, 0x42	; 66
     328:	4f e0       	ldi	r20, 0x0F	; 15
     32a:	50 e0       	ldi	r21, 0x00	; 0
     32c:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulshisi3>
     330:	24 e2       	ldi	r18, 0x24	; 36
     332:	34 ef       	ldi	r19, 0xF4	; 244
     334:	40 e0       	ldi	r20, 0x00	; 0
     336:	50 e0       	ldi	r21, 0x00	; 0
     338:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__udivmodsi4>
     33c:	30 93 a3 02 	sts	0x02A3, r19	; 0x8002a3 <deltat_2+0x1>
     340:	20 93 a2 02 	sts	0x02A2, r18	; 0x8002a2 <deltat_2>
     344:	a0 91 a2 02 	lds	r26, 0x02A2	; 0x8002a2 <deltat_2>
     348:	b0 91 a3 02 	lds	r27, 0x02A3	; 0x8002a3 <deltat_2+0x1>
     34c:	2c e6       	ldi	r18, 0x6C	; 108
     34e:	32 e0       	ldi	r19, 0x02	; 2
     350:	0e 94 9e 0a 	call	0x153c	; 0x153c <__usmulhisi3>
     354:	9b 01       	movw	r18, r22
     356:	ac 01       	movw	r20, r24
     358:	60 e0       	ldi	r22, 0x00	; 0
     35a:	7a ec       	ldi	r23, 0xCA	; 202
     35c:	8a e9       	ldi	r24, 0x9A	; 154
     35e:	9b e3       	ldi	r25, 0x3B	; 59
     360:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__udivmodsi4>
     364:	30 93 87 02 	sts	0x0287, r19	; 0x800287 <velocita_2+0x1>
     368:	20 93 86 02 	sts	0x0286, r18	; 0x800286 <velocita_2>
     36c:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <t_2>
     370:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <t_2+0x1>
     374:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <t_old_2+0x1>
     378:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <t_old_2>
     37c:	ff 91       	pop	r31
     37e:	ef 91       	pop	r30
     380:	bf 91       	pop	r27
     382:	af 91       	pop	r26
     384:	9f 91       	pop	r25
     386:	8f 91       	pop	r24
     388:	7f 91       	pop	r23
     38a:	6f 91       	pop	r22
     38c:	5f 91       	pop	r21
     38e:	4f 91       	pop	r20
     390:	3f 91       	pop	r19
     392:	2f 91       	pop	r18
     394:	0f 90       	pop	r0
     396:	0b be       	out	0x3b, r0	; 59
     398:	0f 90       	pop	r0
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	0f 90       	pop	r0
     39e:	1f 90       	pop	r1
     3a0:	18 95       	reti

000003a2 <__vector_5>:
     3a2:	1f 92       	push	r1
     3a4:	0f 92       	push	r0
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	0f 92       	push	r0
     3aa:	11 24       	eor	r1, r1
     3ac:	0b b6       	in	r0, 0x3b	; 59
     3ae:	0f 92       	push	r0
     3b0:	2f 93       	push	r18
     3b2:	3f 93       	push	r19
     3b4:	4f 93       	push	r20
     3b6:	5f 93       	push	r21
     3b8:	6f 93       	push	r22
     3ba:	7f 93       	push	r23
     3bc:	8f 93       	push	r24
     3be:	9f 93       	push	r25
     3c0:	af 93       	push	r26
     3c2:	bf 93       	push	r27
     3c4:	ef 93       	push	r30
     3c6:	ff 93       	push	r31
     3c8:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     3cc:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     3d0:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <t_3+0x1>
     3d4:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <t_3>
     3d8:	a0 91 0c 02 	lds	r26, 0x020C	; 0x80020c <t_3>
     3dc:	b0 91 0d 02 	lds	r27, 0x020D	; 0x80020d <t_3+0x1>
     3e0:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <t_old_3>
     3e4:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <t_old_3+0x1>
     3e8:	a8 1b       	sub	r26, r24
     3ea:	b9 0b       	sbc	r27, r25
     3ec:	20 e4       	ldi	r18, 0x40	; 64
     3ee:	32 e4       	ldi	r19, 0x42	; 66
     3f0:	4f e0       	ldi	r20, 0x0F	; 15
     3f2:	50 e0       	ldi	r21, 0x00	; 0
     3f4:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulshisi3>
     3f8:	24 e2       	ldi	r18, 0x24	; 36
     3fa:	34 ef       	ldi	r19, 0xF4	; 244
     3fc:	40 e0       	ldi	r20, 0x00	; 0
     3fe:	50 e0       	ldi	r21, 0x00	; 0
     400:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__udivmodsi4>
     404:	30 93 83 02 	sts	0x0283, r19	; 0x800283 <deltat_3+0x1>
     408:	20 93 82 02 	sts	0x0282, r18	; 0x800282 <deltat_3>
     40c:	a0 91 82 02 	lds	r26, 0x0282	; 0x800282 <deltat_3>
     410:	b0 91 83 02 	lds	r27, 0x0283	; 0x800283 <deltat_3+0x1>
     414:	2e ed       	ldi	r18, 0xDE	; 222
     416:	33 e0       	ldi	r19, 0x03	; 3
     418:	0e 94 9e 0a 	call	0x153c	; 0x153c <__usmulhisi3>
     41c:	9b 01       	movw	r18, r22
     41e:	ac 01       	movw	r20, r24
     420:	60 e0       	ldi	r22, 0x00	; 0
     422:	7a ec       	ldi	r23, 0xCA	; 202
     424:	8a e9       	ldi	r24, 0x9A	; 154
     426:	9b e3       	ldi	r25, 0x3B	; 59
     428:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__udivmodsi4>
     42c:	30 93 a1 02 	sts	0x02A1, r19	; 0x8002a1 <velocita_3+0x1>
     430:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <velocita_3>
     434:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <t_3>
     438:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <t_3+0x1>
     43c:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <t_old_3+0x1>
     440:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <t_old_3>
     444:	ff 91       	pop	r31
     446:	ef 91       	pop	r30
     448:	bf 91       	pop	r27
     44a:	af 91       	pop	r26
     44c:	9f 91       	pop	r25
     44e:	8f 91       	pop	r24
     450:	7f 91       	pop	r23
     452:	6f 91       	pop	r22
     454:	5f 91       	pop	r21
     456:	4f 91       	pop	r20
     458:	3f 91       	pop	r19
     45a:	2f 91       	pop	r18
     45c:	0f 90       	pop	r0
     45e:	0b be       	out	0x3b, r0	; 59
     460:	0f 90       	pop	r0
     462:	0f be       	out	0x3f, r0	; 63
     464:	0f 90       	pop	r0
     466:	1f 90       	pop	r1
     468:	18 95       	reti

0000046a <__vector_6>:
     46a:	1f 92       	push	r1
     46c:	0f 92       	push	r0
     46e:	0f b6       	in	r0, 0x3f	; 63
     470:	0f 92       	push	r0
     472:	11 24       	eor	r1, r1
     474:	0b b6       	in	r0, 0x3b	; 59
     476:	0f 92       	push	r0
     478:	2f 93       	push	r18
     47a:	3f 93       	push	r19
     47c:	4f 93       	push	r20
     47e:	5f 93       	push	r21
     480:	6f 93       	push	r22
     482:	7f 93       	push	r23
     484:	8f 93       	push	r24
     486:	9f 93       	push	r25
     488:	af 93       	push	r26
     48a:	bf 93       	push	r27
     48c:	ef 93       	push	r30
     48e:	ff 93       	push	r31
     490:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     494:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     498:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <t_4+0x1>
     49c:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <t_4>
     4a0:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <t_4>
     4a4:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <t_4+0x1>
     4a8:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
     4ac:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <__data_end+0x1>
     4b0:	a8 1b       	sub	r26, r24
     4b2:	b9 0b       	sbc	r27, r25
     4b4:	20 e4       	ldi	r18, 0x40	; 64
     4b6:	32 e4       	ldi	r19, 0x42	; 66
     4b8:	4f e0       	ldi	r20, 0x0F	; 15
     4ba:	50 e0       	ldi	r21, 0x00	; 0
     4bc:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulshisi3>
     4c0:	24 e2       	ldi	r18, 0x24	; 36
     4c2:	34 ef       	ldi	r19, 0xF4	; 244
     4c4:	40 e0       	ldi	r20, 0x00	; 0
     4c6:	50 e0       	ldi	r21, 0x00	; 0
     4c8:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__udivmodsi4>
     4cc:	30 93 9d 02 	sts	0x029D, r19	; 0x80029d <deltat_4+0x1>
     4d0:	20 93 9c 02 	sts	0x029C, r18	; 0x80029c <deltat_4>
     4d4:	a0 91 9c 02 	lds	r26, 0x029C	; 0x80029c <deltat_4>
     4d8:	b0 91 9d 02 	lds	r27, 0x029D	; 0x80029d <deltat_4+0x1>
     4dc:	2e ed       	ldi	r18, 0xDE	; 222
     4de:	33 e0       	ldi	r19, 0x03	; 3
     4e0:	0e 94 9e 0a 	call	0x153c	; 0x153c <__usmulhisi3>
     4e4:	9b 01       	movw	r18, r22
     4e6:	ac 01       	movw	r20, r24
     4e8:	60 e0       	ldi	r22, 0x00	; 0
     4ea:	7a ec       	ldi	r23, 0xCA	; 202
     4ec:	8a e9       	ldi	r24, 0x9A	; 154
     4ee:	9b e3       	ldi	r25, 0x3B	; 59
     4f0:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__udivmodsi4>
     4f4:	30 93 97 02 	sts	0x0297, r19	; 0x800297 <velocita_4+0x1>
     4f8:	20 93 96 02 	sts	0x0296, r18	; 0x800296 <velocita_4>
     4fc:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <t_4>
     500:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <t_4+0x1>
     504:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <__data_end+0x1>
     508:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
     50c:	ff 91       	pop	r31
     50e:	ef 91       	pop	r30
     510:	bf 91       	pop	r27
     512:	af 91       	pop	r26
     514:	9f 91       	pop	r25
     516:	8f 91       	pop	r24
     518:	7f 91       	pop	r23
     51a:	6f 91       	pop	r22
     51c:	5f 91       	pop	r21
     51e:	4f 91       	pop	r20
     520:	3f 91       	pop	r19
     522:	2f 91       	pop	r18
     524:	0f 90       	pop	r0
     526:	0b be       	out	0x3b, r0	; 59
     528:	0f 90       	pop	r0
     52a:	0f be       	out	0x3f, r0	; 63
     52c:	0f 90       	pop	r0
     52e:	1f 90       	pop	r1
     530:	18 95       	reti

00000532 <Init_PWM123>:
     532:	8b ea       	ldi	r24, 0xAB	; 171
     534:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
     538:	80 ef       	ldi	r24, 0xF0	; 240
     53a:	84 b9       	out	0x04, r24	; 4
     53c:	08 95       	ret

0000053e <Init_PWM4>:
     53e:	83 e8       	ldi	r24, 0x83	; 131
     540:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
     544:	88 e0       	ldi	r24, 0x08	; 8
     546:	8d b9       	out	0x0d, r24	; 13
     548:	08 95       	ret

0000054a <Start_PWM123>:
     54a:	8c e0       	ldi	r24, 0x0C	; 12
     54c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
     550:	08 95       	ret

00000552 <Start_PWM4>:
     552:	8c e0       	ldi	r24, 0x0C	; 12
     554:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
     558:	08 95       	ret

0000055a <Set_PWM1>:
     55a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
     55e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
     562:	08 95       	ret

00000564 <Set_PWM2>:
     564:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
     568:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
     56c:	08 95       	ret

0000056e <Set_PWM3>:
     56e:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x7c008d>
     572:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x7c008c>
     576:	08 95       	ret

00000578 <Set_PWM4>:
     578:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     57c:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
     580:	08 95       	ret

00000582 <PID1>:
}

void PID1(){//pid motore 1
	e_1 = (double) (SET_POINT_VELOCITA - velocita_1);
     582:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <velocita_1>
     586:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <velocita_1+0x1>
     58a:	07 2e       	mov	r0, r23
     58c:	00 0c       	add	r0, r0
     58e:	88 0b       	sbc	r24, r24
     590:	99 0b       	sbc	r25, r25
     592:	9b d6       	rcall	.+3382   	; 0x12ca <__floatsisf>
     594:	9b 01       	movw	r18, r22
     596:	ac 01       	movw	r20, r24
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	88 ec       	ldi	r24, 0xC8	; 200
     59e:	92 e4       	ldi	r25, 0x42	; 66
     5a0:	f8 d5       	rcall	.+3056   	; 0x1192 <__subsf3>
     5a2:	60 93 72 02 	sts	0x0272, r22	; 0x800272 <e_1>
     5a6:	70 93 73 02 	sts	0x0273, r23	; 0x800273 <e_1+0x1>
     5aa:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <e_1+0x2>
     5ae:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <e_1+0x3>
	p_1 = e_1*KP;
     5b2:	60 91 72 02 	lds	r22, 0x0272	; 0x800272 <e_1>
     5b6:	70 91 73 02 	lds	r23, 0x0273	; 0x800273 <e_1+0x1>
     5ba:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <e_1+0x2>
     5be:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <e_1+0x3>
     5c2:	23 ec       	ldi	r18, 0xC3	; 195
     5c4:	35 ef       	ldi	r19, 0xF5	; 245
     5c6:	48 e8       	ldi	r20, 0x88	; 136
     5c8:	50 e4       	ldi	r21, 0x40	; 64
     5ca:	33 d7       	rcall	.+3686   	; 0x1432 <__mulsf3>
     5cc:	60 93 6e 02 	sts	0x026E, r22	; 0x80026e <p_1>
     5d0:	70 93 6f 02 	sts	0x026F, r23	; 0x80026f <p_1+0x1>
     5d4:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <p_1+0x2>
     5d8:	90 93 71 02 	sts	0x0271, r25	; 0x800271 <p_1+0x3>
	i_1= i_old_1 + (KI*e_1);
     5dc:	60 91 72 02 	lds	r22, 0x0272	; 0x800272 <e_1>
     5e0:	70 91 73 02 	lds	r23, 0x0273	; 0x800273 <e_1+0x1>
     5e4:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <e_1+0x2>
     5e8:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <e_1+0x3>
     5ec:	23 ee       	ldi	r18, 0xE3	; 227
     5ee:	35 ea       	ldi	r19, 0xA5	; 165
     5f0:	4b e1       	ldi	r20, 0x1B	; 27
     5f2:	5e e3       	ldi	r21, 0x3E	; 62
     5f4:	1e d7       	rcall	.+3644   	; 0x1432 <__mulsf3>
     5f6:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <i_old_1>
     5fa:	30 91 63 02 	lds	r19, 0x0263	; 0x800263 <i_old_1+0x1>
     5fe:	40 91 64 02 	lds	r20, 0x0264	; 0x800264 <i_old_1+0x2>
     602:	50 91 65 02 	lds	r21, 0x0265	; 0x800265 <i_old_1+0x3>
     606:	c6 d5       	rcall	.+2956   	; 0x1194 <__addsf3>
     608:	60 93 6a 02 	sts	0x026A, r22	; 0x80026a <i_1>
     60c:	70 93 6b 02 	sts	0x026B, r23	; 0x80026b <i_1+0x1>
     610:	80 93 6c 02 	sts	0x026C, r24	; 0x80026c <i_1+0x2>
     614:	90 93 6d 02 	sts	0x026D, r25	; 0x80026d <i_1+0x3>
	d_1 = (e_1 - e_old_1) * KD;
     618:	60 91 72 02 	lds	r22, 0x0272	; 0x800272 <e_1>
     61c:	70 91 73 02 	lds	r23, 0x0273	; 0x800273 <e_1+0x1>
     620:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <e_1+0x2>
     624:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <e_1+0x3>
     628:	20 91 92 02 	lds	r18, 0x0292	; 0x800292 <e_old_1>
     62c:	30 91 93 02 	lds	r19, 0x0293	; 0x800293 <e_old_1+0x1>
     630:	40 91 94 02 	lds	r20, 0x0294	; 0x800294 <e_old_1+0x2>
     634:	50 91 95 02 	lds	r21, 0x0295	; 0x800295 <e_old_1+0x3>
     638:	ac d5       	rcall	.+2904   	; 0x1192 <__subsf3>
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	a9 01       	movw	r20, r18
     640:	f8 d6       	rcall	.+3568   	; 0x1432 <__mulsf3>
     642:	60 93 66 02 	sts	0x0266, r22	; 0x800266 <d_1>
     646:	70 93 67 02 	sts	0x0267, r23	; 0x800267 <d_1+0x1>
     64a:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <d_1+0x2>
     64e:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <d_1+0x3>
	if(i_1>I_MAX){
     652:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <i_1>
     656:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <i_1+0x1>
     65a:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <i_1+0x2>
     65e:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <i_1+0x3>
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	30 ec       	ldi	r19, 0xC0	; 192
     666:	4f e7       	ldi	r20, 0x7F	; 127
     668:	54 e4       	ldi	r21, 0x44	; 68
     66a:	df d6       	rcall	.+3518   	; 0x142a <__gesf2>
     66c:	18 16       	cp	r1, r24
     66e:	64 f4       	brge	.+24     	; 0x688 <PID1+0x106>
		i_1 = I_MAX;
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	90 ec       	ldi	r25, 0xC0	; 192
     674:	af e7       	ldi	r26, 0x7F	; 127
     676:	b4 e4       	ldi	r27, 0x44	; 68
     678:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <i_1>
     67c:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <i_1+0x1>
     680:	a0 93 6c 02 	sts	0x026C, r26	; 0x80026c <i_1+0x2>
     684:	b0 93 6d 02 	sts	0x026D, r27	; 0x80026d <i_1+0x3>
	}
	if(i_1<I_MIN){
     688:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <i_1>
     68c:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <i_1+0x1>
     690:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <i_1+0x2>
     694:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <i_1+0x3>
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	a9 01       	movw	r20, r18
     69e:	de d5       	rcall	.+3004   	; 0x125c <__cmpsf2>
     6a0:	88 23       	and	r24, r24
     6a2:	44 f4       	brge	.+16     	; 0x6b4 <PID1+0x132>
		i_1=I_MIN;
     6a4:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <i_1>
     6a8:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <i_1+0x1>
     6ac:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <i_1+0x2>
     6b0:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <i_1+0x3>
	}
	i_old_1 = i_1;
     6b4:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <i_1>
     6b8:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <i_1+0x1>
     6bc:	a0 91 6c 02 	lds	r26, 0x026C	; 0x80026c <i_1+0x2>
     6c0:	b0 91 6d 02 	lds	r27, 0x026D	; 0x80026d <i_1+0x3>
     6c4:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <i_old_1>
     6c8:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <i_old_1+0x1>
     6cc:	a0 93 64 02 	sts	0x0264, r26	; 0x800264 <i_old_1+0x2>
     6d0:	b0 93 65 02 	sts	0x0265, r27	; 0x800265 <i_old_1+0x3>
	e_old_1 = e_1;
     6d4:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <e_1>
     6d8:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <e_1+0x1>
     6dc:	a0 91 74 02 	lds	r26, 0x0274	; 0x800274 <e_1+0x2>
     6e0:	b0 91 75 02 	lds	r27, 0x0275	; 0x800275 <e_1+0x3>
     6e4:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <e_old_1>
     6e8:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <e_old_1+0x1>
     6ec:	a0 93 94 02 	sts	0x0294, r26	; 0x800294 <e_old_1+0x2>
     6f0:	b0 93 95 02 	sts	0x0295, r27	; 0x800295 <e_old_1+0x3>
	pid1 = p_1+i_1+d_1;
     6f4:	60 91 6e 02 	lds	r22, 0x026E	; 0x80026e <p_1>
     6f8:	70 91 6f 02 	lds	r23, 0x026F	; 0x80026f <p_1+0x1>
     6fc:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <p_1+0x2>
     700:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <p_1+0x3>
     704:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <i_1>
     708:	30 91 6b 02 	lds	r19, 0x026B	; 0x80026b <i_1+0x1>
     70c:	40 91 6c 02 	lds	r20, 0x026C	; 0x80026c <i_1+0x2>
     710:	50 91 6d 02 	lds	r21, 0x026D	; 0x80026d <i_1+0x3>
     714:	3f d5       	rcall	.+2686   	; 0x1194 <__addsf3>
     716:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <d_1>
     71a:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <d_1+0x1>
     71e:	40 91 68 02 	lds	r20, 0x0268	; 0x800268 <d_1+0x2>
     722:	50 91 69 02 	lds	r21, 0x0269	; 0x800269 <d_1+0x3>
     726:	36 d5       	rcall	.+2668   	; 0x1194 <__addsf3>
     728:	60 93 5e 02 	sts	0x025E, r22	; 0x80025e <pid1>
     72c:	70 93 5f 02 	sts	0x025F, r23	; 0x80025f <pid1+0x1>
     730:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <pid1+0x2>
     734:	90 93 61 02 	sts	0x0261, r25	; 0x800261 <pid1+0x3>
	if(pid1<0){
     738:	60 91 5e 02 	lds	r22, 0x025E	; 0x80025e <pid1>
     73c:	70 91 5f 02 	lds	r23, 0x025F	; 0x80025f <pid1+0x1>
     740:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <pid1+0x2>
     744:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <pid1+0x3>
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	a9 01       	movw	r20, r18
     74e:	86 d5       	rcall	.+2828   	; 0x125c <__cmpsf2>
     750:	88 23       	and	r24, r24
     752:	44 f4       	brge	.+16     	; 0x764 <PID1+0x1e2>
		pid1 = 0;
     754:	10 92 5e 02 	sts	0x025E, r1	; 0x80025e <pid1>
     758:	10 92 5f 02 	sts	0x025F, r1	; 0x80025f <pid1+0x1>
     75c:	10 92 60 02 	sts	0x0260, r1	; 0x800260 <pid1+0x2>
     760:	10 92 61 02 	sts	0x0261, r1	; 0x800261 <pid1+0x3>
	}
	if(pid1>1023){
     764:	60 91 5e 02 	lds	r22, 0x025E	; 0x80025e <pid1>
     768:	70 91 5f 02 	lds	r23, 0x025F	; 0x80025f <pid1+0x1>
     76c:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <pid1+0x2>
     770:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <pid1+0x3>
     774:	20 e0       	ldi	r18, 0x00	; 0
     776:	30 ec       	ldi	r19, 0xC0	; 192
     778:	4f e7       	ldi	r20, 0x7F	; 127
     77a:	54 e4       	ldi	r21, 0x44	; 68
     77c:	56 d6       	rcall	.+3244   	; 0x142a <__gesf2>
     77e:	18 16       	cp	r1, r24
     780:	64 f4       	brge	.+24     	; 0x79a <PID1+0x218>
		pid1 = 1023;
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	90 ec       	ldi	r25, 0xC0	; 192
     786:	af e7       	ldi	r26, 0x7F	; 127
     788:	b4 e4       	ldi	r27, 0x44	; 68
     78a:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <pid1>
     78e:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <pid1+0x1>
     792:	a0 93 60 02 	sts	0x0260, r26	; 0x800260 <pid1+0x2>
	}
	Set_PWM1((int) pid1);
     796:	b0 93 61 02 	sts	0x0261, r27	; 0x800261 <pid1+0x3>
     79a:	60 91 5e 02 	lds	r22, 0x025E	; 0x80025e <pid1>
     79e:	70 91 5f 02 	lds	r23, 0x025F	; 0x80025f <pid1+0x1>
     7a2:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <pid1+0x2>
     7a6:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <pid1+0x3>
     7aa:	5c d5       	rcall	.+2744   	; 0x1264 <__fixsfsi>
     7ac:	cb 01       	movw	r24, r22
     7ae:	d5 ce       	rjmp	.-598    	; 0x55a <Set_PWM1>
     7b0:	08 95       	ret

000007b2 <PID2>:
}

void PID2(){//pid motore 2
	e_2 = (double) (SET_POINT_VELOCITA - velocita_2);
     7b2:	60 91 86 02 	lds	r22, 0x0286	; 0x800286 <velocita_2>
     7b6:	70 91 87 02 	lds	r23, 0x0287	; 0x800287 <velocita_2+0x1>
     7ba:	07 2e       	mov	r0, r23
     7bc:	00 0c       	add	r0, r0
     7be:	88 0b       	sbc	r24, r24
     7c0:	99 0b       	sbc	r25, r25
     7c2:	83 d5       	rcall	.+2822   	; 0x12ca <__floatsisf>
     7c4:	9b 01       	movw	r18, r22
     7c6:	ac 01       	movw	r20, r24
     7c8:	60 e0       	ldi	r22, 0x00	; 0
     7ca:	70 e0       	ldi	r23, 0x00	; 0
     7cc:	88 ec       	ldi	r24, 0xC8	; 200
     7ce:	92 e4       	ldi	r25, 0x42	; 66
     7d0:	e0 d4       	rcall	.+2496   	; 0x1192 <__subsf3>
     7d2:	60 93 5a 02 	sts	0x025A, r22	; 0x80025a <e_2>
     7d6:	70 93 5b 02 	sts	0x025B, r23	; 0x80025b <e_2+0x1>
     7da:	80 93 5c 02 	sts	0x025C, r24	; 0x80025c <e_2+0x2>
     7de:	90 93 5d 02 	sts	0x025D, r25	; 0x80025d <e_2+0x3>
	p_2 = e_2*KP;
     7e2:	60 91 5a 02 	lds	r22, 0x025A	; 0x80025a <e_2>
     7e6:	70 91 5b 02 	lds	r23, 0x025B	; 0x80025b <e_2+0x1>
     7ea:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <e_2+0x2>
     7ee:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <e_2+0x3>
     7f2:	23 ec       	ldi	r18, 0xC3	; 195
     7f4:	35 ef       	ldi	r19, 0xF5	; 245
     7f6:	48 e8       	ldi	r20, 0x88	; 136
     7f8:	50 e4       	ldi	r21, 0x40	; 64
     7fa:	1b d6       	rcall	.+3126   	; 0x1432 <__mulsf3>
     7fc:	60 93 56 02 	sts	0x0256, r22	; 0x800256 <p_2>
     800:	70 93 57 02 	sts	0x0257, r23	; 0x800257 <p_2+0x1>
     804:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <p_2+0x2>
     808:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <p_2+0x3>
	i_2= i_old_2 + (KI*e_2);
     80c:	60 91 5a 02 	lds	r22, 0x025A	; 0x80025a <e_2>
     810:	70 91 5b 02 	lds	r23, 0x025B	; 0x80025b <e_2+0x1>
     814:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <e_2+0x2>
     818:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <e_2+0x3>
     81c:	23 ee       	ldi	r18, 0xE3	; 227
     81e:	35 ea       	ldi	r19, 0xA5	; 165
     820:	4b e1       	ldi	r20, 0x1B	; 27
     822:	5e e3       	ldi	r21, 0x3E	; 62
     824:	06 d6       	rcall	.+3084   	; 0x1432 <__mulsf3>
     826:	20 91 4a 02 	lds	r18, 0x024A	; 0x80024a <i_old_2>
     82a:	30 91 4b 02 	lds	r19, 0x024B	; 0x80024b <i_old_2+0x1>
     82e:	40 91 4c 02 	lds	r20, 0x024C	; 0x80024c <i_old_2+0x2>
     832:	50 91 4d 02 	lds	r21, 0x024D	; 0x80024d <i_old_2+0x3>
     836:	ae d4       	rcall	.+2396   	; 0x1194 <__addsf3>
     838:	60 93 52 02 	sts	0x0252, r22	; 0x800252 <i_2>
     83c:	70 93 53 02 	sts	0x0253, r23	; 0x800253 <i_2+0x1>
     840:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <i_2+0x2>
     844:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <i_2+0x3>
	d_2 = (e_2 - e_old_2) * KD;
     848:	60 91 5a 02 	lds	r22, 0x025A	; 0x80025a <e_2>
     84c:	70 91 5b 02 	lds	r23, 0x025B	; 0x80025b <e_2+0x1>
     850:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <e_2+0x2>
     854:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <e_2+0x3>
     858:	20 91 7e 02 	lds	r18, 0x027E	; 0x80027e <e_old_2>
     85c:	30 91 7f 02 	lds	r19, 0x027F	; 0x80027f <e_old_2+0x1>
     860:	40 91 80 02 	lds	r20, 0x0280	; 0x800280 <e_old_2+0x2>
     864:	50 91 81 02 	lds	r21, 0x0281	; 0x800281 <e_old_2+0x3>
     868:	94 d4       	rcall	.+2344   	; 0x1192 <__subsf3>
     86a:	20 e0       	ldi	r18, 0x00	; 0
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	a9 01       	movw	r20, r18
     870:	e0 d5       	rcall	.+3008   	; 0x1432 <__mulsf3>
     872:	60 93 4e 02 	sts	0x024E, r22	; 0x80024e <d_2>
     876:	70 93 4f 02 	sts	0x024F, r23	; 0x80024f <d_2+0x1>
     87a:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <d_2+0x2>
     87e:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <d_2+0x3>
	if(i_2>I_MAX){
     882:	60 91 52 02 	lds	r22, 0x0252	; 0x800252 <i_2>
     886:	70 91 53 02 	lds	r23, 0x0253	; 0x800253 <i_2+0x1>
     88a:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <i_2+0x2>
     88e:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <i_2+0x3>
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 ec       	ldi	r19, 0xC0	; 192
     896:	4f e7       	ldi	r20, 0x7F	; 127
     898:	54 e4       	ldi	r21, 0x44	; 68
     89a:	c7 d5       	rcall	.+2958   	; 0x142a <__gesf2>
     89c:	18 16       	cp	r1, r24
     89e:	64 f4       	brge	.+24     	; 0x8b8 <PID2+0x106>
		i_2 = I_MAX;
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	90 ec       	ldi	r25, 0xC0	; 192
     8a4:	af e7       	ldi	r26, 0x7F	; 127
     8a6:	b4 e4       	ldi	r27, 0x44	; 68
     8a8:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <i_2>
     8ac:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <i_2+0x1>
     8b0:	a0 93 54 02 	sts	0x0254, r26	; 0x800254 <i_2+0x2>
     8b4:	b0 93 55 02 	sts	0x0255, r27	; 0x800255 <i_2+0x3>
	}
	if(i_2<I_MIN){
     8b8:	60 91 52 02 	lds	r22, 0x0252	; 0x800252 <i_2>
     8bc:	70 91 53 02 	lds	r23, 0x0253	; 0x800253 <i_2+0x1>
     8c0:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <i_2+0x2>
     8c4:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <i_2+0x3>
     8c8:	20 e0       	ldi	r18, 0x00	; 0
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	a9 01       	movw	r20, r18
     8ce:	c6 d4       	rcall	.+2444   	; 0x125c <__cmpsf2>
     8d0:	88 23       	and	r24, r24
     8d2:	44 f4       	brge	.+16     	; 0x8e4 <PID2+0x132>
		i_2=I_MIN;
     8d4:	10 92 52 02 	sts	0x0252, r1	; 0x800252 <i_2>
     8d8:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <i_2+0x1>
     8dc:	10 92 54 02 	sts	0x0254, r1	; 0x800254 <i_2+0x2>
     8e0:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <i_2+0x3>
	}
	i_old_2 = i_2;
     8e4:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <i_2>
     8e8:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <i_2+0x1>
     8ec:	a0 91 54 02 	lds	r26, 0x0254	; 0x800254 <i_2+0x2>
     8f0:	b0 91 55 02 	lds	r27, 0x0255	; 0x800255 <i_2+0x3>
     8f4:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <i_old_2>
     8f8:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <i_old_2+0x1>
     8fc:	a0 93 4c 02 	sts	0x024C, r26	; 0x80024c <i_old_2+0x2>
     900:	b0 93 4d 02 	sts	0x024D, r27	; 0x80024d <i_old_2+0x3>
	e_old_2 = e_2;
     904:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <e_2>
     908:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <e_2+0x1>
     90c:	a0 91 5c 02 	lds	r26, 0x025C	; 0x80025c <e_2+0x2>
     910:	b0 91 5d 02 	lds	r27, 0x025D	; 0x80025d <e_2+0x3>
     914:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <e_old_2>
     918:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <e_old_2+0x1>
     91c:	a0 93 80 02 	sts	0x0280, r26	; 0x800280 <e_old_2+0x2>
     920:	b0 93 81 02 	sts	0x0281, r27	; 0x800281 <e_old_2+0x3>
	pid2 = p_2+i_2+d_2;
     924:	60 91 56 02 	lds	r22, 0x0256	; 0x800256 <p_2>
     928:	70 91 57 02 	lds	r23, 0x0257	; 0x800257 <p_2+0x1>
     92c:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <p_2+0x2>
     930:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <p_2+0x3>
     934:	20 91 52 02 	lds	r18, 0x0252	; 0x800252 <i_2>
     938:	30 91 53 02 	lds	r19, 0x0253	; 0x800253 <i_2+0x1>
     93c:	40 91 54 02 	lds	r20, 0x0254	; 0x800254 <i_2+0x2>
     940:	50 91 55 02 	lds	r21, 0x0255	; 0x800255 <i_2+0x3>
     944:	27 d4       	rcall	.+2126   	; 0x1194 <__addsf3>
     946:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <d_2>
     94a:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <d_2+0x1>
     94e:	40 91 50 02 	lds	r20, 0x0250	; 0x800250 <d_2+0x2>
     952:	50 91 51 02 	lds	r21, 0x0251	; 0x800251 <d_2+0x3>
     956:	1e d4       	rcall	.+2108   	; 0x1194 <__addsf3>
     958:	60 93 46 02 	sts	0x0246, r22	; 0x800246 <pid2>
     95c:	70 93 47 02 	sts	0x0247, r23	; 0x800247 <pid2+0x1>
     960:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <pid2+0x2>
     964:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <pid2+0x3>
	if(pid2<0){
     968:	60 91 46 02 	lds	r22, 0x0246	; 0x800246 <pid2>
     96c:	70 91 47 02 	lds	r23, 0x0247	; 0x800247 <pid2+0x1>
     970:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <pid2+0x2>
     974:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <pid2+0x3>
     978:	20 e0       	ldi	r18, 0x00	; 0
     97a:	30 e0       	ldi	r19, 0x00	; 0
     97c:	a9 01       	movw	r20, r18
     97e:	6e d4       	rcall	.+2268   	; 0x125c <__cmpsf2>
     980:	88 23       	and	r24, r24
     982:	44 f4       	brge	.+16     	; 0x994 <PID2+0x1e2>
		pid2 = 0;
     984:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <pid2>
     988:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <pid2+0x1>
     98c:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <pid2+0x2>
     990:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <pid2+0x3>
	}
	if(pid2>1023){
     994:	60 91 46 02 	lds	r22, 0x0246	; 0x800246 <pid2>
     998:	70 91 47 02 	lds	r23, 0x0247	; 0x800247 <pid2+0x1>
     99c:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <pid2+0x2>
     9a0:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <pid2+0x3>
     9a4:	20 e0       	ldi	r18, 0x00	; 0
     9a6:	30 ec       	ldi	r19, 0xC0	; 192
     9a8:	4f e7       	ldi	r20, 0x7F	; 127
     9aa:	54 e4       	ldi	r21, 0x44	; 68
     9ac:	3e d5       	rcall	.+2684   	; 0x142a <__gesf2>
     9ae:	18 16       	cp	r1, r24
     9b0:	64 f4       	brge	.+24     	; 0x9ca <PID2+0x218>
		pid2 = 1023;
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	90 ec       	ldi	r25, 0xC0	; 192
     9b6:	af e7       	ldi	r26, 0x7F	; 127
     9b8:	b4 e4       	ldi	r27, 0x44	; 68
     9ba:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <pid2>
     9be:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <pid2+0x1>
     9c2:	a0 93 48 02 	sts	0x0248, r26	; 0x800248 <pid2+0x2>
	}
	Set_PWM2((int) pid2);
     9c6:	b0 93 49 02 	sts	0x0249, r27	; 0x800249 <pid2+0x3>
     9ca:	60 91 46 02 	lds	r22, 0x0246	; 0x800246 <pid2>
     9ce:	70 91 47 02 	lds	r23, 0x0247	; 0x800247 <pid2+0x1>
     9d2:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <pid2+0x2>
     9d6:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <pid2+0x3>
     9da:	44 d4       	rcall	.+2184   	; 0x1264 <__fixsfsi>
     9dc:	cb 01       	movw	r24, r22
     9de:	c2 cd       	rjmp	.-1148   	; 0x564 <Set_PWM2>
     9e0:	08 95       	ret

000009e2 <PID3>:
}

void PID3(){//pid motore 3
	e_3= (double) (SET_POINT_VELOCITA - velocita_3);
     9e2:	60 91 a0 02 	lds	r22, 0x02A0	; 0x8002a0 <velocita_3>
     9e6:	70 91 a1 02 	lds	r23, 0x02A1	; 0x8002a1 <velocita_3+0x1>
     9ea:	07 2e       	mov	r0, r23
     9ec:	00 0c       	add	r0, r0
     9ee:	88 0b       	sbc	r24, r24
     9f0:	99 0b       	sbc	r25, r25
     9f2:	6b d4       	rcall	.+2262   	; 0x12ca <__floatsisf>
     9f4:	9b 01       	movw	r18, r22
     9f6:	ac 01       	movw	r20, r24
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	88 ec       	ldi	r24, 0xC8	; 200
     9fe:	92 e4       	ldi	r25, 0x42	; 66
     a00:	c8 d3       	rcall	.+1936   	; 0x1192 <__subsf3>
     a02:	60 93 42 02 	sts	0x0242, r22	; 0x800242 <e_3>
     a06:	70 93 43 02 	sts	0x0243, r23	; 0x800243 <e_3+0x1>
     a0a:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <e_3+0x2>
     a0e:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <e_3+0x3>
	p_3 = e_3*KP;
     a12:	60 91 42 02 	lds	r22, 0x0242	; 0x800242 <e_3>
     a16:	70 91 43 02 	lds	r23, 0x0243	; 0x800243 <e_3+0x1>
     a1a:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <e_3+0x2>
     a1e:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <e_3+0x3>
     a22:	23 ec       	ldi	r18, 0xC3	; 195
     a24:	35 ef       	ldi	r19, 0xF5	; 245
     a26:	48 e8       	ldi	r20, 0x88	; 136
     a28:	50 e4       	ldi	r21, 0x40	; 64
     a2a:	03 d5       	rcall	.+2566   	; 0x1432 <__mulsf3>
     a2c:	60 93 3e 02 	sts	0x023E, r22	; 0x80023e <p_3>
     a30:	70 93 3f 02 	sts	0x023F, r23	; 0x80023f <p_3+0x1>
     a34:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <p_3+0x2>
     a38:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <p_3+0x3>
	i_3= i_old_3 + (KI*e_3);
     a3c:	60 91 42 02 	lds	r22, 0x0242	; 0x800242 <e_3>
     a40:	70 91 43 02 	lds	r23, 0x0243	; 0x800243 <e_3+0x1>
     a44:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <e_3+0x2>
     a48:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <e_3+0x3>
     a4c:	23 ee       	ldi	r18, 0xE3	; 227
     a4e:	35 ea       	ldi	r19, 0xA5	; 165
     a50:	4b e1       	ldi	r20, 0x1B	; 27
     a52:	5e e3       	ldi	r21, 0x3E	; 62
     a54:	ee d4       	rcall	.+2524   	; 0x1432 <__mulsf3>
     a56:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <i_old_3>
     a5a:	30 91 33 02 	lds	r19, 0x0233	; 0x800233 <i_old_3+0x1>
     a5e:	40 91 34 02 	lds	r20, 0x0234	; 0x800234 <i_old_3+0x2>
     a62:	50 91 35 02 	lds	r21, 0x0235	; 0x800235 <i_old_3+0x3>
     a66:	96 d3       	rcall	.+1836   	; 0x1194 <__addsf3>
     a68:	60 93 3a 02 	sts	0x023A, r22	; 0x80023a <i_3>
     a6c:	70 93 3b 02 	sts	0x023B, r23	; 0x80023b <i_3+0x1>
     a70:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <i_3+0x2>
     a74:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <i_3+0x3>
	d_3 = (e_3 - e_old_3) * KD;
     a78:	60 91 42 02 	lds	r22, 0x0242	; 0x800242 <e_3>
     a7c:	70 91 43 02 	lds	r23, 0x0243	; 0x800243 <e_3+0x1>
     a80:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <e_3+0x2>
     a84:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <e_3+0x3>
     a88:	20 91 8e 02 	lds	r18, 0x028E	; 0x80028e <e_old_3>
     a8c:	30 91 8f 02 	lds	r19, 0x028F	; 0x80028f <e_old_3+0x1>
     a90:	40 91 90 02 	lds	r20, 0x0290	; 0x800290 <e_old_3+0x2>
     a94:	50 91 91 02 	lds	r21, 0x0291	; 0x800291 <e_old_3+0x3>
     a98:	7c d3       	rcall	.+1784   	; 0x1192 <__subsf3>
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	a9 01       	movw	r20, r18
     aa0:	c8 d4       	rcall	.+2448   	; 0x1432 <__mulsf3>
     aa2:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <d_3>
     aa6:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <d_3+0x1>
     aaa:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <d_3+0x2>
     aae:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <d_3+0x3>
	if(i_3>I_MAX){
     ab2:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <i_3>
     ab6:	70 91 3b 02 	lds	r23, 0x023B	; 0x80023b <i_3+0x1>
     aba:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <i_3+0x2>
     abe:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <i_3+0x3>
     ac2:	20 e0       	ldi	r18, 0x00	; 0
     ac4:	30 ec       	ldi	r19, 0xC0	; 192
     ac6:	4f e7       	ldi	r20, 0x7F	; 127
     ac8:	54 e4       	ldi	r21, 0x44	; 68
     aca:	af d4       	rcall	.+2398   	; 0x142a <__gesf2>
     acc:	18 16       	cp	r1, r24
     ace:	64 f4       	brge	.+24     	; 0xae8 <PID3+0x106>
		i_3 = I_MAX;
     ad0:	80 e0       	ldi	r24, 0x00	; 0
     ad2:	90 ec       	ldi	r25, 0xC0	; 192
     ad4:	af e7       	ldi	r26, 0x7F	; 127
     ad6:	b4 e4       	ldi	r27, 0x44	; 68
     ad8:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <i_3>
     adc:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <i_3+0x1>
     ae0:	a0 93 3c 02 	sts	0x023C, r26	; 0x80023c <i_3+0x2>
     ae4:	b0 93 3d 02 	sts	0x023D, r27	; 0x80023d <i_3+0x3>
	}
	if(i_3<I_MIN){
     ae8:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <i_3>
     aec:	70 91 3b 02 	lds	r23, 0x023B	; 0x80023b <i_3+0x1>
     af0:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <i_3+0x2>
     af4:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <i_3+0x3>
     af8:	20 e0       	ldi	r18, 0x00	; 0
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	a9 01       	movw	r20, r18
     afe:	ae d3       	rcall	.+1884   	; 0x125c <__cmpsf2>
     b00:	88 23       	and	r24, r24
     b02:	44 f4       	brge	.+16     	; 0xb14 <PID3+0x132>
		i_3=I_MIN;
     b04:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <i_3>
     b08:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <i_3+0x1>
     b0c:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <i_3+0x2>
     b10:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <i_3+0x3>
	}
	i_old_3 = i_3;
     b14:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <i_3>
     b18:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <i_3+0x1>
     b1c:	a0 91 3c 02 	lds	r26, 0x023C	; 0x80023c <i_3+0x2>
     b20:	b0 91 3d 02 	lds	r27, 0x023D	; 0x80023d <i_3+0x3>
     b24:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <i_old_3>
     b28:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <i_old_3+0x1>
     b2c:	a0 93 34 02 	sts	0x0234, r26	; 0x800234 <i_old_3+0x2>
     b30:	b0 93 35 02 	sts	0x0235, r27	; 0x800235 <i_old_3+0x3>
	e_old_3 = e_3;
     b34:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <e_3>
     b38:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <e_3+0x1>
     b3c:	a0 91 44 02 	lds	r26, 0x0244	; 0x800244 <e_3+0x2>
     b40:	b0 91 45 02 	lds	r27, 0x0245	; 0x800245 <e_3+0x3>
     b44:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <e_old_3>
     b48:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <e_old_3+0x1>
     b4c:	a0 93 90 02 	sts	0x0290, r26	; 0x800290 <e_old_3+0x2>
     b50:	b0 93 91 02 	sts	0x0291, r27	; 0x800291 <e_old_3+0x3>
	pid3 = p_3+i_3+d_3;
     b54:	60 91 3e 02 	lds	r22, 0x023E	; 0x80023e <p_3>
     b58:	70 91 3f 02 	lds	r23, 0x023F	; 0x80023f <p_3+0x1>
     b5c:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <p_3+0x2>
     b60:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <p_3+0x3>
     b64:	20 91 3a 02 	lds	r18, 0x023A	; 0x80023a <i_3>
     b68:	30 91 3b 02 	lds	r19, 0x023B	; 0x80023b <i_3+0x1>
     b6c:	40 91 3c 02 	lds	r20, 0x023C	; 0x80023c <i_3+0x2>
     b70:	50 91 3d 02 	lds	r21, 0x023D	; 0x80023d <i_3+0x3>
     b74:	0f d3       	rcall	.+1566   	; 0x1194 <__addsf3>
     b76:	20 91 36 02 	lds	r18, 0x0236	; 0x800236 <d_3>
     b7a:	30 91 37 02 	lds	r19, 0x0237	; 0x800237 <d_3+0x1>
     b7e:	40 91 38 02 	lds	r20, 0x0238	; 0x800238 <d_3+0x2>
     b82:	50 91 39 02 	lds	r21, 0x0239	; 0x800239 <d_3+0x3>
     b86:	06 d3       	rcall	.+1548   	; 0x1194 <__addsf3>
     b88:	60 93 2e 02 	sts	0x022E, r22	; 0x80022e <pid3>
     b8c:	70 93 2f 02 	sts	0x022F, r23	; 0x80022f <pid3+0x1>
     b90:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <pid3+0x2>
     b94:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <pid3+0x3>
	if(pid3<0){
     b98:	60 91 2e 02 	lds	r22, 0x022E	; 0x80022e <pid3>
     b9c:	70 91 2f 02 	lds	r23, 0x022F	; 0x80022f <pid3+0x1>
     ba0:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <pid3+0x2>
     ba4:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <pid3+0x3>
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	a9 01       	movw	r20, r18
     bae:	56 d3       	rcall	.+1708   	; 0x125c <__cmpsf2>
     bb0:	88 23       	and	r24, r24
     bb2:	44 f4       	brge	.+16     	; 0xbc4 <PID3+0x1e2>
		pid3 = 0;
     bb4:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <pid3>
     bb8:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <pid3+0x1>
     bbc:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <pid3+0x2>
     bc0:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <pid3+0x3>
	}
	if(pid3>1023){
     bc4:	60 91 2e 02 	lds	r22, 0x022E	; 0x80022e <pid3>
     bc8:	70 91 2f 02 	lds	r23, 0x022F	; 0x80022f <pid3+0x1>
     bcc:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <pid3+0x2>
     bd0:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <pid3+0x3>
     bd4:	20 e0       	ldi	r18, 0x00	; 0
     bd6:	30 ec       	ldi	r19, 0xC0	; 192
     bd8:	4f e7       	ldi	r20, 0x7F	; 127
     bda:	54 e4       	ldi	r21, 0x44	; 68
     bdc:	26 d4       	rcall	.+2124   	; 0x142a <__gesf2>
     bde:	18 16       	cp	r1, r24
     be0:	64 f4       	brge	.+24     	; 0xbfa <PID3+0x218>
		pid3 = 1023;
     be2:	80 e0       	ldi	r24, 0x00	; 0
     be4:	90 ec       	ldi	r25, 0xC0	; 192
     be6:	af e7       	ldi	r26, 0x7F	; 127
     be8:	b4 e4       	ldi	r27, 0x44	; 68
     bea:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <pid3>
     bee:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <pid3+0x1>
     bf2:	a0 93 30 02 	sts	0x0230, r26	; 0x800230 <pid3+0x2>
	}
	Set_PWM3((int) pid3);
     bf6:	b0 93 31 02 	sts	0x0231, r27	; 0x800231 <pid3+0x3>
     bfa:	60 91 2e 02 	lds	r22, 0x022E	; 0x80022e <pid3>
     bfe:	70 91 2f 02 	lds	r23, 0x022F	; 0x80022f <pid3+0x1>
     c02:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <pid3+0x2>
     c06:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <pid3+0x3>
     c0a:	2c d3       	rcall	.+1624   	; 0x1264 <__fixsfsi>
     c0c:	cb 01       	movw	r24, r22
     c0e:	af cc       	rjmp	.-1698   	; 0x56e <Set_PWM3>
     c10:	08 95       	ret

00000c12 <PID4>:
}

void PID4(){//pid motore 4
	e_4 = (double) (SET_POINT_VELOCITA - velocita_4);
     c12:	60 91 96 02 	lds	r22, 0x0296	; 0x800296 <velocita_4>
     c16:	70 91 97 02 	lds	r23, 0x0297	; 0x800297 <velocita_4+0x1>
     c1a:	07 2e       	mov	r0, r23
     c1c:	00 0c       	add	r0, r0
     c1e:	88 0b       	sbc	r24, r24
     c20:	99 0b       	sbc	r25, r25
     c22:	53 d3       	rcall	.+1702   	; 0x12ca <__floatsisf>
     c24:	9b 01       	movw	r18, r22
     c26:	ac 01       	movw	r20, r24
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	70 e0       	ldi	r23, 0x00	; 0
     c2c:	88 ec       	ldi	r24, 0xC8	; 200
     c2e:	92 e4       	ldi	r25, 0x42	; 66
     c30:	b0 d2       	rcall	.+1376   	; 0x1192 <__subsf3>
     c32:	60 93 2a 02 	sts	0x022A, r22	; 0x80022a <e_4>
     c36:	70 93 2b 02 	sts	0x022B, r23	; 0x80022b <e_4+0x1>
     c3a:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <e_4+0x2>
     c3e:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <e_4+0x3>
	p_4 = e_4*KP;
     c42:	60 91 2a 02 	lds	r22, 0x022A	; 0x80022a <e_4>
     c46:	70 91 2b 02 	lds	r23, 0x022B	; 0x80022b <e_4+0x1>
     c4a:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <e_4+0x2>
     c4e:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <e_4+0x3>
     c52:	23 ec       	ldi	r18, 0xC3	; 195
     c54:	35 ef       	ldi	r19, 0xF5	; 245
     c56:	48 e8       	ldi	r20, 0x88	; 136
     c58:	50 e4       	ldi	r21, 0x40	; 64
     c5a:	eb d3       	rcall	.+2006   	; 0x1432 <__mulsf3>
     c5c:	60 93 26 02 	sts	0x0226, r22	; 0x800226 <p_4>
     c60:	70 93 27 02 	sts	0x0227, r23	; 0x800227 <p_4+0x1>
     c64:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <p_4+0x2>
     c68:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <p_4+0x3>
	i_4= i_old_4 + (KI*e_4);
     c6c:	60 91 2a 02 	lds	r22, 0x022A	; 0x80022a <e_4>
     c70:	70 91 2b 02 	lds	r23, 0x022B	; 0x80022b <e_4+0x1>
     c74:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <e_4+0x2>
     c78:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <e_4+0x3>
     c7c:	23 ee       	ldi	r18, 0xE3	; 227
     c7e:	35 ea       	ldi	r19, 0xA5	; 165
     c80:	4b e1       	ldi	r20, 0x1B	; 27
     c82:	5e e3       	ldi	r21, 0x3E	; 62
     c84:	d6 d3       	rcall	.+1964   	; 0x1432 <__mulsf3>
     c86:	20 91 1a 02 	lds	r18, 0x021A	; 0x80021a <i_old_4>
     c8a:	30 91 1b 02 	lds	r19, 0x021B	; 0x80021b <i_old_4+0x1>
     c8e:	40 91 1c 02 	lds	r20, 0x021C	; 0x80021c <i_old_4+0x2>
     c92:	50 91 1d 02 	lds	r21, 0x021D	; 0x80021d <i_old_4+0x3>
     c96:	7e d2       	rcall	.+1276   	; 0x1194 <__addsf3>
     c98:	60 93 22 02 	sts	0x0222, r22	; 0x800222 <i_4>
     c9c:	70 93 23 02 	sts	0x0223, r23	; 0x800223 <i_4+0x1>
     ca0:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <i_4+0x2>
     ca4:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <i_4+0x3>
	d_4 = (e_4 - e_old_4) * KD;
     ca8:	60 91 2a 02 	lds	r22, 0x022A	; 0x80022a <e_4>
     cac:	70 91 2b 02 	lds	r23, 0x022B	; 0x80022b <e_4+0x1>
     cb0:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <e_4+0x2>
     cb4:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <e_4+0x3>
     cb8:	20 91 88 02 	lds	r18, 0x0288	; 0x800288 <e_old_4>
     cbc:	30 91 89 02 	lds	r19, 0x0289	; 0x800289 <e_old_4+0x1>
     cc0:	40 91 8a 02 	lds	r20, 0x028A	; 0x80028a <e_old_4+0x2>
     cc4:	50 91 8b 02 	lds	r21, 0x028B	; 0x80028b <e_old_4+0x3>
     cc8:	64 d2       	rcall	.+1224   	; 0x1192 <__subsf3>
     cca:	20 e0       	ldi	r18, 0x00	; 0
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	a9 01       	movw	r20, r18
     cd0:	b0 d3       	rcall	.+1888   	; 0x1432 <__mulsf3>
     cd2:	60 93 1e 02 	sts	0x021E, r22	; 0x80021e <d_4>
     cd6:	70 93 1f 02 	sts	0x021F, r23	; 0x80021f <d_4+0x1>
     cda:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <d_4+0x2>
     cde:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <d_4+0x3>
	if(i_4>I_MAX){
     ce2:	60 91 22 02 	lds	r22, 0x0222	; 0x800222 <i_4>
     ce6:	70 91 23 02 	lds	r23, 0x0223	; 0x800223 <i_4+0x1>
     cea:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <i_4+0x2>
     cee:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <i_4+0x3>
     cf2:	20 e0       	ldi	r18, 0x00	; 0
     cf4:	30 ec       	ldi	r19, 0xC0	; 192
     cf6:	4f e7       	ldi	r20, 0x7F	; 127
     cf8:	54 e4       	ldi	r21, 0x44	; 68
     cfa:	97 d3       	rcall	.+1838   	; 0x142a <__gesf2>
     cfc:	18 16       	cp	r1, r24
     cfe:	64 f4       	brge	.+24     	; 0xd18 <PID4+0x106>
		i_4 = I_MAX;
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	90 ec       	ldi	r25, 0xC0	; 192
     d04:	af e7       	ldi	r26, 0x7F	; 127
     d06:	b4 e4       	ldi	r27, 0x44	; 68
     d08:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <i_4>
     d0c:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <i_4+0x1>
     d10:	a0 93 24 02 	sts	0x0224, r26	; 0x800224 <i_4+0x2>
     d14:	b0 93 25 02 	sts	0x0225, r27	; 0x800225 <i_4+0x3>
	}
	if(i_4<I_MIN){
     d18:	60 91 22 02 	lds	r22, 0x0222	; 0x800222 <i_4>
     d1c:	70 91 23 02 	lds	r23, 0x0223	; 0x800223 <i_4+0x1>
     d20:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <i_4+0x2>
     d24:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <i_4+0x3>
     d28:	20 e0       	ldi	r18, 0x00	; 0
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	a9 01       	movw	r20, r18
     d2e:	96 d2       	rcall	.+1324   	; 0x125c <__cmpsf2>
     d30:	88 23       	and	r24, r24
     d32:	44 f4       	brge	.+16     	; 0xd44 <PID4+0x132>
		i_4=I_MIN;
     d34:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <i_4>
     d38:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <i_4+0x1>
     d3c:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <i_4+0x2>
     d40:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <i_4+0x3>
	}
	i_old_4 = i_4;
     d44:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <i_4>
     d48:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <i_4+0x1>
     d4c:	a0 91 24 02 	lds	r26, 0x0224	; 0x800224 <i_4+0x2>
     d50:	b0 91 25 02 	lds	r27, 0x0225	; 0x800225 <i_4+0x3>
     d54:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <i_old_4>
     d58:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <i_old_4+0x1>
     d5c:	a0 93 1c 02 	sts	0x021C, r26	; 0x80021c <i_old_4+0x2>
     d60:	b0 93 1d 02 	sts	0x021D, r27	; 0x80021d <i_old_4+0x3>
	e_old_4 = e_4;
     d64:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <e_4>
     d68:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <e_4+0x1>
     d6c:	a0 91 2c 02 	lds	r26, 0x022C	; 0x80022c <e_4+0x2>
     d70:	b0 91 2d 02 	lds	r27, 0x022D	; 0x80022d <e_4+0x3>
     d74:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <e_old_4>
     d78:	90 93 89 02 	sts	0x0289, r25	; 0x800289 <e_old_4+0x1>
     d7c:	a0 93 8a 02 	sts	0x028A, r26	; 0x80028a <e_old_4+0x2>
     d80:	b0 93 8b 02 	sts	0x028B, r27	; 0x80028b <e_old_4+0x3>
	pid4 = p_4+i_4+d_4;
     d84:	60 91 26 02 	lds	r22, 0x0226	; 0x800226 <p_4>
     d88:	70 91 27 02 	lds	r23, 0x0227	; 0x800227 <p_4+0x1>
     d8c:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <p_4+0x2>
     d90:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <p_4+0x3>
     d94:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <i_4>
     d98:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <i_4+0x1>
     d9c:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <i_4+0x2>
     da0:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <i_4+0x3>
     da4:	f7 d1       	rcall	.+1006   	; 0x1194 <__addsf3>
     da6:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <d_4>
     daa:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <d_4+0x1>
     dae:	40 91 20 02 	lds	r20, 0x0220	; 0x800220 <d_4+0x2>
     db2:	50 91 21 02 	lds	r21, 0x0221	; 0x800221 <d_4+0x3>
     db6:	ee d1       	rcall	.+988    	; 0x1194 <__addsf3>
     db8:	60 93 16 02 	sts	0x0216, r22	; 0x800216 <pid4>
     dbc:	70 93 17 02 	sts	0x0217, r23	; 0x800217 <pid4+0x1>
     dc0:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <pid4+0x2>
     dc4:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <pid4+0x3>
	if(pid4<0){
     dc8:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <pid4>
     dcc:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <pid4+0x1>
     dd0:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <pid4+0x2>
     dd4:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <pid4+0x3>
     dd8:	20 e0       	ldi	r18, 0x00	; 0
     dda:	30 e0       	ldi	r19, 0x00	; 0
     ddc:	a9 01       	movw	r20, r18
     dde:	3e d2       	rcall	.+1148   	; 0x125c <__cmpsf2>
     de0:	88 23       	and	r24, r24
     de2:	44 f4       	brge	.+16     	; 0xdf4 <PID4+0x1e2>
		pid4 = 0;
     de4:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <pid4>
     de8:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <pid4+0x1>
     dec:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <pid4+0x2>
     df0:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <pid4+0x3>
	}
	if(pid4>1023){
     df4:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <pid4>
     df8:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <pid4+0x1>
     dfc:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <pid4+0x2>
     e00:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <pid4+0x3>
     e04:	20 e0       	ldi	r18, 0x00	; 0
     e06:	30 ec       	ldi	r19, 0xC0	; 192
     e08:	4f e7       	ldi	r20, 0x7F	; 127
     e0a:	54 e4       	ldi	r21, 0x44	; 68
     e0c:	0e d3       	rcall	.+1564   	; 0x142a <__gesf2>
     e0e:	18 16       	cp	r1, r24
     e10:	64 f4       	brge	.+24     	; 0xe2a <PID4+0x218>
		pid4 = 1023;
     e12:	80 e0       	ldi	r24, 0x00	; 0
     e14:	90 ec       	ldi	r25, 0xC0	; 192
     e16:	af e7       	ldi	r26, 0x7F	; 127
     e18:	b4 e4       	ldi	r27, 0x44	; 68
     e1a:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <pid4>
     e1e:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <pid4+0x1>
     e22:	a0 93 18 02 	sts	0x0218, r26	; 0x800218 <pid4+0x2>
	}
	Set_PWM4((int) pid4);
     e26:	b0 93 19 02 	sts	0x0219, r27	; 0x800219 <pid4+0x3>
     e2a:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <pid4>
     e2e:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <pid4+0x1>
     e32:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <pid4+0x2>
     e36:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <pid4+0x3>
     e3a:	14 d2       	rcall	.+1064   	; 0x1264 <__fixsfsi>
     e3c:	cb 01       	movw	r24, r22
     e3e:	9c cb       	rjmp	.-2248   	; 0x578 <Set_PWM4>
     e40:	08 95       	ret

00000e42 <__vector_42>:
}

ISR(TIMER4_COMPA_vect){
     e42:	1f 92       	push	r1
     e44:	0f 92       	push	r0
     e46:	0f b6       	in	r0, 0x3f	; 63
     e48:	0f 92       	push	r0
     e4a:	11 24       	eor	r1, r1
     e4c:	0b b6       	in	r0, 0x3b	; 59
     e4e:	0f 92       	push	r0
     e50:	2f 93       	push	r18
     e52:	3f 93       	push	r19
     e54:	4f 93       	push	r20
     e56:	5f 93       	push	r21
     e58:	6f 93       	push	r22
     e5a:	7f 93       	push	r23
     e5c:	8f 93       	push	r24
     e5e:	9f 93       	push	r25
     e60:	af 93       	push	r26
     e62:	bf 93       	push	r27
     e64:	ef 93       	push	r30
     e66:	ff 93       	push	r31
	PID1();
     e68:	8c db       	rcall	.-2280   	; 0x582 <PID1>
	PID2();
     e6a:	a3 dc       	rcall	.-1722   	; 0x7b2 <PID2>
	PID3();
     e6c:	ba dd       	rcall	.-1164   	; 0x9e2 <PID3>
     e6e:	d1 de       	rcall	.-606    	; 0xc12 <PID4>
	PID4();
     e70:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
	TCNT4 = 0;
     e74:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
     e78:	ff 91       	pop	r31
     e7a:	ef 91       	pop	r30
}
     e7c:	bf 91       	pop	r27
     e7e:	af 91       	pop	r26
     e80:	9f 91       	pop	r25
     e82:	8f 91       	pop	r24
     e84:	7f 91       	pop	r23
     e86:	6f 91       	pop	r22
     e88:	5f 91       	pop	r21
     e8a:	4f 91       	pop	r20
     e8c:	3f 91       	pop	r19
     e8e:	2f 91       	pop	r18
     e90:	0f 90       	pop	r0
     e92:	0b be       	out	0x3b, r0	; 59
     e94:	0f 90       	pop	r0
     e96:	0f be       	out	0x3f, r0	; 63
     e98:	0f 90       	pop	r0
     e9a:	1f 90       	pop	r1
     e9c:	18 95       	reti

00000e9e <main>:
     e9e:	4d d0       	rcall	.+154    	; 0xf3a <Serial_Init>
     ea0:	80 ef       	ldi	r24, 0xF0	; 240

int main(void)
{
	Serial_Init();
	//PID
	EICRA = (1<<ISC20) | (1<<ISC21) | (1<<ISC30) | (1<<ISC31);//interrupt rising edge
     ea2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	EICRB = (1<<ISC40) | (1<<ISC41) | (1<<ISC50) | (1<<ISC51);
     ea6:	8f e0       	ldi	r24, 0x0F	; 15
     ea8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
	EIMSK = 1<<INT2 | 1<<INT3 | 1<<INT4 |1<<INT5;//attivamento interrupt esterni
     eac:	8c e3       	ldi	r24, 0x3C	; 60
     eae:	8d bb       	out	0x1d, r24	; 29
	sei();//attivamento ogni interrupt
     eb0:	78 94       	sei
	
	DDRA = 0xFF;
     eb2:	8f ef       	ldi	r24, 0xFF	; 255
     eb4:	81 b9       	out	0x01, r24	; 1
	PORTA = 1<<PA1 | 1<<PA3 | 1<<PA5 | 1<<PA7;//Verso motore
     eb6:	8a ea       	ldi	r24, 0xAA	; 170
     eb8:	82 b9       	out	0x02, r24	; 2
	
	TCCR5A = 0;
     eba:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
	TCCR5B = 1<<CS52;
     ebe:	84 e0       	ldi	r24, 0x04	; 4
     ec0:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x7c0121>
	/*TCCR4A = 0;
	TCCR4B = (1<<WGM42) | (1<<CS41) | (1<<CS40); //f = 250KHz
	TIMSK4=1<<OCIE4A;
	OCR4A = 250;*/
	
	TCCR4A = (1<<COM1B1) | (1<<WGM41) | (1<<WGM40);//inizializza il servo
     ec4:	83 e2       	ldi	r24, 0x23	; 35
     ec6:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
	TCCR4B = (1<<WGM42) | (1<<CS42);//N=256
     eca:	8c e0       	ldi	r24, 0x0C	; 12
     ecc:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
	TIMSK4 = 1<<OCIE4A;
     ed0:	82 e0       	ldi	r24, 0x02	; 2
     ed2:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x7c0072>
	OCR4A = 62;
     ed6:	8e e3       	ldi	r24, 0x3E	; 62
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
     ede:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
	DDRH = 1<<PH4;
     ee2:	80 e1       	ldi	r24, 0x10	; 16
     ee4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
	
	Init_PWM123();
	Init_PWM4();
     ee8:	24 db       	rcall	.-2488   	; 0x532 <Init_PWM123>
	//Init_PWM_Servo();
	
	Start_PWM123();
     eea:	29 db       	rcall	.-2478   	; 0x53e <Init_PWM4>
	Start_PWM4();
     eec:	2e db       	rcall	.-2468   	; 0x54a <Start_PWM123>
     eee:	31 db       	rcall	.-2462   	; 0x552 <Start_PWM4>
	//Start_PWM_Servo();
	
	Set_PWM1(100);
     ef0:	84 e6       	ldi	r24, 0x64	; 100
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	32 db       	rcall	.-2460   	; 0x55a <Set_PWM1>
	Set_PWM2(100);
     ef6:	84 e6       	ldi	r24, 0x64	; 100
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	34 db       	rcall	.-2456   	; 0x564 <Set_PWM2>
	Set_PWM3(100);
     efc:	84 e6       	ldi	r24, 0x64	; 100
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	36 db       	rcall	.-2452   	; 0x56e <Set_PWM3>
     f02:	84 e6       	ldi	r24, 0x64	; 100
	Set_PWM4(100);
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	38 db       	rcall	.-2448   	; 0x578 <Set_PWM4>
     f08:	80 e4       	ldi	r24, 0x40	; 64
	//Set_Servo(100);
	
	//ADC
	int k;
	ADMUX = (1<<REFS0);
     f0a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	ADCSRB = 0;
     f0e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1);
     f12:	86 e8       	ldi	r24, 0x86	; 134
     f14:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
	
	
	int s;
	init_TWI();
     f18:	1b d9       	rcall	.-3530   	; 0x150 <init_TWI>
	init_interrupt();
     f1a:	18 d9       	rcall	.-3536   	; 0x14c <init_interrupt>
		_delay_ms(1500);
		Set_Servo(200);
		_delay_ms(1500);*/
		
		
		s = conversione();
     f1c:	04 d9       	rcall	.-3576   	; 0x126 <conversione>
     f1e:	39 2f       	mov	r19, r25
		Serial_Send(s); Serial_Send("\n");
     f20:	28 2f       	mov	r18, r24
     f22:	99 0f       	add	r25, r25
     f24:	99 0b       	sbc	r25, r25
     f26:	49 2f       	mov	r20, r25
     f28:	59 2f       	mov	r21, r25
     f2a:	69 2f       	mov	r22, r25
     f2c:	79 2f       	mov	r23, r25
     f2e:	89 2f       	mov	r24, r25
     f30:	43 d0       	rcall	.+134    	; 0xfb8 <Serial_Send_Int>
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	92 e0       	ldi	r25, 0x02	; 2
     f36:	23 d0       	rcall	.+70     	; 0xf7e <Serial_Send_String>
     f38:	f1 cf       	rjmp	.-30     	; 0xf1c <main+0x7e>

00000f3a <Serial_Init>:
     f3a:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <BAUD0>
}
unsigned char Serial_Rx( void )
{
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}
     f3e:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <BAUD0+0x1>
     f42:	a0 91 78 02 	lds	r26, 0x0278	; 0x800278 <BAUD0+0x2>
     f46:	b0 91 79 02 	lds	r27, 0x0279	; 0x800279 <BAUD0+0x3>
     f4a:	89 2f       	mov	r24, r25
     f4c:	9a 2f       	mov	r25, r26
     f4e:	ab 2f       	mov	r26, r27
     f50:	bb 27       	eor	r27, r27
     f52:	a7 fd       	sbrc	r26, 7
     f54:	ba 95       	dec	r27
     f56:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
     f5a:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <BAUD0>
     f5e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
     f62:	88 e9       	ldi	r24, 0x98	; 152
     f64:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
     f68:	86 e0       	ldi	r24, 0x06	; 6
     f6a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
     f6e:	08 95       	ret

00000f70 <Serial_Tx>:
     f70:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     f74:	95 ff       	sbrs	r25, 5
     f76:	fc cf       	rjmp	.-8      	; 0xf70 <Serial_Tx>
     f78:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     f7c:	08 95       	ret

00000f7e <Serial_Send_String>:
	}
}


void Serial_Send_String(char *string1)
{
     f7e:	0f 93       	push	r16
     f80:	1f 93       	push	r17
     f82:	cf 93       	push	r28
     f84:	df 93       	push	r29
     f86:	8c 01       	movw	r16, r24
	int i=0;
	for(i=0;i<strlen(string1);i++)
     f88:	c0 e0       	ldi	r28, 0x00	; 0
     f8a:	d0 e0       	ldi	r29, 0x00	; 0
     f8c:	06 c0       	rjmp	.+12     	; 0xf9a <Serial_Send_String+0x1c>
	{
		Serial_Tx(string1[i]);
     f8e:	f8 01       	movw	r30, r16
     f90:	ec 0f       	add	r30, r28
     f92:	fd 1f       	adc	r31, r29
     f94:	80 81       	ld	r24, Z
     f96:	ec df       	rcall	.-40     	; 0xf70 <Serial_Tx>


void Serial_Send_String(char *string1)
{
	int i=0;
	for(i=0;i<strlen(string1);i++)
     f98:	21 96       	adiw	r28, 0x01	; 1
     f9a:	f8 01       	movw	r30, r16
     f9c:	01 90       	ld	r0, Z+
     f9e:	00 20       	and	r0, r0
     fa0:	e9 f7       	brne	.-6      	; 0xf9c <Serial_Send_String+0x1e>
     fa2:	31 97       	sbiw	r30, 0x01	; 1
     fa4:	e0 1b       	sub	r30, r16
     fa6:	f1 0b       	sbc	r31, r17
     fa8:	ce 17       	cp	r28, r30
     faa:	df 07       	cpc	r29, r31
     fac:	80 f3       	brcs	.-32     	; 0xf8e <Serial_Send_String+0x10>
	{
		Serial_Tx(string1[i]);
	}
}
     fae:	df 91       	pop	r29
     fb0:	cf 91       	pop	r28
     fb2:	1f 91       	pop	r17
     fb4:	0f 91       	pop	r16
     fb6:	08 95       	ret

00000fb8 <Serial_Send_Int>:
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}

void Serial_Send_Int(int64_t num)
{
     fb8:	2f 92       	push	r2
     fba:	3f 92       	push	r3
     fbc:	4f 92       	push	r4
     fbe:	5f 92       	push	r5
     fc0:	6f 92       	push	r6
     fc2:	7f 92       	push	r7
     fc4:	8f 92       	push	r8
     fc6:	9f 92       	push	r9
     fc8:	af 92       	push	r10
     fca:	bf 92       	push	r11
     fcc:	cf 92       	push	r12
     fce:	df 92       	push	r13
     fd0:	ef 92       	push	r14
     fd2:	ff 92       	push	r15
     fd4:	0f 93       	push	r16
     fd6:	1f 93       	push	r17
     fd8:	cf 93       	push	r28
     fda:	df 93       	push	r29
     fdc:	cd b7       	in	r28, 0x3d	; 61
     fde:	de b7       	in	r29, 0x3e	; 62
     fe0:	c3 54       	subi	r28, 0x43	; 67
     fe2:	d1 09       	sbc	r29, r1
     fe4:	0f b6       	in	r0, 0x3f	; 63
     fe6:	f8 94       	cli
     fe8:	de bf       	out	0x3e, r29	; 62
     fea:	0f be       	out	0x3f, r0	; 63
     fec:	cd bf       	out	0x3d, r28	; 61
     fee:	22 96       	adiw	r28, 0x02	; 2
     ff0:	2f af       	std	Y+63, r18	; 0x3f
     ff2:	22 97       	sbiw	r28, 0x02	; 2
     ff4:	23 96       	adiw	r28, 0x03	; 3
     ff6:	3f af       	std	Y+63, r19	; 0x3f
     ff8:	23 97       	sbiw	r28, 0x03	; 3
     ffa:	24 96       	adiw	r28, 0x04	; 4
     ffc:	4f af       	std	Y+63, r20	; 0x3f
     ffe:	24 97       	sbiw	r28, 0x04	; 4
    1000:	85 2e       	mov	r8, r21
    1002:	76 2e       	mov	r7, r22
    1004:	67 2e       	mov	r6, r23
    1006:	38 2e       	mov	r3, r24
    1008:	29 2e       	mov	r2, r25
	if(num<0)
    100a:	a0 e0       	ldi	r26, 0x00	; 0
    100c:	73 d3       	rcall	.+1766   	; 0x16f4 <__cmpdi2_s8>
    100e:	04 f5       	brge	.+64     	; 0x1050 <__EEPROM_REGION_LENGTH__+0x50>
	{
		Serial_Send_String("-");
    1010:	82 e0       	ldi	r24, 0x02	; 2
    1012:	92 e0       	ldi	r25, 0x02	; 2
    1014:	b4 df       	rcall	.-152    	; 0xf7e <Serial_Send_String>
		num=-num;
    1016:	22 96       	adiw	r28, 0x02	; 2
    1018:	2f ad       	ldd	r18, Y+63	; 0x3f
    101a:	22 97       	sbiw	r28, 0x02	; 2
    101c:	23 96       	adiw	r28, 0x03	; 3
    101e:	3f ad       	ldd	r19, Y+63	; 0x3f
    1020:	23 97       	sbiw	r28, 0x03	; 3
    1022:	24 96       	adiw	r28, 0x04	; 4
    1024:	4f ad       	ldd	r20, Y+63	; 0x3f
    1026:	24 97       	sbiw	r28, 0x04	; 4
    1028:	58 2d       	mov	r21, r8
    102a:	67 2d       	mov	r22, r7
    102c:	76 2d       	mov	r23, r6
    102e:	83 2d       	mov	r24, r3
    1030:	92 2d       	mov	r25, r2
    1032:	19 d3       	rcall	.+1586   	; 0x1666 <__negdi2>
    1034:	22 96       	adiw	r28, 0x02	; 2
    1036:	2f af       	std	Y+63, r18	; 0x3f
    1038:	22 97       	sbiw	r28, 0x02	; 2
    103a:	23 96       	adiw	r28, 0x03	; 3
    103c:	3f af       	std	Y+63, r19	; 0x3f
    103e:	23 97       	sbiw	r28, 0x03	; 3
    1040:	24 96       	adiw	r28, 0x04	; 4
    1042:	4f af       	std	Y+63, r20	; 0x3f
    1044:	24 97       	sbiw	r28, 0x04	; 4
    1046:	85 2e       	mov	r8, r21
    1048:	76 2e       	mov	r7, r22
    104a:	67 2e       	mov	r6, r23
    104c:	38 2e       	mov	r3, r24
    104e:	29 2e       	mov	r2, r25
	}
	if(num==0){Serial_Tx('0');}
    1050:	22 96       	adiw	r28, 0x02	; 2
    1052:	2f ad       	ldd	r18, Y+63	; 0x3f
    1054:	22 97       	sbiw	r28, 0x02	; 2
    1056:	23 96       	adiw	r28, 0x03	; 3
    1058:	3f ad       	ldd	r19, Y+63	; 0x3f
    105a:	23 97       	sbiw	r28, 0x03	; 3
    105c:	24 96       	adiw	r28, 0x04	; 4
    105e:	4f ad       	ldd	r20, Y+63	; 0x3f
    1060:	24 97       	sbiw	r28, 0x04	; 4
    1062:	58 2d       	mov	r21, r8
    1064:	67 2d       	mov	r22, r7
    1066:	76 2d       	mov	r23, r6
    1068:	83 2d       	mov	r24, r3
    106a:	92 2d       	mov	r25, r2
    106c:	a0 e0       	ldi	r26, 0x00	; 0
    106e:	42 d3       	rcall	.+1668   	; 0x16f4 <__cmpdi2_s8>
    1070:	61 f4       	brne	.+24     	; 0x108a <__EEPROM_REGION_LENGTH__+0x8a>
    1072:	80 e3       	ldi	r24, 0x30	; 48
    1074:	7d df       	rcall	.-262    	; 0xf70 <Serial_Tx>
    1076:	73 c0       	rjmp	.+230    	; 0x115e <__EEPROM_REGION_LENGTH__+0x15e>
	else
	{
		char str[64];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
    1078:	e1 e0       	ldi	r30, 0x01	; 1
    107a:	f0 e0       	ldi	r31, 0x00	; 0
    107c:	ec 0f       	add	r30, r28
    107e:	fd 1f       	adc	r31, r29
    1080:	e8 0f       	add	r30, r24
    1082:	f1 1d       	adc	r31, r1
    1084:	10 82       	st	Z, r1
    1086:	8f 5f       	subi	r24, 0xFF	; 255
    1088:	01 c0       	rjmp	.+2      	; 0x108c <__EEPROM_REGION_LENGTH__+0x8c>
    108a:	80 e0       	ldi	r24, 0x00	; 0
    108c:	80 32       	cpi	r24, 0x20	; 32
    108e:	a0 f3       	brcs	.-24     	; 0x1078 <__EEPROM_REGION_LENGTH__+0x78>
    1090:	0f 2e       	mov	r0, r31
    1092:	ff e1       	ldi	r31, 0x1F	; 31
    1094:	9f 2e       	mov	r9, r31
    1096:	f0 2d       	mov	r31, r0
    1098:	42 c0       	rjmp	.+132    	; 0x111e <__EEPROM_REGION_LENGTH__+0x11e>
		i=31;
		while (num)
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
    109a:	49 2c       	mov	r4, r9
    109c:	51 2c       	mov	r5, r1
    109e:	0f 2e       	mov	r0, r31
    10a0:	fa e0       	ldi	r31, 0x0A	; 10
    10a2:	af 2e       	mov	r10, r31
    10a4:	f0 2d       	mov	r31, r0
    10a6:	b1 2c       	mov	r11, r1
    10a8:	c1 2c       	mov	r12, r1
    10aa:	d1 2c       	mov	r13, r1
    10ac:	e1 2c       	mov	r14, r1
    10ae:	f1 2c       	mov	r15, r1
    10b0:	00 e0       	ldi	r16, 0x00	; 0
    10b2:	10 e0       	ldi	r17, 0x00	; 0
    10b4:	22 96       	adiw	r28, 0x02	; 2
    10b6:	2f ad       	ldd	r18, Y+63	; 0x3f
    10b8:	22 97       	sbiw	r28, 0x02	; 2
    10ba:	23 96       	adiw	r28, 0x03	; 3
    10bc:	3f ad       	ldd	r19, Y+63	; 0x3f
    10be:	23 97       	sbiw	r28, 0x03	; 3
    10c0:	24 96       	adiw	r28, 0x04	; 4
    10c2:	4f ad       	ldd	r20, Y+63	; 0x3f
    10c4:	24 97       	sbiw	r28, 0x04	; 4
    10c6:	58 2d       	mov	r21, r8
    10c8:	67 2d       	mov	r22, r7
    10ca:	76 2d       	mov	r23, r6
    10cc:	83 2d       	mov	r24, r3
    10ce:	92 2d       	mov	r25, r2
    10d0:	41 d2       	rcall	.+1154   	; 0x1554 <__moddi3>
    10d2:	e1 e0       	ldi	r30, 0x01	; 1
    10d4:	f0 e0       	ldi	r31, 0x00	; 0
    10d6:	ec 0f       	add	r30, r28
    10d8:	fd 1f       	adc	r31, r29
    10da:	e4 0d       	add	r30, r4
    10dc:	f5 1d       	adc	r31, r5
    10de:	20 5d       	subi	r18, 0xD0	; 208
    10e0:	20 83       	st	Z, r18
			num/=10;
    10e2:	22 96       	adiw	r28, 0x02	; 2
    10e4:	2f ad       	ldd	r18, Y+63	; 0x3f
    10e6:	22 97       	sbiw	r28, 0x02	; 2
    10e8:	23 96       	adiw	r28, 0x03	; 3
    10ea:	3f ad       	ldd	r19, Y+63	; 0x3f
    10ec:	23 97       	sbiw	r28, 0x03	; 3
    10ee:	24 96       	adiw	r28, 0x04	; 4
    10f0:	4f ad       	ldd	r20, Y+63	; 0x3f
    10f2:	24 97       	sbiw	r28, 0x04	; 4
    10f4:	58 2d       	mov	r21, r8
    10f6:	67 2d       	mov	r22, r7
    10f8:	76 2d       	mov	r23, r6
    10fa:	83 2d       	mov	r24, r3
    10fc:	92 2d       	mov	r25, r2
    10fe:	2c d2       	rcall	.+1112   	; 0x1558 <__divdi3>
    1100:	22 96       	adiw	r28, 0x02	; 2
    1102:	2f af       	std	Y+63, r18	; 0x3f
    1104:	22 97       	sbiw	r28, 0x02	; 2
    1106:	23 96       	adiw	r28, 0x03	; 3
    1108:	3f af       	std	Y+63, r19	; 0x3f
    110a:	23 97       	sbiw	r28, 0x03	; 3
    110c:	24 96       	adiw	r28, 0x04	; 4
    110e:	4f af       	std	Y+63, r20	; 0x3f
    1110:	24 97       	sbiw	r28, 0x04	; 4
    1112:	85 2e       	mov	r8, r21
    1114:	76 2e       	mov	r7, r22
    1116:	67 2e       	mov	r6, r23
    1118:	38 2e       	mov	r3, r24
    111a:	29 2e       	mov	r2, r25
			i--;
    111c:	9a 94       	dec	r9
	{
		char str[64];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
		i=31;
		while (num)
    111e:	22 96       	adiw	r28, 0x02	; 2
    1120:	2f ad       	ldd	r18, Y+63	; 0x3f
    1122:	22 97       	sbiw	r28, 0x02	; 2
    1124:	23 96       	adiw	r28, 0x03	; 3
    1126:	3f ad       	ldd	r19, Y+63	; 0x3f
    1128:	23 97       	sbiw	r28, 0x03	; 3
    112a:	24 96       	adiw	r28, 0x04	; 4
    112c:	4f ad       	ldd	r20, Y+63	; 0x3f
    112e:	24 97       	sbiw	r28, 0x04	; 4
    1130:	58 2d       	mov	r21, r8
    1132:	67 2d       	mov	r22, r7
    1134:	76 2d       	mov	r23, r6
    1136:	83 2d       	mov	r24, r3
    1138:	92 2d       	mov	r25, r2
    113a:	a0 e0       	ldi	r26, 0x00	; 0
    113c:	db d2       	rcall	.+1462   	; 0x16f4 <__cmpdi2_s8>
    113e:	09 f0       	breq	.+2      	; 0x1142 <__EEPROM_REGION_LENGTH__+0x142>
    1140:	ac cf       	rjmp	.-168    	; 0x109a <__EEPROM_REGION_LENGTH__+0x9a>
    1142:	10 e0       	ldi	r17, 0x00	; 0
    1144:	0a c0       	rjmp	.+20     	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
		if (str[i]) Serial_Tx(str[i]);
    1146:	e1 e0       	ldi	r30, 0x01	; 1
    1148:	f0 e0       	ldi	r31, 0x00	; 0
    114a:	ec 0f       	add	r30, r28
    114c:	fd 1f       	adc	r31, r29
    114e:	e1 0f       	add	r30, r17
    1150:	f1 1d       	adc	r31, r1
    1152:	80 81       	ld	r24, Z
    1154:	81 11       	cpse	r24, r1
    1156:	0c df       	rcall	.-488    	; 0xf70 <Serial_Tx>
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
    1158:	1f 5f       	subi	r17, 0xFF	; 255
    115a:	10 32       	cpi	r17, 0x20	; 32
    115c:	a0 f3       	brcs	.-24     	; 0x1146 <__EEPROM_REGION_LENGTH__+0x146>
		if (str[i]) Serial_Tx(str[i]);
	}
}
    115e:	cd 5b       	subi	r28, 0xBD	; 189
    1160:	df 4f       	sbci	r29, 0xFF	; 255
    1162:	0f b6       	in	r0, 0x3f	; 63
    1164:	f8 94       	cli
    1166:	de bf       	out	0x3e, r29	; 62
    1168:	0f be       	out	0x3f, r0	; 63
    116a:	cd bf       	out	0x3d, r28	; 61
    116c:	df 91       	pop	r29
    116e:	cf 91       	pop	r28
    1170:	1f 91       	pop	r17
    1172:	0f 91       	pop	r16
    1174:	ff 90       	pop	r15
    1176:	ef 90       	pop	r14
    1178:	df 90       	pop	r13
    117a:	cf 90       	pop	r12
    117c:	bf 90       	pop	r11
    117e:	af 90       	pop	r10
    1180:	9f 90       	pop	r9
    1182:	8f 90       	pop	r8
    1184:	7f 90       	pop	r7
    1186:	6f 90       	pop	r6
    1188:	5f 90       	pop	r5
    118a:	4f 90       	pop	r4
    118c:	3f 90       	pop	r3
    118e:	2f 90       	pop	r2
    1190:	08 95       	ret

00001192 <__subsf3>:
    1192:	50 58       	subi	r21, 0x80	; 128

00001194 <__addsf3>:
    1194:	bb 27       	eor	r27, r27
    1196:	aa 27       	eor	r26, r26
    1198:	0e d0       	rcall	.+28     	; 0x11b6 <__addsf3x>
    119a:	0d c1       	rjmp	.+538    	; 0x13b6 <__fp_round>
    119c:	fe d0       	rcall	.+508    	; 0x139a <__fp_pscA>
    119e:	30 f0       	brcs	.+12     	; 0x11ac <__addsf3+0x18>
    11a0:	03 d1       	rcall	.+518    	; 0x13a8 <__fp_pscB>
    11a2:	20 f0       	brcs	.+8      	; 0x11ac <__addsf3+0x18>
    11a4:	31 f4       	brne	.+12     	; 0x11b2 <__addsf3+0x1e>
    11a6:	9f 3f       	cpi	r25, 0xFF	; 255
    11a8:	11 f4       	brne	.+4      	; 0x11ae <__addsf3+0x1a>
    11aa:	1e f4       	brtc	.+6      	; 0x11b2 <__addsf3+0x1e>
    11ac:	f3 c0       	rjmp	.+486    	; 0x1394 <__fp_nan>
    11ae:	0e f4       	brtc	.+2      	; 0x11b2 <__addsf3+0x1e>
    11b0:	e0 95       	com	r30
    11b2:	e7 fb       	bst	r30, 7
    11b4:	e9 c0       	rjmp	.+466    	; 0x1388 <__fp_inf>

000011b6 <__addsf3x>:
    11b6:	e9 2f       	mov	r30, r25
    11b8:	0f d1       	rcall	.+542    	; 0x13d8 <__fp_split3>
    11ba:	80 f3       	brcs	.-32     	; 0x119c <__addsf3+0x8>
    11bc:	ba 17       	cp	r27, r26
    11be:	62 07       	cpc	r22, r18
    11c0:	73 07       	cpc	r23, r19
    11c2:	84 07       	cpc	r24, r20
    11c4:	95 07       	cpc	r25, r21
    11c6:	18 f0       	brcs	.+6      	; 0x11ce <__addsf3x+0x18>
    11c8:	71 f4       	brne	.+28     	; 0x11e6 <__addsf3x+0x30>
    11ca:	9e f5       	brtc	.+102    	; 0x1232 <__addsf3x+0x7c>
    11cc:	27 c1       	rjmp	.+590    	; 0x141c <__fp_zero>
    11ce:	0e f4       	brtc	.+2      	; 0x11d2 <__addsf3x+0x1c>
    11d0:	e0 95       	com	r30
    11d2:	0b 2e       	mov	r0, r27
    11d4:	ba 2f       	mov	r27, r26
    11d6:	a0 2d       	mov	r26, r0
    11d8:	0b 01       	movw	r0, r22
    11da:	b9 01       	movw	r22, r18
    11dc:	90 01       	movw	r18, r0
    11de:	0c 01       	movw	r0, r24
    11e0:	ca 01       	movw	r24, r20
    11e2:	a0 01       	movw	r20, r0
    11e4:	11 24       	eor	r1, r1
    11e6:	ff 27       	eor	r31, r31
    11e8:	59 1b       	sub	r21, r25
    11ea:	99 f0       	breq	.+38     	; 0x1212 <__addsf3x+0x5c>
    11ec:	59 3f       	cpi	r21, 0xF9	; 249
    11ee:	50 f4       	brcc	.+20     	; 0x1204 <__addsf3x+0x4e>
    11f0:	50 3e       	cpi	r21, 0xE0	; 224
    11f2:	68 f1       	brcs	.+90     	; 0x124e <__addsf3x+0x98>
    11f4:	1a 16       	cp	r1, r26
    11f6:	f0 40       	sbci	r31, 0x00	; 0
    11f8:	a2 2f       	mov	r26, r18
    11fa:	23 2f       	mov	r18, r19
    11fc:	34 2f       	mov	r19, r20
    11fe:	44 27       	eor	r20, r20
    1200:	58 5f       	subi	r21, 0xF8	; 248
    1202:	f3 cf       	rjmp	.-26     	; 0x11ea <__addsf3x+0x34>
    1204:	46 95       	lsr	r20
    1206:	37 95       	ror	r19
    1208:	27 95       	ror	r18
    120a:	a7 95       	ror	r26
    120c:	f0 40       	sbci	r31, 0x00	; 0
    120e:	53 95       	inc	r21
    1210:	c9 f7       	brne	.-14     	; 0x1204 <__addsf3x+0x4e>
    1212:	7e f4       	brtc	.+30     	; 0x1232 <__addsf3x+0x7c>
    1214:	1f 16       	cp	r1, r31
    1216:	ba 0b       	sbc	r27, r26
    1218:	62 0b       	sbc	r22, r18
    121a:	73 0b       	sbc	r23, r19
    121c:	84 0b       	sbc	r24, r20
    121e:	ba f0       	brmi	.+46     	; 0x124e <__addsf3x+0x98>
    1220:	91 50       	subi	r25, 0x01	; 1
    1222:	a1 f0       	breq	.+40     	; 0x124c <__addsf3x+0x96>
    1224:	ff 0f       	add	r31, r31
    1226:	bb 1f       	adc	r27, r27
    1228:	66 1f       	adc	r22, r22
    122a:	77 1f       	adc	r23, r23
    122c:	88 1f       	adc	r24, r24
    122e:	c2 f7       	brpl	.-16     	; 0x1220 <__addsf3x+0x6a>
    1230:	0e c0       	rjmp	.+28     	; 0x124e <__addsf3x+0x98>
    1232:	ba 0f       	add	r27, r26
    1234:	62 1f       	adc	r22, r18
    1236:	73 1f       	adc	r23, r19
    1238:	84 1f       	adc	r24, r20
    123a:	48 f4       	brcc	.+18     	; 0x124e <__addsf3x+0x98>
    123c:	87 95       	ror	r24
    123e:	77 95       	ror	r23
    1240:	67 95       	ror	r22
    1242:	b7 95       	ror	r27
    1244:	f7 95       	ror	r31
    1246:	9e 3f       	cpi	r25, 0xFE	; 254
    1248:	08 f0       	brcs	.+2      	; 0x124c <__addsf3x+0x96>
    124a:	b3 cf       	rjmp	.-154    	; 0x11b2 <__addsf3+0x1e>
    124c:	93 95       	inc	r25
    124e:	88 0f       	add	r24, r24
    1250:	08 f0       	brcs	.+2      	; 0x1254 <__addsf3x+0x9e>
    1252:	99 27       	eor	r25, r25
    1254:	ee 0f       	add	r30, r30
    1256:	97 95       	ror	r25
    1258:	87 95       	ror	r24
    125a:	08 95       	ret

0000125c <__cmpsf2>:
    125c:	71 d0       	rcall	.+226    	; 0x1340 <__fp_cmp>
    125e:	08 f4       	brcc	.+2      	; 0x1262 <__cmpsf2+0x6>
    1260:	81 e0       	ldi	r24, 0x01	; 1
    1262:	08 95       	ret

00001264 <__fixsfsi>:
    1264:	04 d0       	rcall	.+8      	; 0x126e <__fixunssfsi>
    1266:	68 94       	set
    1268:	b1 11       	cpse	r27, r1
    126a:	d9 c0       	rjmp	.+434    	; 0x141e <__fp_szero>
    126c:	08 95       	ret

0000126e <__fixunssfsi>:
    126e:	bc d0       	rcall	.+376    	; 0x13e8 <__fp_splitA>
    1270:	88 f0       	brcs	.+34     	; 0x1294 <__fixunssfsi+0x26>
    1272:	9f 57       	subi	r25, 0x7F	; 127
    1274:	90 f0       	brcs	.+36     	; 0x129a <__fixunssfsi+0x2c>
    1276:	b9 2f       	mov	r27, r25
    1278:	99 27       	eor	r25, r25
    127a:	b7 51       	subi	r27, 0x17	; 23
    127c:	a0 f0       	brcs	.+40     	; 0x12a6 <__fixunssfsi+0x38>
    127e:	d1 f0       	breq	.+52     	; 0x12b4 <__fixunssfsi+0x46>
    1280:	66 0f       	add	r22, r22
    1282:	77 1f       	adc	r23, r23
    1284:	88 1f       	adc	r24, r24
    1286:	99 1f       	adc	r25, r25
    1288:	1a f0       	brmi	.+6      	; 0x1290 <__fixunssfsi+0x22>
    128a:	ba 95       	dec	r27
    128c:	c9 f7       	brne	.-14     	; 0x1280 <__fixunssfsi+0x12>
    128e:	12 c0       	rjmp	.+36     	; 0x12b4 <__fixunssfsi+0x46>
    1290:	b1 30       	cpi	r27, 0x01	; 1
    1292:	81 f0       	breq	.+32     	; 0x12b4 <__fixunssfsi+0x46>
    1294:	c3 d0       	rcall	.+390    	; 0x141c <__fp_zero>
    1296:	b1 e0       	ldi	r27, 0x01	; 1
    1298:	08 95       	ret
    129a:	c0 c0       	rjmp	.+384    	; 0x141c <__fp_zero>
    129c:	67 2f       	mov	r22, r23
    129e:	78 2f       	mov	r23, r24
    12a0:	88 27       	eor	r24, r24
    12a2:	b8 5f       	subi	r27, 0xF8	; 248
    12a4:	39 f0       	breq	.+14     	; 0x12b4 <__fixunssfsi+0x46>
    12a6:	b9 3f       	cpi	r27, 0xF9	; 249
    12a8:	cc f3       	brlt	.-14     	; 0x129c <__fixunssfsi+0x2e>
    12aa:	86 95       	lsr	r24
    12ac:	77 95       	ror	r23
    12ae:	67 95       	ror	r22
    12b0:	b3 95       	inc	r27
    12b2:	d9 f7       	brne	.-10     	; 0x12aa <__fixunssfsi+0x3c>
    12b4:	3e f4       	brtc	.+14     	; 0x12c4 <__fixunssfsi+0x56>
    12b6:	90 95       	com	r25
    12b8:	80 95       	com	r24
    12ba:	70 95       	com	r23
    12bc:	61 95       	neg	r22
    12be:	7f 4f       	sbci	r23, 0xFF	; 255
    12c0:	8f 4f       	sbci	r24, 0xFF	; 255
    12c2:	9f 4f       	sbci	r25, 0xFF	; 255
    12c4:	08 95       	ret

000012c6 <__floatunsisf>:
    12c6:	e8 94       	clt
    12c8:	09 c0       	rjmp	.+18     	; 0x12dc <__floatsisf+0x12>

000012ca <__floatsisf>:
    12ca:	97 fb       	bst	r25, 7
    12cc:	3e f4       	brtc	.+14     	; 0x12dc <__floatsisf+0x12>
    12ce:	90 95       	com	r25
    12d0:	80 95       	com	r24
    12d2:	70 95       	com	r23
    12d4:	61 95       	neg	r22
    12d6:	7f 4f       	sbci	r23, 0xFF	; 255
    12d8:	8f 4f       	sbci	r24, 0xFF	; 255
    12da:	9f 4f       	sbci	r25, 0xFF	; 255
    12dc:	99 23       	and	r25, r25
    12de:	a9 f0       	breq	.+42     	; 0x130a <__floatsisf+0x40>
    12e0:	f9 2f       	mov	r31, r25
    12e2:	96 e9       	ldi	r25, 0x96	; 150
    12e4:	bb 27       	eor	r27, r27
    12e6:	93 95       	inc	r25
    12e8:	f6 95       	lsr	r31
    12ea:	87 95       	ror	r24
    12ec:	77 95       	ror	r23
    12ee:	67 95       	ror	r22
    12f0:	b7 95       	ror	r27
    12f2:	f1 11       	cpse	r31, r1
    12f4:	f8 cf       	rjmp	.-16     	; 0x12e6 <__floatsisf+0x1c>
    12f6:	fa f4       	brpl	.+62     	; 0x1336 <__floatsisf+0x6c>
    12f8:	bb 0f       	add	r27, r27
    12fa:	11 f4       	brne	.+4      	; 0x1300 <__floatsisf+0x36>
    12fc:	60 ff       	sbrs	r22, 0
    12fe:	1b c0       	rjmp	.+54     	; 0x1336 <__floatsisf+0x6c>
    1300:	6f 5f       	subi	r22, 0xFF	; 255
    1302:	7f 4f       	sbci	r23, 0xFF	; 255
    1304:	8f 4f       	sbci	r24, 0xFF	; 255
    1306:	9f 4f       	sbci	r25, 0xFF	; 255
    1308:	16 c0       	rjmp	.+44     	; 0x1336 <__floatsisf+0x6c>
    130a:	88 23       	and	r24, r24
    130c:	11 f0       	breq	.+4      	; 0x1312 <__floatsisf+0x48>
    130e:	96 e9       	ldi	r25, 0x96	; 150
    1310:	11 c0       	rjmp	.+34     	; 0x1334 <__floatsisf+0x6a>
    1312:	77 23       	and	r23, r23
    1314:	21 f0       	breq	.+8      	; 0x131e <__floatsisf+0x54>
    1316:	9e e8       	ldi	r25, 0x8E	; 142
    1318:	87 2f       	mov	r24, r23
    131a:	76 2f       	mov	r23, r22
    131c:	05 c0       	rjmp	.+10     	; 0x1328 <__floatsisf+0x5e>
    131e:	66 23       	and	r22, r22
    1320:	71 f0       	breq	.+28     	; 0x133e <__floatsisf+0x74>
    1322:	96 e8       	ldi	r25, 0x86	; 134
    1324:	86 2f       	mov	r24, r22
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	60 e0       	ldi	r22, 0x00	; 0
    132a:	2a f0       	brmi	.+10     	; 0x1336 <__floatsisf+0x6c>
    132c:	9a 95       	dec	r25
    132e:	66 0f       	add	r22, r22
    1330:	77 1f       	adc	r23, r23
    1332:	88 1f       	adc	r24, r24
    1334:	da f7       	brpl	.-10     	; 0x132c <__floatsisf+0x62>
    1336:	88 0f       	add	r24, r24
    1338:	96 95       	lsr	r25
    133a:	87 95       	ror	r24
    133c:	97 f9       	bld	r25, 7
    133e:	08 95       	ret

00001340 <__fp_cmp>:
    1340:	99 0f       	add	r25, r25
    1342:	00 08       	sbc	r0, r0
    1344:	55 0f       	add	r21, r21
    1346:	aa 0b       	sbc	r26, r26
    1348:	e0 e8       	ldi	r30, 0x80	; 128
    134a:	fe ef       	ldi	r31, 0xFE	; 254
    134c:	16 16       	cp	r1, r22
    134e:	17 06       	cpc	r1, r23
    1350:	e8 07       	cpc	r30, r24
    1352:	f9 07       	cpc	r31, r25
    1354:	c0 f0       	brcs	.+48     	; 0x1386 <__fp_cmp+0x46>
    1356:	12 16       	cp	r1, r18
    1358:	13 06       	cpc	r1, r19
    135a:	e4 07       	cpc	r30, r20
    135c:	f5 07       	cpc	r31, r21
    135e:	98 f0       	brcs	.+38     	; 0x1386 <__fp_cmp+0x46>
    1360:	62 1b       	sub	r22, r18
    1362:	73 0b       	sbc	r23, r19
    1364:	84 0b       	sbc	r24, r20
    1366:	95 0b       	sbc	r25, r21
    1368:	39 f4       	brne	.+14     	; 0x1378 <__fp_cmp+0x38>
    136a:	0a 26       	eor	r0, r26
    136c:	61 f0       	breq	.+24     	; 0x1386 <__fp_cmp+0x46>
    136e:	23 2b       	or	r18, r19
    1370:	24 2b       	or	r18, r20
    1372:	25 2b       	or	r18, r21
    1374:	21 f4       	brne	.+8      	; 0x137e <__fp_cmp+0x3e>
    1376:	08 95       	ret
    1378:	0a 26       	eor	r0, r26
    137a:	09 f4       	brne	.+2      	; 0x137e <__fp_cmp+0x3e>
    137c:	a1 40       	sbci	r26, 0x01	; 1
    137e:	a6 95       	lsr	r26
    1380:	8f ef       	ldi	r24, 0xFF	; 255
    1382:	81 1d       	adc	r24, r1
    1384:	81 1d       	adc	r24, r1
    1386:	08 95       	ret

00001388 <__fp_inf>:
    1388:	97 f9       	bld	r25, 7
    138a:	9f 67       	ori	r25, 0x7F	; 127
    138c:	80 e8       	ldi	r24, 0x80	; 128
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	60 e0       	ldi	r22, 0x00	; 0
    1392:	08 95       	ret

00001394 <__fp_nan>:
    1394:	9f ef       	ldi	r25, 0xFF	; 255
    1396:	80 ec       	ldi	r24, 0xC0	; 192
    1398:	08 95       	ret

0000139a <__fp_pscA>:
    139a:	00 24       	eor	r0, r0
    139c:	0a 94       	dec	r0
    139e:	16 16       	cp	r1, r22
    13a0:	17 06       	cpc	r1, r23
    13a2:	18 06       	cpc	r1, r24
    13a4:	09 06       	cpc	r0, r25
    13a6:	08 95       	ret

000013a8 <__fp_pscB>:
    13a8:	00 24       	eor	r0, r0
    13aa:	0a 94       	dec	r0
    13ac:	12 16       	cp	r1, r18
    13ae:	13 06       	cpc	r1, r19
    13b0:	14 06       	cpc	r1, r20
    13b2:	05 06       	cpc	r0, r21
    13b4:	08 95       	ret

000013b6 <__fp_round>:
    13b6:	09 2e       	mov	r0, r25
    13b8:	03 94       	inc	r0
    13ba:	00 0c       	add	r0, r0
    13bc:	11 f4       	brne	.+4      	; 0x13c2 <__fp_round+0xc>
    13be:	88 23       	and	r24, r24
    13c0:	52 f0       	brmi	.+20     	; 0x13d6 <__fp_round+0x20>
    13c2:	bb 0f       	add	r27, r27
    13c4:	40 f4       	brcc	.+16     	; 0x13d6 <__fp_round+0x20>
    13c6:	bf 2b       	or	r27, r31
    13c8:	11 f4       	brne	.+4      	; 0x13ce <__fp_round+0x18>
    13ca:	60 ff       	sbrs	r22, 0
    13cc:	04 c0       	rjmp	.+8      	; 0x13d6 <__fp_round+0x20>
    13ce:	6f 5f       	subi	r22, 0xFF	; 255
    13d0:	7f 4f       	sbci	r23, 0xFF	; 255
    13d2:	8f 4f       	sbci	r24, 0xFF	; 255
    13d4:	9f 4f       	sbci	r25, 0xFF	; 255
    13d6:	08 95       	ret

000013d8 <__fp_split3>:
    13d8:	57 fd       	sbrc	r21, 7
    13da:	90 58       	subi	r25, 0x80	; 128
    13dc:	44 0f       	add	r20, r20
    13de:	55 1f       	adc	r21, r21
    13e0:	59 f0       	breq	.+22     	; 0x13f8 <__fp_splitA+0x10>
    13e2:	5f 3f       	cpi	r21, 0xFF	; 255
    13e4:	71 f0       	breq	.+28     	; 0x1402 <__fp_splitA+0x1a>
    13e6:	47 95       	ror	r20

000013e8 <__fp_splitA>:
    13e8:	88 0f       	add	r24, r24
    13ea:	97 fb       	bst	r25, 7
    13ec:	99 1f       	adc	r25, r25
    13ee:	61 f0       	breq	.+24     	; 0x1408 <__fp_splitA+0x20>
    13f0:	9f 3f       	cpi	r25, 0xFF	; 255
    13f2:	79 f0       	breq	.+30     	; 0x1412 <__fp_splitA+0x2a>
    13f4:	87 95       	ror	r24
    13f6:	08 95       	ret
    13f8:	12 16       	cp	r1, r18
    13fa:	13 06       	cpc	r1, r19
    13fc:	14 06       	cpc	r1, r20
    13fe:	55 1f       	adc	r21, r21
    1400:	f2 cf       	rjmp	.-28     	; 0x13e6 <__fp_split3+0xe>
    1402:	46 95       	lsr	r20
    1404:	f1 df       	rcall	.-30     	; 0x13e8 <__fp_splitA>
    1406:	08 c0       	rjmp	.+16     	; 0x1418 <__fp_splitA+0x30>
    1408:	16 16       	cp	r1, r22
    140a:	17 06       	cpc	r1, r23
    140c:	18 06       	cpc	r1, r24
    140e:	99 1f       	adc	r25, r25
    1410:	f1 cf       	rjmp	.-30     	; 0x13f4 <__fp_splitA+0xc>
    1412:	86 95       	lsr	r24
    1414:	71 05       	cpc	r23, r1
    1416:	61 05       	cpc	r22, r1
    1418:	08 94       	sec
    141a:	08 95       	ret

0000141c <__fp_zero>:
    141c:	e8 94       	clt

0000141e <__fp_szero>:
    141e:	bb 27       	eor	r27, r27
    1420:	66 27       	eor	r22, r22
    1422:	77 27       	eor	r23, r23
    1424:	cb 01       	movw	r24, r22
    1426:	97 f9       	bld	r25, 7
    1428:	08 95       	ret

0000142a <__gesf2>:
    142a:	8a df       	rcall	.-236    	; 0x1340 <__fp_cmp>
    142c:	08 f4       	brcc	.+2      	; 0x1430 <__gesf2+0x6>
    142e:	8f ef       	ldi	r24, 0xFF	; 255
    1430:	08 95       	ret

00001432 <__mulsf3>:
    1432:	0b d0       	rcall	.+22     	; 0x144a <__mulsf3x>
    1434:	c0 cf       	rjmp	.-128    	; 0x13b6 <__fp_round>
    1436:	b1 df       	rcall	.-158    	; 0x139a <__fp_pscA>
    1438:	28 f0       	brcs	.+10     	; 0x1444 <__mulsf3+0x12>
    143a:	b6 df       	rcall	.-148    	; 0x13a8 <__fp_pscB>
    143c:	18 f0       	brcs	.+6      	; 0x1444 <__mulsf3+0x12>
    143e:	95 23       	and	r25, r21
    1440:	09 f0       	breq	.+2      	; 0x1444 <__mulsf3+0x12>
    1442:	a2 cf       	rjmp	.-188    	; 0x1388 <__fp_inf>
    1444:	a7 cf       	rjmp	.-178    	; 0x1394 <__fp_nan>
    1446:	11 24       	eor	r1, r1
    1448:	ea cf       	rjmp	.-44     	; 0x141e <__fp_szero>

0000144a <__mulsf3x>:
    144a:	c6 df       	rcall	.-116    	; 0x13d8 <__fp_split3>
    144c:	a0 f3       	brcs	.-24     	; 0x1436 <__mulsf3+0x4>

0000144e <__mulsf3_pse>:
    144e:	95 9f       	mul	r25, r21
    1450:	d1 f3       	breq	.-12     	; 0x1446 <__mulsf3+0x14>
    1452:	95 0f       	add	r25, r21
    1454:	50 e0       	ldi	r21, 0x00	; 0
    1456:	55 1f       	adc	r21, r21
    1458:	62 9f       	mul	r22, r18
    145a:	f0 01       	movw	r30, r0
    145c:	72 9f       	mul	r23, r18
    145e:	bb 27       	eor	r27, r27
    1460:	f0 0d       	add	r31, r0
    1462:	b1 1d       	adc	r27, r1
    1464:	63 9f       	mul	r22, r19
    1466:	aa 27       	eor	r26, r26
    1468:	f0 0d       	add	r31, r0
    146a:	b1 1d       	adc	r27, r1
    146c:	aa 1f       	adc	r26, r26
    146e:	64 9f       	mul	r22, r20
    1470:	66 27       	eor	r22, r22
    1472:	b0 0d       	add	r27, r0
    1474:	a1 1d       	adc	r26, r1
    1476:	66 1f       	adc	r22, r22
    1478:	82 9f       	mul	r24, r18
    147a:	22 27       	eor	r18, r18
    147c:	b0 0d       	add	r27, r0
    147e:	a1 1d       	adc	r26, r1
    1480:	62 1f       	adc	r22, r18
    1482:	73 9f       	mul	r23, r19
    1484:	b0 0d       	add	r27, r0
    1486:	a1 1d       	adc	r26, r1
    1488:	62 1f       	adc	r22, r18
    148a:	83 9f       	mul	r24, r19
    148c:	a0 0d       	add	r26, r0
    148e:	61 1d       	adc	r22, r1
    1490:	22 1f       	adc	r18, r18
    1492:	74 9f       	mul	r23, r20
    1494:	33 27       	eor	r19, r19
    1496:	a0 0d       	add	r26, r0
    1498:	61 1d       	adc	r22, r1
    149a:	23 1f       	adc	r18, r19
    149c:	84 9f       	mul	r24, r20
    149e:	60 0d       	add	r22, r0
    14a0:	21 1d       	adc	r18, r1
    14a2:	82 2f       	mov	r24, r18
    14a4:	76 2f       	mov	r23, r22
    14a6:	6a 2f       	mov	r22, r26
    14a8:	11 24       	eor	r1, r1
    14aa:	9f 57       	subi	r25, 0x7F	; 127
    14ac:	50 40       	sbci	r21, 0x00	; 0
    14ae:	8a f0       	brmi	.+34     	; 0x14d2 <__mulsf3_pse+0x84>
    14b0:	e1 f0       	breq	.+56     	; 0x14ea <__mulsf3_pse+0x9c>
    14b2:	88 23       	and	r24, r24
    14b4:	4a f0       	brmi	.+18     	; 0x14c8 <__mulsf3_pse+0x7a>
    14b6:	ee 0f       	add	r30, r30
    14b8:	ff 1f       	adc	r31, r31
    14ba:	bb 1f       	adc	r27, r27
    14bc:	66 1f       	adc	r22, r22
    14be:	77 1f       	adc	r23, r23
    14c0:	88 1f       	adc	r24, r24
    14c2:	91 50       	subi	r25, 0x01	; 1
    14c4:	50 40       	sbci	r21, 0x00	; 0
    14c6:	a9 f7       	brne	.-22     	; 0x14b2 <__mulsf3_pse+0x64>
    14c8:	9e 3f       	cpi	r25, 0xFE	; 254
    14ca:	51 05       	cpc	r21, r1
    14cc:	70 f0       	brcs	.+28     	; 0x14ea <__mulsf3_pse+0x9c>
    14ce:	5c cf       	rjmp	.-328    	; 0x1388 <__fp_inf>
    14d0:	a6 cf       	rjmp	.-180    	; 0x141e <__fp_szero>
    14d2:	5f 3f       	cpi	r21, 0xFF	; 255
    14d4:	ec f3       	brlt	.-6      	; 0x14d0 <__mulsf3_pse+0x82>
    14d6:	98 3e       	cpi	r25, 0xE8	; 232
    14d8:	dc f3       	brlt	.-10     	; 0x14d0 <__mulsf3_pse+0x82>
    14da:	86 95       	lsr	r24
    14dc:	77 95       	ror	r23
    14de:	67 95       	ror	r22
    14e0:	b7 95       	ror	r27
    14e2:	f7 95       	ror	r31
    14e4:	e7 95       	ror	r30
    14e6:	9f 5f       	subi	r25, 0xFF	; 255
    14e8:	c1 f7       	brne	.-16     	; 0x14da <__mulsf3_pse+0x8c>
    14ea:	fe 2b       	or	r31, r30
    14ec:	88 0f       	add	r24, r24
    14ee:	91 1d       	adc	r25, r1
    14f0:	96 95       	lsr	r25
    14f2:	87 95       	ror	r24
    14f4:	97 f9       	bld	r25, 7
    14f6:	08 95       	ret

000014f8 <__udivmodsi4>:
    14f8:	a1 e2       	ldi	r26, 0x21	; 33
    14fa:	1a 2e       	mov	r1, r26
    14fc:	aa 1b       	sub	r26, r26
    14fe:	bb 1b       	sub	r27, r27
    1500:	fd 01       	movw	r30, r26
    1502:	0d c0       	rjmp	.+26     	; 0x151e <__udivmodsi4_ep>

00001504 <__udivmodsi4_loop>:
    1504:	aa 1f       	adc	r26, r26
    1506:	bb 1f       	adc	r27, r27
    1508:	ee 1f       	adc	r30, r30
    150a:	ff 1f       	adc	r31, r31
    150c:	a2 17       	cp	r26, r18
    150e:	b3 07       	cpc	r27, r19
    1510:	e4 07       	cpc	r30, r20
    1512:	f5 07       	cpc	r31, r21
    1514:	20 f0       	brcs	.+8      	; 0x151e <__udivmodsi4_ep>
    1516:	a2 1b       	sub	r26, r18
    1518:	b3 0b       	sbc	r27, r19
    151a:	e4 0b       	sbc	r30, r20
    151c:	f5 0b       	sbc	r31, r21

0000151e <__udivmodsi4_ep>:
    151e:	66 1f       	adc	r22, r22
    1520:	77 1f       	adc	r23, r23
    1522:	88 1f       	adc	r24, r24
    1524:	99 1f       	adc	r25, r25
    1526:	1a 94       	dec	r1
    1528:	69 f7       	brne	.-38     	; 0x1504 <__udivmodsi4_loop>
    152a:	60 95       	com	r22
    152c:	70 95       	com	r23
    152e:	80 95       	com	r24
    1530:	90 95       	com	r25
    1532:	9b 01       	movw	r18, r22
    1534:	ac 01       	movw	r20, r24
    1536:	bd 01       	movw	r22, r26
    1538:	cf 01       	movw	r24, r30
    153a:	08 95       	ret

0000153c <__usmulhisi3>:
    153c:	e7 d0       	rcall	.+462    	; 0x170c <__umulhisi3>

0000153e <__usmulhisi3_tail>:
    153e:	b7 ff       	sbrs	r27, 7
    1540:	08 95       	ret
    1542:	82 1b       	sub	r24, r18
    1544:	93 0b       	sbc	r25, r19
    1546:	08 95       	ret

00001548 <__mulshisi3>:
    1548:	b7 ff       	sbrs	r27, 7
    154a:	ef c0       	rjmp	.+478    	; 0x172a <__muluhisi3>

0000154c <__mulohisi3>:
    154c:	ee d0       	rcall	.+476    	; 0x172a <__muluhisi3>
    154e:	82 1b       	sub	r24, r18
    1550:	93 0b       	sbc	r25, r19
    1552:	08 95       	ret

00001554 <__moddi3>:
    1554:	68 94       	set
    1556:	01 c0       	rjmp	.+2      	; 0x155a <__divdi3_moddi3>

00001558 <__divdi3>:
    1558:	e8 94       	clt

0000155a <__divdi3_moddi3>:
    155a:	f9 2f       	mov	r31, r25
    155c:	f1 2b       	or	r31, r17
    155e:	0a f0       	brmi	.+2      	; 0x1562 <__divdi3_moddi3+0x8>
    1560:	27 c0       	rjmp	.+78     	; 0x15b0 <__udivdi3_umoddi3>
    1562:	a0 e0       	ldi	r26, 0x00	; 0
    1564:	b0 e0       	ldi	r27, 0x00	; 0
    1566:	e6 eb       	ldi	r30, 0xB6	; 182
    1568:	fa e0       	ldi	r31, 0x0A	; 10
    156a:	93 c0       	rjmp	.+294    	; 0x1692 <__prologue_saves__+0xc>
    156c:	09 2e       	mov	r0, r25
    156e:	05 94       	asr	r0
    1570:	1a f4       	brpl	.+6      	; 0x1578 <__divdi3_moddi3+0x1e>
    1572:	79 d0       	rcall	.+242    	; 0x1666 <__negdi2>
    1574:	11 23       	and	r17, r17
    1576:	92 f4       	brpl	.+36     	; 0x159c <__divdi3_moddi3+0x42>
    1578:	f0 e8       	ldi	r31, 0x80	; 128
    157a:	0f 26       	eor	r0, r31
    157c:	ff ef       	ldi	r31, 0xFF	; 255
    157e:	e0 94       	com	r14
    1580:	f0 94       	com	r15
    1582:	00 95       	com	r16
    1584:	10 95       	com	r17
    1586:	b0 94       	com	r11
    1588:	c0 94       	com	r12
    158a:	d0 94       	com	r13
    158c:	a1 94       	neg	r10
    158e:	bf 0a       	sbc	r11, r31
    1590:	cf 0a       	sbc	r12, r31
    1592:	df 0a       	sbc	r13, r31
    1594:	ef 0a       	sbc	r14, r31
    1596:	ff 0a       	sbc	r15, r31
    1598:	0f 0b       	sbc	r16, r31
    159a:	1f 0b       	sbc	r17, r31
    159c:	13 d0       	rcall	.+38     	; 0x15c4 <__udivmod64>
    159e:	07 fc       	sbrc	r0, 7
    15a0:	62 d0       	rcall	.+196    	; 0x1666 <__negdi2>
    15a2:	cd b7       	in	r28, 0x3d	; 61
    15a4:	de b7       	in	r29, 0x3e	; 62
    15a6:	ec e0       	ldi	r30, 0x0C	; 12
    15a8:	90 c0       	rjmp	.+288    	; 0x16ca <__epilogue_restores__+0xc>

000015aa <__umoddi3>:
    15aa:	68 94       	set
    15ac:	01 c0       	rjmp	.+2      	; 0x15b0 <__udivdi3_umoddi3>

000015ae <__udivdi3>:
    15ae:	e8 94       	clt

000015b0 <__udivdi3_umoddi3>:
    15b0:	8f 92       	push	r8
    15b2:	9f 92       	push	r9
    15b4:	cf 93       	push	r28
    15b6:	df 93       	push	r29
    15b8:	05 d0       	rcall	.+10     	; 0x15c4 <__udivmod64>
    15ba:	df 91       	pop	r29
    15bc:	cf 91       	pop	r28
    15be:	9f 90       	pop	r9
    15c0:	8f 90       	pop	r8
    15c2:	08 95       	ret

000015c4 <__udivmod64>:
    15c4:	88 24       	eor	r8, r8
    15c6:	99 24       	eor	r9, r9
    15c8:	f4 01       	movw	r30, r8
    15ca:	e4 01       	movw	r28, r8
    15cc:	b0 e4       	ldi	r27, 0x40	; 64
    15ce:	9f 93       	push	r25
    15d0:	aa 27       	eor	r26, r26
    15d2:	9a 15       	cp	r25, r10
    15d4:	8b 04       	cpc	r8, r11
    15d6:	9c 04       	cpc	r9, r12
    15d8:	ed 05       	cpc	r30, r13
    15da:	fe 05       	cpc	r31, r14
    15dc:	cf 05       	cpc	r28, r15
    15de:	d0 07       	cpc	r29, r16
    15e0:	a1 07       	cpc	r26, r17
    15e2:	98 f4       	brcc	.+38     	; 0x160a <__udivmod64+0x46>
    15e4:	ad 2f       	mov	r26, r29
    15e6:	dc 2f       	mov	r29, r28
    15e8:	cf 2f       	mov	r28, r31
    15ea:	fe 2f       	mov	r31, r30
    15ec:	e9 2d       	mov	r30, r9
    15ee:	98 2c       	mov	r9, r8
    15f0:	89 2e       	mov	r8, r25
    15f2:	98 2f       	mov	r25, r24
    15f4:	87 2f       	mov	r24, r23
    15f6:	76 2f       	mov	r23, r22
    15f8:	65 2f       	mov	r22, r21
    15fa:	54 2f       	mov	r21, r20
    15fc:	43 2f       	mov	r20, r19
    15fe:	32 2f       	mov	r19, r18
    1600:	22 27       	eor	r18, r18
    1602:	b8 50       	subi	r27, 0x08	; 8
    1604:	31 f7       	brne	.-52     	; 0x15d2 <__udivmod64+0xe>
    1606:	bf 91       	pop	r27
    1608:	27 c0       	rjmp	.+78     	; 0x1658 <__udivmod64+0x94>
    160a:	1b 2e       	mov	r1, r27
    160c:	bf 91       	pop	r27
    160e:	bb 27       	eor	r27, r27
    1610:	22 0f       	add	r18, r18
    1612:	33 1f       	adc	r19, r19
    1614:	44 1f       	adc	r20, r20
    1616:	55 1f       	adc	r21, r21
    1618:	66 1f       	adc	r22, r22
    161a:	77 1f       	adc	r23, r23
    161c:	88 1f       	adc	r24, r24
    161e:	99 1f       	adc	r25, r25
    1620:	88 1c       	adc	r8, r8
    1622:	99 1c       	adc	r9, r9
    1624:	ee 1f       	adc	r30, r30
    1626:	ff 1f       	adc	r31, r31
    1628:	cc 1f       	adc	r28, r28
    162a:	dd 1f       	adc	r29, r29
    162c:	aa 1f       	adc	r26, r26
    162e:	bb 1f       	adc	r27, r27
    1630:	8a 14       	cp	r8, r10
    1632:	9b 04       	cpc	r9, r11
    1634:	ec 05       	cpc	r30, r12
    1636:	fd 05       	cpc	r31, r13
    1638:	ce 05       	cpc	r28, r14
    163a:	df 05       	cpc	r29, r15
    163c:	a0 07       	cpc	r26, r16
    163e:	b1 07       	cpc	r27, r17
    1640:	48 f0       	brcs	.+18     	; 0x1654 <__udivmod64+0x90>
    1642:	8a 18       	sub	r8, r10
    1644:	9b 08       	sbc	r9, r11
    1646:	ec 09       	sbc	r30, r12
    1648:	fd 09       	sbc	r31, r13
    164a:	ce 09       	sbc	r28, r14
    164c:	df 09       	sbc	r29, r15
    164e:	a0 0b       	sbc	r26, r16
    1650:	b1 0b       	sbc	r27, r17
    1652:	21 60       	ori	r18, 0x01	; 1
    1654:	1a 94       	dec	r1
    1656:	e1 f6       	brne	.-72     	; 0x1610 <__udivmod64+0x4c>
    1658:	2e f4       	brtc	.+10     	; 0x1664 <__udivmod64+0xa0>
    165a:	94 01       	movw	r18, r8
    165c:	af 01       	movw	r20, r30
    165e:	be 01       	movw	r22, r28
    1660:	cd 01       	movw	r24, r26
    1662:	00 0c       	add	r0, r0
    1664:	08 95       	ret

00001666 <__negdi2>:
    1666:	60 95       	com	r22
    1668:	70 95       	com	r23
    166a:	80 95       	com	r24
    166c:	90 95       	com	r25
    166e:	30 95       	com	r19
    1670:	40 95       	com	r20
    1672:	50 95       	com	r21
    1674:	21 95       	neg	r18
    1676:	3f 4f       	sbci	r19, 0xFF	; 255
    1678:	4f 4f       	sbci	r20, 0xFF	; 255
    167a:	5f 4f       	sbci	r21, 0xFF	; 255
    167c:	6f 4f       	sbci	r22, 0xFF	; 255
    167e:	7f 4f       	sbci	r23, 0xFF	; 255
    1680:	8f 4f       	sbci	r24, 0xFF	; 255
    1682:	9f 4f       	sbci	r25, 0xFF	; 255
    1684:	08 95       	ret

00001686 <__prologue_saves__>:
    1686:	2f 92       	push	r2
    1688:	3f 92       	push	r3
    168a:	4f 92       	push	r4
    168c:	5f 92       	push	r5
    168e:	6f 92       	push	r6
    1690:	7f 92       	push	r7
    1692:	8f 92       	push	r8
    1694:	9f 92       	push	r9
    1696:	af 92       	push	r10
    1698:	bf 92       	push	r11
    169a:	cf 92       	push	r12
    169c:	df 92       	push	r13
    169e:	ef 92       	push	r14
    16a0:	ff 92       	push	r15
    16a2:	0f 93       	push	r16
    16a4:	1f 93       	push	r17
    16a6:	cf 93       	push	r28
    16a8:	df 93       	push	r29
    16aa:	cd b7       	in	r28, 0x3d	; 61
    16ac:	de b7       	in	r29, 0x3e	; 62
    16ae:	ca 1b       	sub	r28, r26
    16b0:	db 0b       	sbc	r29, r27
    16b2:	0f b6       	in	r0, 0x3f	; 63
    16b4:	f8 94       	cli
    16b6:	de bf       	out	0x3e, r29	; 62
    16b8:	0f be       	out	0x3f, r0	; 63
    16ba:	cd bf       	out	0x3d, r28	; 61
    16bc:	19 94       	eijmp

000016be <__epilogue_restores__>:
    16be:	2a 88       	ldd	r2, Y+18	; 0x12
    16c0:	39 88       	ldd	r3, Y+17	; 0x11
    16c2:	48 88       	ldd	r4, Y+16	; 0x10
    16c4:	5f 84       	ldd	r5, Y+15	; 0x0f
    16c6:	6e 84       	ldd	r6, Y+14	; 0x0e
    16c8:	7d 84       	ldd	r7, Y+13	; 0x0d
    16ca:	8c 84       	ldd	r8, Y+12	; 0x0c
    16cc:	9b 84       	ldd	r9, Y+11	; 0x0b
    16ce:	aa 84       	ldd	r10, Y+10	; 0x0a
    16d0:	b9 84       	ldd	r11, Y+9	; 0x09
    16d2:	c8 84       	ldd	r12, Y+8	; 0x08
    16d4:	df 80       	ldd	r13, Y+7	; 0x07
    16d6:	ee 80       	ldd	r14, Y+6	; 0x06
    16d8:	fd 80       	ldd	r15, Y+5	; 0x05
    16da:	0c 81       	ldd	r16, Y+4	; 0x04
    16dc:	1b 81       	ldd	r17, Y+3	; 0x03
    16de:	aa 81       	ldd	r26, Y+2	; 0x02
    16e0:	b9 81       	ldd	r27, Y+1	; 0x01
    16e2:	ce 0f       	add	r28, r30
    16e4:	d1 1d       	adc	r29, r1
    16e6:	0f b6       	in	r0, 0x3f	; 63
    16e8:	f8 94       	cli
    16ea:	de bf       	out	0x3e, r29	; 62
    16ec:	0f be       	out	0x3f, r0	; 63
    16ee:	cd bf       	out	0x3d, r28	; 61
    16f0:	ed 01       	movw	r28, r26
    16f2:	08 95       	ret

000016f4 <__cmpdi2_s8>:
    16f4:	00 24       	eor	r0, r0
    16f6:	a7 fd       	sbrc	r26, 7
    16f8:	00 94       	com	r0
    16fa:	2a 17       	cp	r18, r26
    16fc:	30 05       	cpc	r19, r0
    16fe:	40 05       	cpc	r20, r0
    1700:	50 05       	cpc	r21, r0
    1702:	60 05       	cpc	r22, r0
    1704:	70 05       	cpc	r23, r0
    1706:	80 05       	cpc	r24, r0
    1708:	90 05       	cpc	r25, r0
    170a:	08 95       	ret

0000170c <__umulhisi3>:
    170c:	a2 9f       	mul	r26, r18
    170e:	b0 01       	movw	r22, r0
    1710:	b3 9f       	mul	r27, r19
    1712:	c0 01       	movw	r24, r0
    1714:	a3 9f       	mul	r26, r19
    1716:	70 0d       	add	r23, r0
    1718:	81 1d       	adc	r24, r1
    171a:	11 24       	eor	r1, r1
    171c:	91 1d       	adc	r25, r1
    171e:	b2 9f       	mul	r27, r18
    1720:	70 0d       	add	r23, r0
    1722:	81 1d       	adc	r24, r1
    1724:	11 24       	eor	r1, r1
    1726:	91 1d       	adc	r25, r1
    1728:	08 95       	ret

0000172a <__muluhisi3>:
    172a:	f0 df       	rcall	.-32     	; 0x170c <__umulhisi3>
    172c:	a5 9f       	mul	r26, r21
    172e:	90 0d       	add	r25, r0
    1730:	b4 9f       	mul	r27, r20
    1732:	90 0d       	add	r25, r0
    1734:	a4 9f       	mul	r26, r20
    1736:	80 0d       	add	r24, r0
    1738:	91 1d       	adc	r25, r1
    173a:	11 24       	eor	r1, r1
    173c:	08 95       	ret

0000173e <_exit>:
    173e:	f8 94       	cli

00001740 <__stop_program>:
    1740:	ff cf       	rjmp	.-2      	; 0x1740 <__stop_program>
