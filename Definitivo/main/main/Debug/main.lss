
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800200  00001852  000018e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001852  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a4  0080020c  0080020c  000018f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000018f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001924  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00001964  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024b1  00000000  00000000  00001b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001355  00000000  00000000  0000401d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001280  00000000  00000000  00005372  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006a8  00000000  00000000  000065f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000934  00000000  00000000  00006c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001500  00000000  00000000  000075d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  00008ad0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	b1 c1       	rjmp	.+866    	; 0x370 <__vector_3>
       e:	00 00       	nop
      10:	1c c2       	rjmp	.+1080   	; 0x44a <__vector_4>
      12:	00 00       	nop
      14:	7e c2       	rjmp	.+1276   	; 0x512 <__vector_5>
      16:	00 00       	nop
      18:	e0 c2       	rjmp	.+1472   	; 0x5da <__vector_6>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d8 c0       	rjmp	.+432    	; 0x24e <__vector_39>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	bc c7       	rjmp	.+3960   	; 0x1022 <__vector_42>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e5       	ldi	r30, 0x52	; 82
      fc:	f8 e1       	ldi	r31, 0x18	; 24
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ac 30       	cpi	r26, 0x0C	; 12
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	ac e0       	ldi	r26, 0x0C	; 12
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 3b       	cpi	r26, 0xB0	; 176
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	fe d0       	rcall	.+508    	; 0x31c <main>
     120:	0c 94 27 0c 	jmp	0x184e	; 0x184e <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <controllo_movimento>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     126:	83 30       	cpi	r24, 0x03	; 3
     128:	91 05       	cpc	r25, r1
     12a:	31 f1       	breq	.+76     	; 0x178 <controllo_movimento+0x52>
     12c:	34 f4       	brge	.+12     	; 0x13a <controllo_movimento+0x14>
     12e:	81 30       	cpi	r24, 0x01	; 1
     130:	91 05       	cpc	r25, r1
     132:	61 f0       	breq	.+24     	; 0x14c <controllo_movimento+0x26>
     134:	02 97       	sbiw	r24, 0x02	; 2
     136:	89 f0       	breq	.+34     	; 0x15a <controllo_movimento+0x34>
     138:	2f c0       	rjmp	.+94     	; 0x198 <controllo_movimento+0x72>
     13a:	86 32       	cpi	r24, 0x26	; 38
     13c:	91 05       	cpc	r25, r1
     13e:	49 f1       	breq	.+82     	; 0x192 <controllo_movimento+0x6c>
     140:	87 32       	cpi	r24, 0x27	; 39
     142:	91 05       	cpc	r25, r1
     144:	19 f1       	breq	.+70     	; 0x18c <controllo_movimento+0x66>
     146:	04 97       	sbiw	r24, 0x04	; 4
     148:	39 f5       	brne	.+78     	; 0x198 <controllo_movimento+0x72>
     14a:	1d c0       	rjmp	.+58     	; 0x186 <controllo_movimento+0x60>
     14c:	0e 94 4a 09 	call	0x1294	; 0x1294 <stop_tutto>
     150:	82 e0       	ldi	r24, 0x02	; 2
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	0c 94 88 09 	jmp	0x1310	; 0x1310 <delay_movimento>
     158:	08 95       	ret
     15a:	c7 d7       	rcall	.+3982   	; 0x10ea <avanti>
     15c:	81 e0       	ldi	r24, 0x01	; 1
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	0e 94 88 09 	call	0x1310	; 0x1310 <delay_movimento>
     164:	2f ef       	ldi	r18, 0xFF	; 255
     166:	89 e6       	ldi	r24, 0x69	; 105
     168:	98 e1       	ldi	r25, 0x18	; 24
     16a:	21 50       	subi	r18, 0x01	; 1
     16c:	80 40       	sbci	r24, 0x00	; 0
     16e:	90 40       	sbci	r25, 0x00	; 0
     170:	e1 f7       	brne	.-8      	; 0x16a <controllo_movimento+0x44>
     172:	00 c0       	rjmp	.+0      	; 0x174 <controllo_movimento+0x4e>
     174:	00 00       	nop
     176:	08 95       	ret
     178:	0e 94 4a 09 	call	0x1294	; 0x1294 <stop_tutto>
     17c:	83 e0       	ldi	r24, 0x03	; 3
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	0c 94 88 09 	jmp	0x1310	; 0x1310 <delay_movimento>
     184:	08 95       	ret
     186:	0c 94 4a 09 	jmp	0x1294	; 0x1294 <stop_tutto>
     18a:	08 95       	ret
     18c:	0c 94 0f 09 	jmp	0x121e	; 0x121e <sinistra>
     190:	08 95       	ret
     192:	0c 94 d4 08 	jmp	0x11a8	; 0x11a8 <destra>
     196:	08 95       	ret
     198:	0c 94 4a 09 	jmp	0x1294	; 0x1294 <stop_tutto>
     19c:	08 95       	ret

0000019e <adc_init>:
     19e:	80 e4       	ldi	r24, 0x40	; 64
     1a0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
     1a4:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
     1a8:	86 e8       	ldi	r24, 0x86	; 134
     1aa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     1ae:	08 95       	ret

000001b0 <controllo_telecamera>:
	else;
}

void controllo_telecamera( int data){
	int i;
	if(data == 0x36){
     1b0:	c6 97       	sbiw	r24, 0x36	; 54
     1b2:	c1 f5       	brne	.+112    	; 0x224 <controllo_telecamera+0x74>
		Serial_Send("croce\n");
     1b4:	84 e0       	ldi	r24, 0x04	; 4
     1b6:	92 e0       	ldi	r25, 0x02	; 2
     1b8:	0e 94 10 0a 	call	0x1420	; 0x1420 <Serial_Send_String>
		avanti();
     1bc:	96 d7       	rcall	.+3884   	; 0x10ea <avanti>
     1be:	2f ef       	ldi	r18, 0xFF	; 255
     1c0:	33 ec       	ldi	r19, 0xC3	; 195
     1c2:	49 e0       	ldi	r20, 0x09	; 9
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	e1 f7       	brne	.-8      	; 0x1c4 <controllo_telecamera+0x14>
     1cc:	00 c0       	rjmp	.+0      	; 0x1ce <controllo_telecamera+0x1e>
     1ce:	00 00       	nop
		_delay_ms(200);
		stop_tutto();
     1d0:	0e 94 4a 09 	call	0x1294	; 0x1294 <stop_tutto>
     1d4:	8f ef       	ldi	r24, 0xFF	; 255
     1d6:	99 e6       	ldi	r25, 0x69	; 105
     1d8:	28 e1       	ldi	r18, 0x18	; 24
     1da:	81 50       	subi	r24, 0x01	; 1
     1dc:	90 40       	sbci	r25, 0x00	; 0
     1de:	20 40       	sbci	r18, 0x00	; 0
     1e0:	e1 f7       	brne	.-8      	; 0x1da <controllo_telecamera+0x2a>
     1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <controllo_telecamera+0x34>
     1e4:	00 00       	nop
		_delay_ms(500);
		cubetto();
     1e6:	0e 94 de 09 	call	0x13bc	; 0x13bc <cubetto>
		for(i=0; i<5; i++){
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	17 c0       	rjmp	.+46     	; 0x21e <controllo_telecamera+0x6e>
			PORTF = 0xFE;			//da definire		entrata o uscita adc?
     1f0:	2e ef       	ldi	r18, 0xFE	; 254
     1f2:	21 bb       	out	0x11, r18	; 17
     1f4:	3f ef       	ldi	r19, 0xFF	; 255
     1f6:	48 ef       	ldi	r20, 0xF8	; 248
     1f8:	25 e1       	ldi	r18, 0x15	; 21
     1fa:	31 50       	subi	r19, 0x01	; 1
     1fc:	40 40       	sbci	r20, 0x00	; 0
     1fe:	20 40       	sbci	r18, 0x00	; 0
     200:	e1 f7       	brne	.-8      	; 0x1fa <controllo_telecamera+0x4a>
     202:	00 c0       	rjmp	.+0      	; 0x204 <controllo_telecamera+0x54>
     204:	00 00       	nop
			_delay_ms(450);
			PORTF = 1;				//da definire		entrata o uscita adc?
     206:	21 e0       	ldi	r18, 0x01	; 1
     208:	21 bb       	out	0x11, r18	; 17
     20a:	3f ef       	ldi	r19, 0xFF	; 255
     20c:	48 ef       	ldi	r20, 0xF8	; 248
     20e:	25 e1       	ldi	r18, 0x15	; 21
     210:	31 50       	subi	r19, 0x01	; 1
     212:	40 40       	sbci	r20, 0x00	; 0
     214:	20 40       	sbci	r18, 0x00	; 0
     216:	e1 f7       	brne	.-8      	; 0x210 <controllo_telecamera+0x60>
     218:	00 c0       	rjmp	.+0      	; 0x21a <controllo_telecamera+0x6a>
     21a:	00 00       	nop
		avanti();
		_delay_ms(200);
		stop_tutto();
		_delay_ms(500);
		cubetto();
		for(i=0; i<5; i++){
     21c:	01 96       	adiw	r24, 0x01	; 1
     21e:	85 30       	cpi	r24, 0x05	; 5
     220:	91 05       	cpc	r25, r1
     222:	34 f3       	brlt	.-52     	; 0x1f0 <controllo_telecamera+0x40>
     224:	08 95       	ret

00000226 <I2C_setCallbacks>:
{
	// abilita bit e pulisci dati
	cli();
	TWCR = 0;
	TWAR = 0;
	sei();
     226:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <I2C_recv+0x1>
     22a:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <I2C_recv>
     22e:	70 93 0d 02 	sts	0x020D, r23	; 0x80020d <__data_end+0x1>
     232:	60 93 0c 02 	sts	0x020C, r22	; 0x80020c <__data_end>
     236:	08 95       	ret

00000238 <I2C_init>:
     238:	f8 94       	cli
     23a:	88 0f       	add	r24, r24
     23c:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
     240:	85 ec       	ldi	r24, 0xC5	; 197
     242:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     246:	78 94       	sei
     248:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <Serial_Init>
     24c:	08 95       	ret

0000024e <__vector_39>:
}

ISR(TWI_vect)
{
     24e:	1f 92       	push	r1
     250:	0f 92       	push	r0
     252:	0f b6       	in	r0, 0x3f	; 63
     254:	0f 92       	push	r0
     256:	11 24       	eor	r1, r1
     258:	0b b6       	in	r0, 0x3b	; 59
     25a:	0f 92       	push	r0
     25c:	2f 93       	push	r18
     25e:	3f 93       	push	r19
     260:	4f 93       	push	r20
     262:	5f 93       	push	r21
     264:	6f 93       	push	r22
     266:	7f 93       	push	r23
     268:	8f 93       	push	r24
     26a:	9f 93       	push	r25
     26c:	af 93       	push	r26
     26e:	bf 93       	push	r27
     270:	ef 93       	push	r30
     272:	ff 93       	push	r31
	switch(TW_STATUS)
     274:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     278:	88 7f       	andi	r24, 0xF8	; 248
     27a:	80 38       	cpi	r24, 0x80	; 128
     27c:	49 f0       	breq	.+18     	; 0x290 <__vector_39+0x42>
     27e:	18 f4       	brcc	.+6      	; 0x286 <__vector_39+0x38>
     280:	88 23       	and	r24, r24
     282:	19 f1       	breq	.+70     	; 0x2ca <__vector_39+0x7c>
     284:	28 c0       	rjmp	.+80     	; 0x2d6 <__vector_39+0x88>
     286:	88 3a       	cpi	r24, 0xA8	; 168
     288:	71 f0       	breq	.+28     	; 0x2a6 <__vector_39+0x58>
     28a:	88 3b       	cpi	r24, 0xB8	; 184
     28c:	a9 f0       	breq	.+42     	; 0x2b8 <__vector_39+0x6a>
     28e:	23 c0       	rjmp	.+70     	; 0x2d6 <__vector_39+0x88>
	{
		case TW_SR_DATA_ACK:
		//dati ricevuti da master, richiama il receive callback
		I2C_recv(TWDR);
     290:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     294:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <I2C_recv>
     298:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <I2C_recv+0x1>
     29c:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     29e:	85 ec       	ldi	r24, 0xC5	; 197
     2a0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     2a4:	1b c0       	rjmp	.+54     	; 0x2dc <__vector_39+0x8e>
		case TW_ST_SLA_ACK:
		// master irchiede dati, richiama il receive callback
		I2C_req();
     2a6:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <__data_end>
     2aa:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <__data_end+0x1>
     2ae:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2b0:	85 ec       	ldi	r24, 0xC5	; 197
     2b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     2b6:	12 c0       	rjmp	.+36     	; 0x2dc <__vector_39+0x8e>
		case TW_ST_DATA_ACK:
		// master irchiede dati, richiama il receive callback
		I2C_req();
     2b8:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <__data_end>
     2bc:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <__data_end+0x1>
     2c0:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2c2:	85 ec       	ldi	r24, 0xC5	; 197
     2c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     2c8:	09 c0       	rjmp	.+18     	; 0x2dc <__vector_39+0x8e>
		case TW_BUS_ERROR:
		// qualsiasi stato di errore, preparea TWI per essere reimpostato
		TWCR = 0;
     2ca:	ec eb       	ldi	r30, 0xBC	; 188
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2d0:	85 ec       	ldi	r24, 0xC5	; 197
     2d2:	80 83       	st	Z, r24
		break;
     2d4:	03 c0       	rjmp	.+6      	; 0x2dc <__vector_39+0x8e>
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2d6:	85 ec       	ldi	r24, 0xC5	; 197
     2d8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
	}
     2dc:	ff 91       	pop	r31
     2de:	ef 91       	pop	r30
     2e0:	bf 91       	pop	r27
     2e2:	af 91       	pop	r26
     2e4:	9f 91       	pop	r25
     2e6:	8f 91       	pop	r24
     2e8:	7f 91       	pop	r23
     2ea:	6f 91       	pop	r22
     2ec:	5f 91       	pop	r21
     2ee:	4f 91       	pop	r20
     2f0:	3f 91       	pop	r19
     2f2:	2f 91       	pop	r18
     2f4:	0f 90       	pop	r0
     2f6:	0b be       	out	0x3b, r0	; 59
     2f8:	0f 90       	pop	r0
     2fa:	0f be       	out	0x3f, r0	; 63
     2fc:	0f 90       	pop	r0
     2fe:	1f 90       	pop	r1
     300:	18 95       	reti

00000302 <I2C_received>:
#include "Controllo.h"

volatile int data = 0;
void I2C_received(uint8_t received_data)		//ricevo da master
{
	data = received_data;
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <data+0x1>
     308:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <data>
     30c:	08 95       	ret

0000030e <I2C_requested>:
}

void I2C_requested()						//trasmetto a master
{
	I2C_transmitByte(data);
     30e:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <data>
     312:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <data+0x1>
void I2C_stop(void);
void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)());

inline void __attribute__((always_inline)) I2C_transmitByte(uint8_t data)
{
	TWDR = data;
     316:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     31a:	08 95       	ret

0000031c <main>:
}

int main(void)
{
	Serial_Init();
     31c:	0e 94 ee 09 	call	0x13dc	; 0x13dc <Serial_Init>
	
	//I2C
	I2C_init(0x10);
     320:	80 e1       	ldi	r24, 0x10	; 16
     322:	8a df       	rcall	.-236    	; 0x238 <I2C_init>
	I2C_setCallbacks(I2C_received, I2C_requested);
     324:	67 e8       	ldi	r22, 0x87	; 135
     326:	71 e0       	ldi	r23, 0x01	; 1
     328:	81 e8       	ldi	r24, 0x81	; 129
     32a:	91 e0       	ldi	r25, 0x01	; 1
	
	//Foto-resistenza
	adc_init();
     32c:	7c df       	rcall	.-264    	; 0x226 <I2C_setCallbacks>
     32e:	37 df       	rcall	.-402    	; 0x19e <adc_init>
	
	//Servo
	Set_Servo(150);
     330:	86 e9       	ldi	r24, 0x96	; 150
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <Set_Servo>
     338:	2f ef       	ldi	r18, 0xFF	; 255
     33a:	8b e7       	ldi	r24, 0x7B	; 123
     33c:	92 e9       	ldi	r25, 0x92	; 146
     33e:	21 50       	subi	r18, 0x01	; 1
     340:	80 40       	sbci	r24, 0x00	; 0
     342:	90 40       	sbci	r25, 0x00	; 0
     344:	e1 f7       	brne	.-8      	; 0x33e <main+0x22>
	_delay_ms(3000);
	
	//Motori
    PID();
     346:	00 c0       	rjmp	.+0      	; 0x348 <main+0x2c>
	PWM();
     348:	00 00       	nop
     34a:	b6 d6       	rcall	.+3436   	; 0x10b8 <PID>
	
	//Led riconoscimento
	DDRF = 0xFF;
     34c:	98 d6       	rcall	.+3376   	; 0x107e <PWM>
	
	
	avanti();
     34e:	8f ef       	ldi	r24, 0xFF	; 255
     350:	80 bb       	out	0x10, r24	; 16
	delay_movimento(1);
     352:	cb d6       	rcall	.+3478   	; 0x10ea <avanti>
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	90 e0       	ldi	r25, 0x00	; 0
    while (1) 
    {
		controllo_movimento(data);
     358:	db d7       	rcall	.+4022   	; 0x1310 <delay_movimento>
     35a:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <data>
     35e:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <data+0x1>
		controllo_telecamera(data);
     362:	e1 de       	rcall	.-574    	; 0x126 <controllo_movimento>
     364:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <data>
     368:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <data+0x1>
     36c:	21 df       	rcall	.-446    	; 0x1b0 <controllo_telecamera>
     36e:	f5 cf       	rjmp	.-22     	; 0x35a <main+0x3e>

00000370 <__vector_3>:
		seg_enc=0;
	}
}


ISR(INT2_vect){//interrupt encoder1
     370:	1f 92       	push	r1
     372:	0f 92       	push	r0
     374:	0f b6       	in	r0, 0x3f	; 63
     376:	0f 92       	push	r0
     378:	11 24       	eor	r1, r1
     37a:	0b b6       	in	r0, 0x3b	; 59
     37c:	0f 92       	push	r0
     37e:	2f 93       	push	r18
     380:	3f 93       	push	r19
     382:	4f 93       	push	r20
     384:	5f 93       	push	r21
     386:	6f 93       	push	r22
     388:	7f 93       	push	r23
     38a:	8f 93       	push	r24
     38c:	9f 93       	push	r25
     38e:	af 93       	push	r26
     390:	bf 93       	push	r27
     392:	ef 93       	push	r30
     394:	ff 93       	push	r31
	t_1 = (int32_t) TCNT5;
     396:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     39a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     39e:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <t_1+0x1>
     3a2:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <t_1>
	deltat_1 = (t_1-t_old_1) * KTIMER_256;
     3a6:	a0 91 22 02 	lds	r26, 0x0222	; 0x800222 <t_1>
     3aa:	b0 91 23 02 	lds	r27, 0x0223	; 0x800223 <t_1+0x1>
     3ae:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <t_old_1>
     3b2:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <t_old_1+0x1>
     3b6:	a8 1b       	sub	r26, r24
     3b8:	b9 0b       	sbc	r27, r25
     3ba:	20 e4       	ldi	r18, 0x40	; 64
     3bc:	32 e4       	ldi	r19, 0x42	; 66
     3be:	4f e0       	ldi	r20, 0x0F	; 15
     3c0:	50 e0       	ldi	r21, 0x00	; 0
     3c2:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulshisi3>
     3c6:	24 e2       	ldi	r18, 0x24	; 36
     3c8:	34 ef       	ldi	r19, 0xF4	; 244
     3ca:	40 e0       	ldi	r20, 0x00	; 0
     3cc:	50 e0       	ldi	r21, 0x00	; 0
     3ce:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__udivmodsi4>
     3d2:	30 93 97 02 	sts	0x0297, r19	; 0x800297 <deltat_1+0x1>
     3d6:	20 93 96 02 	sts	0x0296, r18	; 0x800296 <deltat_1>
	velocita_1 = 1000000000UL/(K_ENCODER1 * deltat_1); //giri al secondo
     3da:	a0 91 96 02 	lds	r26, 0x0296	; 0x800296 <deltat_1>
     3de:	b0 91 97 02 	lds	r27, 0x0297	; 0x800297 <deltat_1+0x1>
     3e2:	2e ed       	ldi	r18, 0xDE	; 222
     3e4:	33 e0       	ldi	r19, 0x03	; 3
     3e6:	0e 94 02 0c 	call	0x1804	; 0x1804 <__usmulhisi3>
     3ea:	9b 01       	movw	r18, r22
     3ec:	ac 01       	movw	r20, r24
     3ee:	60 e0       	ldi	r22, 0x00	; 0
     3f0:	7a ec       	ldi	r23, 0xCA	; 202
     3f2:	8a e9       	ldi	r24, 0x9A	; 154
     3f4:	9b e3       	ldi	r25, 0x3B	; 59
     3f6:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__udivmodsi4>
     3fa:	30 93 a5 02 	sts	0x02A5, r19	; 0x8002a5 <velocita_1+0x1>
     3fe:	20 93 a4 02 	sts	0x02A4, r18	; 0x8002a4 <velocita_1>
	t_old_1 = t_1;
     402:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <t_1>
     406:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <t_1+0x1>
     40a:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <t_old_1+0x1>
     40e:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <t_old_1>
	seg_enc++;
     412:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <seg_enc>
     416:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <seg_enc+0x1>
     41a:	01 96       	adiw	r24, 0x01	; 1
     41c:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <seg_enc+0x1>
     420:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <seg_enc>
	//Serial_Send(seg_enc); Serial_Send("\n");
}
     424:	ff 91       	pop	r31
     426:	ef 91       	pop	r30
     428:	bf 91       	pop	r27
     42a:	af 91       	pop	r26
     42c:	9f 91       	pop	r25
     42e:	8f 91       	pop	r24
     430:	7f 91       	pop	r23
     432:	6f 91       	pop	r22
     434:	5f 91       	pop	r21
     436:	4f 91       	pop	r20
     438:	3f 91       	pop	r19
     43a:	2f 91       	pop	r18
     43c:	0f 90       	pop	r0
     43e:	0b be       	out	0x3b, r0	; 59
     440:	0f 90       	pop	r0
     442:	0f be       	out	0x3f, r0	; 63
     444:	0f 90       	pop	r0
     446:	1f 90       	pop	r1
     448:	18 95       	reti

0000044a <__vector_4>:

ISR(INT3_vect){//interrupt encoder2
     44a:	1f 92       	push	r1
     44c:	0f 92       	push	r0
     44e:	0f b6       	in	r0, 0x3f	; 63
     450:	0f 92       	push	r0
     452:	11 24       	eor	r1, r1
     454:	0b b6       	in	r0, 0x3b	; 59
     456:	0f 92       	push	r0
     458:	2f 93       	push	r18
     45a:	3f 93       	push	r19
     45c:	4f 93       	push	r20
     45e:	5f 93       	push	r21
     460:	6f 93       	push	r22
     462:	7f 93       	push	r23
     464:	8f 93       	push	r24
     466:	9f 93       	push	r25
     468:	af 93       	push	r26
     46a:	bf 93       	push	r27
     46c:	ef 93       	push	r30
     46e:	ff 93       	push	r31
	t_2 = (int32_t) TCNT5;
     470:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     474:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     478:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <t_2+0x1>
     47c:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <t_2>
	deltat_2 = (t_2-t_old_2) * KTIMER_256;
     480:	a0 91 1e 02 	lds	r26, 0x021E	; 0x80021e <t_2>
     484:	b0 91 1f 02 	lds	r27, 0x021F	; 0x80021f <t_2+0x1>
     488:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <t_old_2>
     48c:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <t_old_2+0x1>
     490:	a8 1b       	sub	r26, r24
     492:	b9 0b       	sbc	r27, r25
     494:	20 e4       	ldi	r18, 0x40	; 64
     496:	32 e4       	ldi	r19, 0x42	; 66
     498:	4f e0       	ldi	r20, 0x0F	; 15
     49a:	50 e0       	ldi	r21, 0x00	; 0
     49c:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulshisi3>
     4a0:	24 e2       	ldi	r18, 0x24	; 36
     4a2:	34 ef       	ldi	r19, 0xF4	; 244
     4a4:	40 e0       	ldi	r20, 0x00	; 0
     4a6:	50 e0       	ldi	r21, 0x00	; 0
     4a8:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__udivmodsi4>
     4ac:	30 93 ad 02 	sts	0x02AD, r19	; 0x8002ad <deltat_2+0x1>
     4b0:	20 93 ac 02 	sts	0x02AC, r18	; 0x8002ac <deltat_2>
	velocita_2 = 1000000000UL/(K_ENCODER2 * deltat_2); //giri al secondo
     4b4:	a0 91 ac 02 	lds	r26, 0x02AC	; 0x8002ac <deltat_2>
     4b8:	b0 91 ad 02 	lds	r27, 0x02AD	; 0x8002ad <deltat_2+0x1>
     4bc:	2c e6       	ldi	r18, 0x6C	; 108
     4be:	32 e0       	ldi	r19, 0x02	; 2
     4c0:	0e 94 02 0c 	call	0x1804	; 0x1804 <__usmulhisi3>
     4c4:	9b 01       	movw	r18, r22
     4c6:	ac 01       	movw	r20, r24
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	7a ec       	ldi	r23, 0xCA	; 202
     4cc:	8a e9       	ldi	r24, 0x9A	; 154
     4ce:	9b e3       	ldi	r25, 0x3B	; 59
     4d0:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__udivmodsi4>
     4d4:	30 93 91 02 	sts	0x0291, r19	; 0x800291 <velocita_2+0x1>
     4d8:	20 93 90 02 	sts	0x0290, r18	; 0x800290 <velocita_2>
	t_old_2 = t_2;
     4dc:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <t_2>
     4e0:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <t_2+0x1>
     4e4:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <t_old_2+0x1>
     4e8:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <t_old_2>
}
     4ec:	ff 91       	pop	r31
     4ee:	ef 91       	pop	r30
     4f0:	bf 91       	pop	r27
     4f2:	af 91       	pop	r26
     4f4:	9f 91       	pop	r25
     4f6:	8f 91       	pop	r24
     4f8:	7f 91       	pop	r23
     4fa:	6f 91       	pop	r22
     4fc:	5f 91       	pop	r21
     4fe:	4f 91       	pop	r20
     500:	3f 91       	pop	r19
     502:	2f 91       	pop	r18
     504:	0f 90       	pop	r0
     506:	0b be       	out	0x3b, r0	; 59
     508:	0f 90       	pop	r0
     50a:	0f be       	out	0x3f, r0	; 63
     50c:	0f 90       	pop	r0
     50e:	1f 90       	pop	r1
     510:	18 95       	reti

00000512 <__vector_5>:

ISR(INT4_vect){//interrupt encoder3
     512:	1f 92       	push	r1
     514:	0f 92       	push	r0
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	0f 92       	push	r0
     51a:	11 24       	eor	r1, r1
     51c:	0b b6       	in	r0, 0x3b	; 59
     51e:	0f 92       	push	r0
     520:	2f 93       	push	r18
     522:	3f 93       	push	r19
     524:	4f 93       	push	r20
     526:	5f 93       	push	r21
     528:	6f 93       	push	r22
     52a:	7f 93       	push	r23
     52c:	8f 93       	push	r24
     52e:	9f 93       	push	r25
     530:	af 93       	push	r26
     532:	bf 93       	push	r27
     534:	ef 93       	push	r30
     536:	ff 93       	push	r31
	t_3 = (int32_t) TCNT5;
     538:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     53c:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     540:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <t_3+0x1>
     544:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <t_3>
	deltat_3 = (t_3-t_old_3) * KTIMER_256;
     548:	a0 91 1a 02 	lds	r26, 0x021A	; 0x80021a <t_3>
     54c:	b0 91 1b 02 	lds	r27, 0x021B	; 0x80021b <t_3+0x1>
     550:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <t_old_3>
     554:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <t_old_3+0x1>
     558:	a8 1b       	sub	r26, r24
     55a:	b9 0b       	sbc	r27, r25
     55c:	20 e4       	ldi	r18, 0x40	; 64
     55e:	32 e4       	ldi	r19, 0x42	; 66
     560:	4f e0       	ldi	r20, 0x0F	; 15
     562:	50 e0       	ldi	r21, 0x00	; 0
     564:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulshisi3>
     568:	24 e2       	ldi	r18, 0x24	; 36
     56a:	34 ef       	ldi	r19, 0xF4	; 244
     56c:	40 e0       	ldi	r20, 0x00	; 0
     56e:	50 e0       	ldi	r21, 0x00	; 0
     570:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__udivmodsi4>
     574:	30 93 8d 02 	sts	0x028D, r19	; 0x80028d <deltat_3+0x1>
     578:	20 93 8c 02 	sts	0x028C, r18	; 0x80028c <deltat_3>
	velocita_3 = 1000000000UL/(K_ENCODER3 * deltat_3); //giri al secondo
     57c:	a0 91 8c 02 	lds	r26, 0x028C	; 0x80028c <deltat_3>
     580:	b0 91 8d 02 	lds	r27, 0x028D	; 0x80028d <deltat_3+0x1>
     584:	2e ed       	ldi	r18, 0xDE	; 222
     586:	33 e0       	ldi	r19, 0x03	; 3
     588:	0e 94 02 0c 	call	0x1804	; 0x1804 <__usmulhisi3>
     58c:	9b 01       	movw	r18, r22
     58e:	ac 01       	movw	r20, r24
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	7a ec       	ldi	r23, 0xCA	; 202
     594:	8a e9       	ldi	r24, 0x9A	; 154
     596:	9b e3       	ldi	r25, 0x3B	; 59
     598:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__udivmodsi4>
     59c:	30 93 ab 02 	sts	0x02AB, r19	; 0x8002ab <velocita_3+0x1>
     5a0:	20 93 aa 02 	sts	0x02AA, r18	; 0x8002aa <velocita_3>
	t_old_3 = t_3;
     5a4:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <t_3>
     5a8:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <t_3+0x1>
     5ac:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <t_old_3+0x1>
     5b0:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <t_old_3>
	/*seg_enc++;
	Serial_Send(seg_enc); Serial_Send("\n");*/
}
     5b4:	ff 91       	pop	r31
     5b6:	ef 91       	pop	r30
     5b8:	bf 91       	pop	r27
     5ba:	af 91       	pop	r26
     5bc:	9f 91       	pop	r25
     5be:	8f 91       	pop	r24
     5c0:	7f 91       	pop	r23
     5c2:	6f 91       	pop	r22
     5c4:	5f 91       	pop	r21
     5c6:	4f 91       	pop	r20
     5c8:	3f 91       	pop	r19
     5ca:	2f 91       	pop	r18
     5cc:	0f 90       	pop	r0
     5ce:	0b be       	out	0x3b, r0	; 59
     5d0:	0f 90       	pop	r0
     5d2:	0f be       	out	0x3f, r0	; 63
     5d4:	0f 90       	pop	r0
     5d6:	1f 90       	pop	r1
     5d8:	18 95       	reti

000005da <__vector_6>:

ISR(INT5_vect){//interrupt encoder4
     5da:	1f 92       	push	r1
     5dc:	0f 92       	push	r0
     5de:	0f b6       	in	r0, 0x3f	; 63
     5e0:	0f 92       	push	r0
     5e2:	11 24       	eor	r1, r1
     5e4:	0b b6       	in	r0, 0x3b	; 59
     5e6:	0f 92       	push	r0
     5e8:	2f 93       	push	r18
     5ea:	3f 93       	push	r19
     5ec:	4f 93       	push	r20
     5ee:	5f 93       	push	r21
     5f0:	6f 93       	push	r22
     5f2:	7f 93       	push	r23
     5f4:	8f 93       	push	r24
     5f6:	9f 93       	push	r25
     5f8:	af 93       	push	r26
     5fa:	bf 93       	push	r27
     5fc:	ef 93       	push	r30
     5fe:	ff 93       	push	r31
	t_4 = (int32_t) TCNT5;
     600:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     604:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     608:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <t_4+0x1>
     60c:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <t_4>
	deltat_4 = (t_4-t_old_4) * KTIMER_256;
     610:	a0 91 16 02 	lds	r26, 0x0216	; 0x800216 <t_4>
     614:	b0 91 17 02 	lds	r27, 0x0217	; 0x800217 <t_4+0x1>
     618:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <t_old_4>
     61c:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <t_old_4+0x1>
     620:	a8 1b       	sub	r26, r24
     622:	b9 0b       	sbc	r27, r25
     624:	20 e4       	ldi	r18, 0x40	; 64
     626:	32 e4       	ldi	r19, 0x42	; 66
     628:	4f e0       	ldi	r20, 0x0F	; 15
     62a:	50 e0       	ldi	r21, 0x00	; 0
     62c:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulshisi3>
     630:	24 e2       	ldi	r18, 0x24	; 36
     632:	34 ef       	ldi	r19, 0xF4	; 244
     634:	40 e0       	ldi	r20, 0x00	; 0
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__udivmodsi4>
     63c:	30 93 a7 02 	sts	0x02A7, r19	; 0x8002a7 <deltat_4+0x1>
     640:	20 93 a6 02 	sts	0x02A6, r18	; 0x8002a6 <deltat_4>
	velocita_4 = 1000000000UL/(K_ENCODER4 * deltat_4); //giri al secondo
     644:	a0 91 a6 02 	lds	r26, 0x02A6	; 0x8002a6 <deltat_4>
     648:	b0 91 a7 02 	lds	r27, 0x02A7	; 0x8002a7 <deltat_4+0x1>
     64c:	2e ed       	ldi	r18, 0xDE	; 222
     64e:	33 e0       	ldi	r19, 0x03	; 3
     650:	0e 94 02 0c 	call	0x1804	; 0x1804 <__usmulhisi3>
     654:	9b 01       	movw	r18, r22
     656:	ac 01       	movw	r20, r24
     658:	60 e0       	ldi	r22, 0x00	; 0
     65a:	7a ec       	ldi	r23, 0xCA	; 202
     65c:	8a e9       	ldi	r24, 0x9A	; 154
     65e:	9b e3       	ldi	r25, 0x3B	; 59
     660:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__udivmodsi4>
     664:	30 93 a1 02 	sts	0x02A1, r19	; 0x8002a1 <velocita_4+0x1>
     668:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <velocita_4>
	t_old_4 = t_4;
     66c:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <t_4>
     670:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <t_4+0x1>
     674:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <t_old_4+0x1>
     678:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <t_old_4>
	/*seg_enc++;
	Serial_Send(seg_enc); Serial_Send("\n");*/
}
     67c:	ff 91       	pop	r31
     67e:	ef 91       	pop	r30
     680:	bf 91       	pop	r27
     682:	af 91       	pop	r26
     684:	9f 91       	pop	r25
     686:	8f 91       	pop	r24
     688:	7f 91       	pop	r23
     68a:	6f 91       	pop	r22
     68c:	5f 91       	pop	r21
     68e:	4f 91       	pop	r20
     690:	3f 91       	pop	r19
     692:	2f 91       	pop	r18
     694:	0f 90       	pop	r0
     696:	0b be       	out	0x3b, r0	; 59
     698:	0f 90       	pop	r0
     69a:	0f be       	out	0x3f, r0	; 63
     69c:	0f 90       	pop	r0
     69e:	1f 90       	pop	r1
     6a0:	18 95       	reti

000006a2 <Init_PWM123>:

void Init_PWM123(){//Motore 1/2/3
	TCCR1A = (1<<COM1A1) | (1<<COM1B1) | (1<<COM1C1) | (1<<WGM11) | (1<<WGM10);
     6a2:	8b ea       	ldi	r24, 0xAB	; 171
     6a4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
	DDRB = (1<<PB5) | (1<<PB6) | (1<<PB7); //| (1<<PB4);//Uscita PWM motori e Servo
     6a8:	80 ee       	ldi	r24, 0xE0	; 224
     6aa:	84 b9       	out	0x04, r24	; 4
     6ac:	08 95       	ret

000006ae <Init_PWM4>:
}

void Init_PWM4(){//Motore 4
	TCCR3A = (1<<COM3A1) | (1<<WGM31) | (1<<WGM30);
     6ae:	83 e8       	ldi	r24, 0x83	; 131
     6b0:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
	DDRE = (1<<PE3);
     6b4:	88 e0       	ldi	r24, 0x08	; 8
     6b6:	8d b9       	out	0x0d, r24	; 13
     6b8:	08 95       	ret

000006ba <Start_PWM123>:
}

void Start_PWM123(){//Motore 1/2/3
	TCCR1B = (1<<WGM12) | (1<<CS12);
     6ba:	8c e0       	ldi	r24, 0x0C	; 12
     6bc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
     6c0:	08 95       	ret

000006c2 <Start_PWM4>:
}

void Start_PWM4(){//Motore 4
	TCCR3B = (1<<WGM32) | (1<<CS32);
     6c2:	8c e0       	ldi	r24, 0x0C	; 12
     6c4:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
     6c8:	08 95       	ret

000006ca <Set_PWM1>:
}

void Set_PWM1(int duty_1){//Motore 1
	OCR1A = duty_1;
     6ca:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
     6ce:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
     6d2:	08 95       	ret

000006d4 <Set_PWM2>:
}

void Set_PWM2(int duty_2){//Motore 2
	OCR1B = duty_2;
     6d4:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
     6d8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
     6dc:	08 95       	ret

000006de <Set_PWM3>:
}

void Set_PWM3(int duty_3){//Motore 3
	OCR1C = duty_3;
     6de:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x7c008d>
     6e2:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x7c008c>
     6e6:	08 95       	ret

000006e8 <Set_PWM4>:
}

void Set_PWM4(int duty_4){//Motore 4
	OCR3A = duty_4;
     6e8:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     6ec:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
     6f0:	08 95       	ret

000006f2 <PID1>:
}

void PID1(){//pid motore 1
     6f2:	cf 92       	push	r12
     6f4:	df 92       	push	r13
     6f6:	ef 92       	push	r14
     6f8:	ff 92       	push	r15
	e_1 = (double) (SET_POINT_VELOCITA - velocita_1);
     6fa:	c0 90 00 02 	lds	r12, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     6fe:	d0 90 01 02 	lds	r13, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     702:	e0 90 02 02 	lds	r14, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
     706:	f0 90 03 02 	lds	r15, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
     70a:	60 91 a4 02 	lds	r22, 0x02A4	; 0x8002a4 <velocita_1>
     70e:	70 91 a5 02 	lds	r23, 0x02A5	; 0x8002a5 <velocita_1+0x1>
     712:	07 2e       	mov	r0, r23
     714:	00 0c       	add	r0, r0
     716:	88 0b       	sbc	r24, r24
     718:	99 0b       	sbc	r25, r25
     71a:	3b d7       	rcall	.+3702   	; 0x1592 <__floatsisf>
     71c:	9b 01       	movw	r18, r22
     71e:	ac 01       	movw	r20, r24
     720:	c7 01       	movw	r24, r14
     722:	b6 01       	movw	r22, r12
     724:	9a d6       	rcall	.+3380   	; 0x145a <__subsf3>
     726:	60 93 80 02 	sts	0x0280, r22	; 0x800280 <e_1>
     72a:	70 93 81 02 	sts	0x0281, r23	; 0x800281 <e_1+0x1>
     72e:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <e_1+0x2>
     732:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <e_1+0x3>
	p_1 = e_1*KP;
     736:	60 91 80 02 	lds	r22, 0x0280	; 0x800280 <e_1>
     73a:	70 91 81 02 	lds	r23, 0x0281	; 0x800281 <e_1+0x1>
     73e:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <e_1+0x2>
     742:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <e_1+0x3>
     746:	23 ec       	ldi	r18, 0xC3	; 195
     748:	35 ef       	ldi	r19, 0xF5	; 245
     74a:	48 e8       	ldi	r20, 0x88	; 136
     74c:	50 e4       	ldi	r21, 0x40	; 64
     74e:	d5 d7       	rcall	.+4010   	; 0x16fa <__mulsf3>
     750:	60 93 7c 02 	sts	0x027C, r22	; 0x80027c <p_1>
     754:	70 93 7d 02 	sts	0x027D, r23	; 0x80027d <p_1+0x1>
     758:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <p_1+0x2>
     75c:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <p_1+0x3>
	i_1= i_old_1 + (KI*e_1);
     760:	60 91 80 02 	lds	r22, 0x0280	; 0x800280 <e_1>
     764:	70 91 81 02 	lds	r23, 0x0281	; 0x800281 <e_1+0x1>
     768:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <e_1+0x2>
     76c:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <e_1+0x3>
     770:	27 ee       	ldi	r18, 0xE7	; 231
     772:	3b ef       	ldi	r19, 0xFB	; 251
     774:	49 ee       	ldi	r20, 0xE9	; 233
     776:	5e e3       	ldi	r21, 0x3E	; 62
     778:	c0 d7       	rcall	.+3968   	; 0x16fa <__mulsf3>
     77a:	20 91 70 02 	lds	r18, 0x0270	; 0x800270 <i_old_1>
     77e:	30 91 71 02 	lds	r19, 0x0271	; 0x800271 <i_old_1+0x1>
     782:	40 91 72 02 	lds	r20, 0x0272	; 0x800272 <i_old_1+0x2>
     786:	50 91 73 02 	lds	r21, 0x0273	; 0x800273 <i_old_1+0x3>
     78a:	68 d6       	rcall	.+3280   	; 0x145c <__addsf3>
     78c:	60 93 78 02 	sts	0x0278, r22	; 0x800278 <i_1>
     790:	70 93 79 02 	sts	0x0279, r23	; 0x800279 <i_1+0x1>
     794:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <i_1+0x2>
     798:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <i_1+0x3>
	d_1 = (e_1 - e_old_1) * KD;
     79c:	60 91 80 02 	lds	r22, 0x0280	; 0x800280 <e_1>
     7a0:	70 91 81 02 	lds	r23, 0x0281	; 0x800281 <e_1+0x1>
     7a4:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <e_1+0x2>
     7a8:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <e_1+0x3>
     7ac:	20 91 9c 02 	lds	r18, 0x029C	; 0x80029c <e_old_1>
     7b0:	30 91 9d 02 	lds	r19, 0x029D	; 0x80029d <e_old_1+0x1>
     7b4:	40 91 9e 02 	lds	r20, 0x029E	; 0x80029e <e_old_1+0x2>
     7b8:	50 91 9f 02 	lds	r21, 0x029F	; 0x80029f <e_old_1+0x3>
     7bc:	4e d6       	rcall	.+3228   	; 0x145a <__subsf3>
     7be:	20 e0       	ldi	r18, 0x00	; 0
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	a9 01       	movw	r20, r18
     7c4:	9a d7       	rcall	.+3892   	; 0x16fa <__mulsf3>
     7c6:	60 93 74 02 	sts	0x0274, r22	; 0x800274 <d_1>
     7ca:	70 93 75 02 	sts	0x0275, r23	; 0x800275 <d_1+0x1>
     7ce:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <d_1+0x2>
     7d2:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <d_1+0x3>
	if(i_1>I_MAX){
     7d6:	60 91 78 02 	lds	r22, 0x0278	; 0x800278 <i_1>
     7da:	70 91 79 02 	lds	r23, 0x0279	; 0x800279 <i_1+0x1>
     7de:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <i_1+0x2>
     7e2:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <i_1+0x3>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 ec       	ldi	r19, 0xC0	; 192
     7ea:	4f e7       	ldi	r20, 0x7F	; 127
     7ec:	54 e4       	ldi	r21, 0x44	; 68
     7ee:	81 d7       	rcall	.+3842   	; 0x16f2 <__gesf2>
     7f0:	18 16       	cp	r1, r24
     7f2:	64 f4       	brge	.+24     	; 0x80c <PID1+0x11a>
		i_1 = I_MAX;
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	90 ec       	ldi	r25, 0xC0	; 192
     7f8:	af e7       	ldi	r26, 0x7F	; 127
     7fa:	b4 e4       	ldi	r27, 0x44	; 68
     7fc:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <i_1>
     800:	90 93 79 02 	sts	0x0279, r25	; 0x800279 <i_1+0x1>
     804:	a0 93 7a 02 	sts	0x027A, r26	; 0x80027a <i_1+0x2>
     808:	b0 93 7b 02 	sts	0x027B, r27	; 0x80027b <i_1+0x3>
	}
	if(i_1<I_MIN){
     80c:	60 91 78 02 	lds	r22, 0x0278	; 0x800278 <i_1>
     810:	70 91 79 02 	lds	r23, 0x0279	; 0x800279 <i_1+0x1>
     814:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <i_1+0x2>
     818:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <i_1+0x3>
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	a9 01       	movw	r20, r18
     822:	80 d6       	rcall	.+3328   	; 0x1524 <__cmpsf2>
     824:	88 23       	and	r24, r24
     826:	44 f4       	brge	.+16     	; 0x838 <PID1+0x146>
		i_1=I_MIN;
     828:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <i_1>
     82c:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <i_1+0x1>
     830:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <i_1+0x2>
     834:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <i_1+0x3>
	}
	i_old_1 = i_1;
     838:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <i_1>
     83c:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <i_1+0x1>
     840:	a0 91 7a 02 	lds	r26, 0x027A	; 0x80027a <i_1+0x2>
     844:	b0 91 7b 02 	lds	r27, 0x027B	; 0x80027b <i_1+0x3>
     848:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <i_old_1>
     84c:	90 93 71 02 	sts	0x0271, r25	; 0x800271 <i_old_1+0x1>
     850:	a0 93 72 02 	sts	0x0272, r26	; 0x800272 <i_old_1+0x2>
     854:	b0 93 73 02 	sts	0x0273, r27	; 0x800273 <i_old_1+0x3>
	e_old_1 = e_1;
     858:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <e_1>
     85c:	90 91 81 02 	lds	r25, 0x0281	; 0x800281 <e_1+0x1>
     860:	a0 91 82 02 	lds	r26, 0x0282	; 0x800282 <e_1+0x2>
     864:	b0 91 83 02 	lds	r27, 0x0283	; 0x800283 <e_1+0x3>
     868:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <e_old_1>
     86c:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <e_old_1+0x1>
     870:	a0 93 9e 02 	sts	0x029E, r26	; 0x80029e <e_old_1+0x2>
     874:	b0 93 9f 02 	sts	0x029F, r27	; 0x80029f <e_old_1+0x3>
	pid1 = p_1+i_1+d_1;
     878:	60 91 7c 02 	lds	r22, 0x027C	; 0x80027c <p_1>
     87c:	70 91 7d 02 	lds	r23, 0x027D	; 0x80027d <p_1+0x1>
     880:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <p_1+0x2>
     884:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <p_1+0x3>
     888:	20 91 78 02 	lds	r18, 0x0278	; 0x800278 <i_1>
     88c:	30 91 79 02 	lds	r19, 0x0279	; 0x800279 <i_1+0x1>
     890:	40 91 7a 02 	lds	r20, 0x027A	; 0x80027a <i_1+0x2>
     894:	50 91 7b 02 	lds	r21, 0x027B	; 0x80027b <i_1+0x3>
     898:	e1 d5       	rcall	.+3010   	; 0x145c <__addsf3>
     89a:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <d_1>
     89e:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <d_1+0x1>
     8a2:	40 91 76 02 	lds	r20, 0x0276	; 0x800276 <d_1+0x2>
     8a6:	50 91 77 02 	lds	r21, 0x0277	; 0x800277 <d_1+0x3>
     8aa:	d8 d5       	rcall	.+2992   	; 0x145c <__addsf3>
     8ac:	60 93 6c 02 	sts	0x026C, r22	; 0x80026c <pid1>
     8b0:	70 93 6d 02 	sts	0x026D, r23	; 0x80026d <pid1+0x1>
     8b4:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <pid1+0x2>
     8b8:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <pid1+0x3>
	if(pid1<0){
     8bc:	60 91 6c 02 	lds	r22, 0x026C	; 0x80026c <pid1>
     8c0:	70 91 6d 02 	lds	r23, 0x026D	; 0x80026d <pid1+0x1>
     8c4:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <pid1+0x2>
     8c8:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <pid1+0x3>
     8cc:	20 e0       	ldi	r18, 0x00	; 0
     8ce:	30 e0       	ldi	r19, 0x00	; 0
     8d0:	a9 01       	movw	r20, r18
     8d2:	28 d6       	rcall	.+3152   	; 0x1524 <__cmpsf2>
     8d4:	88 23       	and	r24, r24
     8d6:	44 f4       	brge	.+16     	; 0x8e8 <PID1+0x1f6>
		pid1 = 0;
     8d8:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <pid1>
     8dc:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <pid1+0x1>
     8e0:	10 92 6e 02 	sts	0x026E, r1	; 0x80026e <pid1+0x2>
     8e4:	10 92 6f 02 	sts	0x026F, r1	; 0x80026f <pid1+0x3>
	}
	if(pid1>1023){
     8e8:	60 91 6c 02 	lds	r22, 0x026C	; 0x80026c <pid1>
     8ec:	70 91 6d 02 	lds	r23, 0x026D	; 0x80026d <pid1+0x1>
     8f0:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <pid1+0x2>
     8f4:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <pid1+0x3>
     8f8:	20 e0       	ldi	r18, 0x00	; 0
     8fa:	30 ec       	ldi	r19, 0xC0	; 192
     8fc:	4f e7       	ldi	r20, 0x7F	; 127
     8fe:	54 e4       	ldi	r21, 0x44	; 68
     900:	f8 d6       	rcall	.+3568   	; 0x16f2 <__gesf2>
     902:	18 16       	cp	r1, r24
     904:	64 f4       	brge	.+24     	; 0x91e <PID1+0x22c>
		pid1 = 1023;
     906:	80 e0       	ldi	r24, 0x00	; 0
     908:	90 ec       	ldi	r25, 0xC0	; 192
     90a:	af e7       	ldi	r26, 0x7F	; 127
     90c:	b4 e4       	ldi	r27, 0x44	; 68
     90e:	80 93 6c 02 	sts	0x026C, r24	; 0x80026c <pid1>
     912:	90 93 6d 02 	sts	0x026D, r25	; 0x80026d <pid1+0x1>
     916:	a0 93 6e 02 	sts	0x026E, r26	; 0x80026e <pid1+0x2>
     91a:	b0 93 6f 02 	sts	0x026F, r27	; 0x80026f <pid1+0x3>
	}
	Set_PWM1((int) pid1);
     91e:	60 91 6c 02 	lds	r22, 0x026C	; 0x80026c <pid1>
     922:	70 91 6d 02 	lds	r23, 0x026D	; 0x80026d <pid1+0x1>
     926:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <pid1+0x2>
     92a:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <pid1+0x3>
     92e:	fe d5       	rcall	.+3068   	; 0x152c <__fixsfsi>
     930:	cb 01       	movw	r24, r22
     932:	cb de       	rcall	.-618    	; 0x6ca <Set_PWM1>
}
     934:	ff 90       	pop	r15
     936:	ef 90       	pop	r14
     938:	df 90       	pop	r13
     93a:	cf 90       	pop	r12
     93c:	08 95       	ret

0000093e <PID2>:

void PID2(){//pid motore 2
     93e:	cf 92       	push	r12
     940:	df 92       	push	r13
     942:	ef 92       	push	r14
     944:	ff 92       	push	r15
	e_2 = (double) (SET_POINT_VELOCITA - velocita_2);
     946:	c0 90 00 02 	lds	r12, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     94a:	d0 90 01 02 	lds	r13, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     94e:	e0 90 02 02 	lds	r14, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
     952:	f0 90 03 02 	lds	r15, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
     956:	60 91 90 02 	lds	r22, 0x0290	; 0x800290 <velocita_2>
     95a:	70 91 91 02 	lds	r23, 0x0291	; 0x800291 <velocita_2+0x1>
     95e:	07 2e       	mov	r0, r23
     960:	00 0c       	add	r0, r0
     962:	88 0b       	sbc	r24, r24
     964:	99 0b       	sbc	r25, r25
     966:	15 d6       	rcall	.+3114   	; 0x1592 <__floatsisf>
     968:	9b 01       	movw	r18, r22
     96a:	ac 01       	movw	r20, r24
     96c:	c7 01       	movw	r24, r14
     96e:	b6 01       	movw	r22, r12
     970:	74 d5       	rcall	.+2792   	; 0x145a <__subsf3>
     972:	60 93 68 02 	sts	0x0268, r22	; 0x800268 <e_2>
     976:	70 93 69 02 	sts	0x0269, r23	; 0x800269 <e_2+0x1>
     97a:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <e_2+0x2>
     97e:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <e_2+0x3>
	p_2 = e_2*KP;
     982:	60 91 68 02 	lds	r22, 0x0268	; 0x800268 <e_2>
     986:	70 91 69 02 	lds	r23, 0x0269	; 0x800269 <e_2+0x1>
     98a:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <e_2+0x2>
     98e:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <e_2+0x3>
     992:	23 ec       	ldi	r18, 0xC3	; 195
     994:	35 ef       	ldi	r19, 0xF5	; 245
     996:	48 e8       	ldi	r20, 0x88	; 136
     998:	50 e4       	ldi	r21, 0x40	; 64
     99a:	af d6       	rcall	.+3422   	; 0x16fa <__mulsf3>
     99c:	60 93 64 02 	sts	0x0264, r22	; 0x800264 <p_2>
     9a0:	70 93 65 02 	sts	0x0265, r23	; 0x800265 <p_2+0x1>
     9a4:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <p_2+0x2>
     9a8:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <p_2+0x3>
	i_2= i_old_2 + (KI*e_2);
     9ac:	60 91 68 02 	lds	r22, 0x0268	; 0x800268 <e_2>
     9b0:	70 91 69 02 	lds	r23, 0x0269	; 0x800269 <e_2+0x1>
     9b4:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <e_2+0x2>
     9b8:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <e_2+0x3>
     9bc:	27 ee       	ldi	r18, 0xE7	; 231
     9be:	3b ef       	ldi	r19, 0xFB	; 251
     9c0:	49 ee       	ldi	r20, 0xE9	; 233
     9c2:	5e e3       	ldi	r21, 0x3E	; 62
     9c4:	9a d6       	rcall	.+3380   	; 0x16fa <__mulsf3>
     9c6:	20 91 58 02 	lds	r18, 0x0258	; 0x800258 <i_old_2>
     9ca:	30 91 59 02 	lds	r19, 0x0259	; 0x800259 <i_old_2+0x1>
     9ce:	40 91 5a 02 	lds	r20, 0x025A	; 0x80025a <i_old_2+0x2>
     9d2:	50 91 5b 02 	lds	r21, 0x025B	; 0x80025b <i_old_2+0x3>
     9d6:	42 d5       	rcall	.+2692   	; 0x145c <__addsf3>
     9d8:	60 93 60 02 	sts	0x0260, r22	; 0x800260 <i_2>
     9dc:	70 93 61 02 	sts	0x0261, r23	; 0x800261 <i_2+0x1>
     9e0:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <i_2+0x2>
     9e4:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <i_2+0x3>
	d_2 = (e_2 - e_old_2) * KD;
     9e8:	60 91 68 02 	lds	r22, 0x0268	; 0x800268 <e_2>
     9ec:	70 91 69 02 	lds	r23, 0x0269	; 0x800269 <e_2+0x1>
     9f0:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <e_2+0x2>
     9f4:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <e_2+0x3>
     9f8:	20 91 88 02 	lds	r18, 0x0288	; 0x800288 <e_old_2>
     9fc:	30 91 89 02 	lds	r19, 0x0289	; 0x800289 <e_old_2+0x1>
     a00:	40 91 8a 02 	lds	r20, 0x028A	; 0x80028a <e_old_2+0x2>
     a04:	50 91 8b 02 	lds	r21, 0x028B	; 0x80028b <e_old_2+0x3>
     a08:	28 d5       	rcall	.+2640   	; 0x145a <__subsf3>
     a0a:	20 e0       	ldi	r18, 0x00	; 0
     a0c:	30 e0       	ldi	r19, 0x00	; 0
     a0e:	a9 01       	movw	r20, r18
     a10:	74 d6       	rcall	.+3304   	; 0x16fa <__mulsf3>
     a12:	60 93 5c 02 	sts	0x025C, r22	; 0x80025c <d_2>
     a16:	70 93 5d 02 	sts	0x025D, r23	; 0x80025d <d_2+0x1>
     a1a:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <d_2+0x2>
     a1e:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <d_2+0x3>
	if(i_2>I_MAX){
     a22:	60 91 60 02 	lds	r22, 0x0260	; 0x800260 <i_2>
     a26:	70 91 61 02 	lds	r23, 0x0261	; 0x800261 <i_2+0x1>
     a2a:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <i_2+0x2>
     a2e:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <i_2+0x3>
     a32:	20 e0       	ldi	r18, 0x00	; 0
     a34:	30 ec       	ldi	r19, 0xC0	; 192
     a36:	4f e7       	ldi	r20, 0x7F	; 127
     a38:	54 e4       	ldi	r21, 0x44	; 68
     a3a:	5b d6       	rcall	.+3254   	; 0x16f2 <__gesf2>
     a3c:	18 16       	cp	r1, r24
     a3e:	64 f4       	brge	.+24     	; 0xa58 <PID2+0x11a>
		i_2 = I_MAX;
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	90 ec       	ldi	r25, 0xC0	; 192
     a44:	af e7       	ldi	r26, 0x7F	; 127
     a46:	b4 e4       	ldi	r27, 0x44	; 68
     a48:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <i_2>
     a4c:	90 93 61 02 	sts	0x0261, r25	; 0x800261 <i_2+0x1>
     a50:	a0 93 62 02 	sts	0x0262, r26	; 0x800262 <i_2+0x2>
     a54:	b0 93 63 02 	sts	0x0263, r27	; 0x800263 <i_2+0x3>
	}
	if(i_2<I_MIN){
     a58:	60 91 60 02 	lds	r22, 0x0260	; 0x800260 <i_2>
     a5c:	70 91 61 02 	lds	r23, 0x0261	; 0x800261 <i_2+0x1>
     a60:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <i_2+0x2>
     a64:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <i_2+0x3>
     a68:	20 e0       	ldi	r18, 0x00	; 0
     a6a:	30 e0       	ldi	r19, 0x00	; 0
     a6c:	a9 01       	movw	r20, r18
     a6e:	5a d5       	rcall	.+2740   	; 0x1524 <__cmpsf2>
     a70:	88 23       	and	r24, r24
     a72:	44 f4       	brge	.+16     	; 0xa84 <PID2+0x146>
		i_2=I_MIN;
     a74:	10 92 60 02 	sts	0x0260, r1	; 0x800260 <i_2>
     a78:	10 92 61 02 	sts	0x0261, r1	; 0x800261 <i_2+0x1>
     a7c:	10 92 62 02 	sts	0x0262, r1	; 0x800262 <i_2+0x2>
     a80:	10 92 63 02 	sts	0x0263, r1	; 0x800263 <i_2+0x3>
	}
	i_old_2 = i_2;
     a84:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <i_2>
     a88:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <i_2+0x1>
     a8c:	a0 91 62 02 	lds	r26, 0x0262	; 0x800262 <i_2+0x2>
     a90:	b0 91 63 02 	lds	r27, 0x0263	; 0x800263 <i_2+0x3>
     a94:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <i_old_2>
     a98:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <i_old_2+0x1>
     a9c:	a0 93 5a 02 	sts	0x025A, r26	; 0x80025a <i_old_2+0x2>
     aa0:	b0 93 5b 02 	sts	0x025B, r27	; 0x80025b <i_old_2+0x3>
	e_old_2 = e_2;
     aa4:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <e_2>
     aa8:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <e_2+0x1>
     aac:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <e_2+0x2>
     ab0:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <e_2+0x3>
     ab4:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <e_old_2>
     ab8:	90 93 89 02 	sts	0x0289, r25	; 0x800289 <e_old_2+0x1>
     abc:	a0 93 8a 02 	sts	0x028A, r26	; 0x80028a <e_old_2+0x2>
     ac0:	b0 93 8b 02 	sts	0x028B, r27	; 0x80028b <e_old_2+0x3>
	pid2 = p_2+i_2+d_2;
     ac4:	60 91 64 02 	lds	r22, 0x0264	; 0x800264 <p_2>
     ac8:	70 91 65 02 	lds	r23, 0x0265	; 0x800265 <p_2+0x1>
     acc:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <p_2+0x2>
     ad0:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <p_2+0x3>
     ad4:	20 91 60 02 	lds	r18, 0x0260	; 0x800260 <i_2>
     ad8:	30 91 61 02 	lds	r19, 0x0261	; 0x800261 <i_2+0x1>
     adc:	40 91 62 02 	lds	r20, 0x0262	; 0x800262 <i_2+0x2>
     ae0:	50 91 63 02 	lds	r21, 0x0263	; 0x800263 <i_2+0x3>
     ae4:	bb d4       	rcall	.+2422   	; 0x145c <__addsf3>
     ae6:	20 91 5c 02 	lds	r18, 0x025C	; 0x80025c <d_2>
     aea:	30 91 5d 02 	lds	r19, 0x025D	; 0x80025d <d_2+0x1>
     aee:	40 91 5e 02 	lds	r20, 0x025E	; 0x80025e <d_2+0x2>
     af2:	50 91 5f 02 	lds	r21, 0x025F	; 0x80025f <d_2+0x3>
     af6:	b2 d4       	rcall	.+2404   	; 0x145c <__addsf3>
     af8:	60 93 54 02 	sts	0x0254, r22	; 0x800254 <pid2>
     afc:	70 93 55 02 	sts	0x0255, r23	; 0x800255 <pid2+0x1>
     b00:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <pid2+0x2>
     b04:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <pid2+0x3>
	if(pid2<0){
     b08:	60 91 54 02 	lds	r22, 0x0254	; 0x800254 <pid2>
     b0c:	70 91 55 02 	lds	r23, 0x0255	; 0x800255 <pid2+0x1>
     b10:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <pid2+0x2>
     b14:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <pid2+0x3>
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	a9 01       	movw	r20, r18
     b1e:	02 d5       	rcall	.+2564   	; 0x1524 <__cmpsf2>
     b20:	88 23       	and	r24, r24
     b22:	44 f4       	brge	.+16     	; 0xb34 <PID2+0x1f6>
		pid2 = 0;
     b24:	10 92 54 02 	sts	0x0254, r1	; 0x800254 <pid2>
     b28:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <pid2+0x1>
     b2c:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <pid2+0x2>
     b30:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <pid2+0x3>
	}
	if(pid2>1023){
     b34:	60 91 54 02 	lds	r22, 0x0254	; 0x800254 <pid2>
     b38:	70 91 55 02 	lds	r23, 0x0255	; 0x800255 <pid2+0x1>
     b3c:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <pid2+0x2>
     b40:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <pid2+0x3>
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 ec       	ldi	r19, 0xC0	; 192
     b48:	4f e7       	ldi	r20, 0x7F	; 127
     b4a:	54 e4       	ldi	r21, 0x44	; 68
     b4c:	d2 d5       	rcall	.+2980   	; 0x16f2 <__gesf2>
     b4e:	18 16       	cp	r1, r24
     b50:	64 f4       	brge	.+24     	; 0xb6a <PID2+0x22c>
		pid2 = 1023;
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	90 ec       	ldi	r25, 0xC0	; 192
     b56:	af e7       	ldi	r26, 0x7F	; 127
     b58:	b4 e4       	ldi	r27, 0x44	; 68
     b5a:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <pid2>
     b5e:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <pid2+0x1>
     b62:	a0 93 56 02 	sts	0x0256, r26	; 0x800256 <pid2+0x2>
	}
	Set_PWM2((int) pid2);
     b66:	b0 93 57 02 	sts	0x0257, r27	; 0x800257 <pid2+0x3>
     b6a:	60 91 54 02 	lds	r22, 0x0254	; 0x800254 <pid2>
     b6e:	70 91 55 02 	lds	r23, 0x0255	; 0x800255 <pid2+0x1>
     b72:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <pid2+0x2>
     b76:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <pid2+0x3>
     b7a:	d8 d4       	rcall	.+2480   	; 0x152c <__fixsfsi>
     b7c:	cb 01       	movw	r24, r22
     b7e:	aa dd       	rcall	.-1196   	; 0x6d4 <Set_PWM2>
}
     b80:	ff 90       	pop	r15
     b82:	ef 90       	pop	r14
     b84:	df 90       	pop	r13
     b86:	cf 90       	pop	r12
     b88:	08 95       	ret

00000b8a <PID3>:

void PID3(){//pid motore 3
     b8a:	cf 92       	push	r12
     b8c:	df 92       	push	r13
     b8e:	ef 92       	push	r14
     b90:	ff 92       	push	r15
	e_3= (double) (SET_POINT_VELOCITA - velocita_3);
     b92:	c0 90 00 02 	lds	r12, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     b96:	d0 90 01 02 	lds	r13, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     b9a:	e0 90 02 02 	lds	r14, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
     b9e:	f0 90 03 02 	lds	r15, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
     ba2:	60 91 aa 02 	lds	r22, 0x02AA	; 0x8002aa <velocita_3>
     ba6:	70 91 ab 02 	lds	r23, 0x02AB	; 0x8002ab <velocita_3+0x1>
     baa:	07 2e       	mov	r0, r23
     bac:	00 0c       	add	r0, r0
     bae:	88 0b       	sbc	r24, r24
     bb0:	99 0b       	sbc	r25, r25
     bb2:	ef d4       	rcall	.+2526   	; 0x1592 <__floatsisf>
     bb4:	9b 01       	movw	r18, r22
     bb6:	ac 01       	movw	r20, r24
     bb8:	c7 01       	movw	r24, r14
     bba:	b6 01       	movw	r22, r12
     bbc:	4e d4       	rcall	.+2204   	; 0x145a <__subsf3>
     bbe:	60 93 50 02 	sts	0x0250, r22	; 0x800250 <e_3>
     bc2:	70 93 51 02 	sts	0x0251, r23	; 0x800251 <e_3+0x1>
     bc6:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <e_3+0x2>
     bca:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <e_3+0x3>
	p_3 = e_3*KP;
     bce:	60 91 50 02 	lds	r22, 0x0250	; 0x800250 <e_3>
     bd2:	70 91 51 02 	lds	r23, 0x0251	; 0x800251 <e_3+0x1>
     bd6:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <e_3+0x2>
     bda:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <e_3+0x3>
     bde:	23 ec       	ldi	r18, 0xC3	; 195
     be0:	35 ef       	ldi	r19, 0xF5	; 245
     be2:	48 e8       	ldi	r20, 0x88	; 136
     be4:	50 e4       	ldi	r21, 0x40	; 64
     be6:	89 d5       	rcall	.+2834   	; 0x16fa <__mulsf3>
     be8:	60 93 4c 02 	sts	0x024C, r22	; 0x80024c <p_3>
     bec:	70 93 4d 02 	sts	0x024D, r23	; 0x80024d <p_3+0x1>
     bf0:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <p_3+0x2>
     bf4:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <p_3+0x3>
	i_3= i_old_3 + (KI*e_3);
     bf8:	60 91 50 02 	lds	r22, 0x0250	; 0x800250 <e_3>
     bfc:	70 91 51 02 	lds	r23, 0x0251	; 0x800251 <e_3+0x1>
     c00:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <e_3+0x2>
     c04:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <e_3+0x3>
     c08:	27 ee       	ldi	r18, 0xE7	; 231
     c0a:	3b ef       	ldi	r19, 0xFB	; 251
     c0c:	49 ee       	ldi	r20, 0xE9	; 233
     c0e:	5e e3       	ldi	r21, 0x3E	; 62
     c10:	74 d5       	rcall	.+2792   	; 0x16fa <__mulsf3>
     c12:	20 91 40 02 	lds	r18, 0x0240	; 0x800240 <i_old_3>
     c16:	30 91 41 02 	lds	r19, 0x0241	; 0x800241 <i_old_3+0x1>
     c1a:	40 91 42 02 	lds	r20, 0x0242	; 0x800242 <i_old_3+0x2>
     c1e:	50 91 43 02 	lds	r21, 0x0243	; 0x800243 <i_old_3+0x3>
     c22:	1c d4       	rcall	.+2104   	; 0x145c <__addsf3>
     c24:	60 93 48 02 	sts	0x0248, r22	; 0x800248 <i_3>
     c28:	70 93 49 02 	sts	0x0249, r23	; 0x800249 <i_3+0x1>
     c2c:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <i_3+0x2>
     c30:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <i_3+0x3>
	d_3 = (e_3 - e_old_3) * KD;
     c34:	60 91 50 02 	lds	r22, 0x0250	; 0x800250 <e_3>
     c38:	70 91 51 02 	lds	r23, 0x0251	; 0x800251 <e_3+0x1>
     c3c:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <e_3+0x2>
     c40:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <e_3+0x3>
     c44:	20 91 98 02 	lds	r18, 0x0298	; 0x800298 <e_old_3>
     c48:	30 91 99 02 	lds	r19, 0x0299	; 0x800299 <e_old_3+0x1>
     c4c:	40 91 9a 02 	lds	r20, 0x029A	; 0x80029a <e_old_3+0x2>
     c50:	50 91 9b 02 	lds	r21, 0x029B	; 0x80029b <e_old_3+0x3>
     c54:	02 d4       	rcall	.+2052   	; 0x145a <__subsf3>
     c56:	20 e0       	ldi	r18, 0x00	; 0
     c58:	30 e0       	ldi	r19, 0x00	; 0
     c5a:	a9 01       	movw	r20, r18
     c5c:	4e d5       	rcall	.+2716   	; 0x16fa <__mulsf3>
     c5e:	60 93 44 02 	sts	0x0244, r22	; 0x800244 <d_3>
     c62:	70 93 45 02 	sts	0x0245, r23	; 0x800245 <d_3+0x1>
     c66:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <d_3+0x2>
     c6a:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <d_3+0x3>
	if(i_3>I_MAX){
     c6e:	60 91 48 02 	lds	r22, 0x0248	; 0x800248 <i_3>
     c72:	70 91 49 02 	lds	r23, 0x0249	; 0x800249 <i_3+0x1>
     c76:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <i_3+0x2>
     c7a:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <i_3+0x3>
     c7e:	20 e0       	ldi	r18, 0x00	; 0
     c80:	30 ec       	ldi	r19, 0xC0	; 192
     c82:	4f e7       	ldi	r20, 0x7F	; 127
     c84:	54 e4       	ldi	r21, 0x44	; 68
     c86:	35 d5       	rcall	.+2666   	; 0x16f2 <__gesf2>
     c88:	18 16       	cp	r1, r24
     c8a:	64 f4       	brge	.+24     	; 0xca4 <PID3+0x11a>
		i_3 = I_MAX;
     c8c:	80 e0       	ldi	r24, 0x00	; 0
     c8e:	90 ec       	ldi	r25, 0xC0	; 192
     c90:	af e7       	ldi	r26, 0x7F	; 127
     c92:	b4 e4       	ldi	r27, 0x44	; 68
     c94:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <i_3>
     c98:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <i_3+0x1>
     c9c:	a0 93 4a 02 	sts	0x024A, r26	; 0x80024a <i_3+0x2>
     ca0:	b0 93 4b 02 	sts	0x024B, r27	; 0x80024b <i_3+0x3>
	}
	if(i_3<I_MIN){
     ca4:	60 91 48 02 	lds	r22, 0x0248	; 0x800248 <i_3>
     ca8:	70 91 49 02 	lds	r23, 0x0249	; 0x800249 <i_3+0x1>
     cac:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <i_3+0x2>
     cb0:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <i_3+0x3>
     cb4:	20 e0       	ldi	r18, 0x00	; 0
     cb6:	30 e0       	ldi	r19, 0x00	; 0
     cb8:	a9 01       	movw	r20, r18
     cba:	34 d4       	rcall	.+2152   	; 0x1524 <__cmpsf2>
     cbc:	88 23       	and	r24, r24
     cbe:	44 f4       	brge	.+16     	; 0xcd0 <PID3+0x146>
		i_3=I_MIN;
     cc0:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <i_3>
     cc4:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <i_3+0x1>
     cc8:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <i_3+0x2>
     ccc:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <i_3+0x3>
	}
	i_old_3 = i_3;
     cd0:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <i_3>
     cd4:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <i_3+0x1>
     cd8:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <i_3+0x2>
     cdc:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <i_3+0x3>
     ce0:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <i_old_3>
     ce4:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <i_old_3+0x1>
     ce8:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <i_old_3+0x2>
     cec:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <i_old_3+0x3>
	e_old_3 = e_3;
     cf0:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <e_3>
     cf4:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <e_3+0x1>
     cf8:	a0 91 52 02 	lds	r26, 0x0252	; 0x800252 <e_3+0x2>
     cfc:	b0 91 53 02 	lds	r27, 0x0253	; 0x800253 <e_3+0x3>
     d00:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <e_old_3>
     d04:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <e_old_3+0x1>
     d08:	a0 93 9a 02 	sts	0x029A, r26	; 0x80029a <e_old_3+0x2>
     d0c:	b0 93 9b 02 	sts	0x029B, r27	; 0x80029b <e_old_3+0x3>
	pid3 = p_3+i_3+d_3;
     d10:	60 91 4c 02 	lds	r22, 0x024C	; 0x80024c <p_3>
     d14:	70 91 4d 02 	lds	r23, 0x024D	; 0x80024d <p_3+0x1>
     d18:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <p_3+0x2>
     d1c:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <p_3+0x3>
     d20:	20 91 48 02 	lds	r18, 0x0248	; 0x800248 <i_3>
     d24:	30 91 49 02 	lds	r19, 0x0249	; 0x800249 <i_3+0x1>
     d28:	40 91 4a 02 	lds	r20, 0x024A	; 0x80024a <i_3+0x2>
     d2c:	50 91 4b 02 	lds	r21, 0x024B	; 0x80024b <i_3+0x3>
     d30:	95 d3       	rcall	.+1834   	; 0x145c <__addsf3>
     d32:	20 91 44 02 	lds	r18, 0x0244	; 0x800244 <d_3>
     d36:	30 91 45 02 	lds	r19, 0x0245	; 0x800245 <d_3+0x1>
     d3a:	40 91 46 02 	lds	r20, 0x0246	; 0x800246 <d_3+0x2>
     d3e:	50 91 47 02 	lds	r21, 0x0247	; 0x800247 <d_3+0x3>
     d42:	8c d3       	rcall	.+1816   	; 0x145c <__addsf3>
     d44:	60 93 3c 02 	sts	0x023C, r22	; 0x80023c <pid3>
     d48:	70 93 3d 02 	sts	0x023D, r23	; 0x80023d <pid3+0x1>
     d4c:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <pid3+0x2>
     d50:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <pid3+0x3>
	if(pid3<0){
     d54:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <pid3>
     d58:	70 91 3d 02 	lds	r23, 0x023D	; 0x80023d <pid3+0x1>
     d5c:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <pid3+0x2>
     d60:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <pid3+0x3>
     d64:	20 e0       	ldi	r18, 0x00	; 0
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	a9 01       	movw	r20, r18
     d6a:	dc d3       	rcall	.+1976   	; 0x1524 <__cmpsf2>
     d6c:	88 23       	and	r24, r24
     d6e:	44 f4       	brge	.+16     	; 0xd80 <PID3+0x1f6>
		pid3 = 0;
     d70:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <pid3>
     d74:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <pid3+0x1>
     d78:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <pid3+0x2>
     d7c:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <pid3+0x3>
	}
	if(pid3>1023){
     d80:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <pid3>
     d84:	70 91 3d 02 	lds	r23, 0x023D	; 0x80023d <pid3+0x1>
     d88:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <pid3+0x2>
     d8c:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <pid3+0x3>
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 ec       	ldi	r19, 0xC0	; 192
     d94:	4f e7       	ldi	r20, 0x7F	; 127
     d96:	54 e4       	ldi	r21, 0x44	; 68
     d98:	ac d4       	rcall	.+2392   	; 0x16f2 <__gesf2>
     d9a:	18 16       	cp	r1, r24
     d9c:	64 f4       	brge	.+24     	; 0xdb6 <PID3+0x22c>
		pid3 = 1023;
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	90 ec       	ldi	r25, 0xC0	; 192
     da2:	af e7       	ldi	r26, 0x7F	; 127
     da4:	b4 e4       	ldi	r27, 0x44	; 68
     da6:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <pid3>
     daa:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <pid3+0x1>
     dae:	a0 93 3e 02 	sts	0x023E, r26	; 0x80023e <pid3+0x2>
	}
	Set_PWM3((int) pid3);
     db2:	b0 93 3f 02 	sts	0x023F, r27	; 0x80023f <pid3+0x3>
     db6:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <pid3>
     dba:	70 91 3d 02 	lds	r23, 0x023D	; 0x80023d <pid3+0x1>
     dbe:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <pid3+0x2>
     dc2:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <pid3+0x3>
     dc6:	b2 d3       	rcall	.+1892   	; 0x152c <__fixsfsi>
     dc8:	cb 01       	movw	r24, r22
     dca:	89 dc       	rcall	.-1774   	; 0x6de <Set_PWM3>
}
     dcc:	ff 90       	pop	r15
     dce:	ef 90       	pop	r14
     dd0:	df 90       	pop	r13
     dd2:	cf 90       	pop	r12
     dd4:	08 95       	ret

00000dd6 <PID4>:

void PID4(){//pid motore 4
     dd6:	cf 92       	push	r12
     dd8:	df 92       	push	r13
     dda:	ef 92       	push	r14
     ddc:	ff 92       	push	r15
	e_4 = (double) (SET_POINT_VELOCITA - velocita_4);
     dde:	c0 90 00 02 	lds	r12, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     de2:	d0 90 01 02 	lds	r13, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     de6:	e0 90 02 02 	lds	r14, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
     dea:	f0 90 03 02 	lds	r15, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
     dee:	60 91 a0 02 	lds	r22, 0x02A0	; 0x8002a0 <velocita_4>
     df2:	70 91 a1 02 	lds	r23, 0x02A1	; 0x8002a1 <velocita_4+0x1>
     df6:	07 2e       	mov	r0, r23
     df8:	00 0c       	add	r0, r0
     dfa:	88 0b       	sbc	r24, r24
     dfc:	99 0b       	sbc	r25, r25
     dfe:	c9 d3       	rcall	.+1938   	; 0x1592 <__floatsisf>
     e00:	9b 01       	movw	r18, r22
     e02:	ac 01       	movw	r20, r24
     e04:	c7 01       	movw	r24, r14
     e06:	b6 01       	movw	r22, r12
     e08:	28 d3       	rcall	.+1616   	; 0x145a <__subsf3>
     e0a:	60 93 38 02 	sts	0x0238, r22	; 0x800238 <e_4>
     e0e:	70 93 39 02 	sts	0x0239, r23	; 0x800239 <e_4+0x1>
     e12:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <e_4+0x2>
     e16:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <e_4+0x3>
	p_4 = e_4*KP;
     e1a:	60 91 38 02 	lds	r22, 0x0238	; 0x800238 <e_4>
     e1e:	70 91 39 02 	lds	r23, 0x0239	; 0x800239 <e_4+0x1>
     e22:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <e_4+0x2>
     e26:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <e_4+0x3>
     e2a:	23 ec       	ldi	r18, 0xC3	; 195
     e2c:	35 ef       	ldi	r19, 0xF5	; 245
     e2e:	48 e8       	ldi	r20, 0x88	; 136
     e30:	50 e4       	ldi	r21, 0x40	; 64
     e32:	63 d4       	rcall	.+2246   	; 0x16fa <__mulsf3>
     e34:	60 93 34 02 	sts	0x0234, r22	; 0x800234 <p_4>
     e38:	70 93 35 02 	sts	0x0235, r23	; 0x800235 <p_4+0x1>
     e3c:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <p_4+0x2>
     e40:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <p_4+0x3>
	i_4= i_old_4 + (KI*e_4);
     e44:	60 91 38 02 	lds	r22, 0x0238	; 0x800238 <e_4>
     e48:	70 91 39 02 	lds	r23, 0x0239	; 0x800239 <e_4+0x1>
     e4c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <e_4+0x2>
     e50:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <e_4+0x3>
     e54:	27 ee       	ldi	r18, 0xE7	; 231
     e56:	3b ef       	ldi	r19, 0xFB	; 251
     e58:	49 ee       	ldi	r20, 0xE9	; 233
     e5a:	5e e3       	ldi	r21, 0x3E	; 62
     e5c:	4e d4       	rcall	.+2204   	; 0x16fa <__mulsf3>
     e5e:	20 91 28 02 	lds	r18, 0x0228	; 0x800228 <i_old_4>
     e62:	30 91 29 02 	lds	r19, 0x0229	; 0x800229 <i_old_4+0x1>
     e66:	40 91 2a 02 	lds	r20, 0x022A	; 0x80022a <i_old_4+0x2>
     e6a:	50 91 2b 02 	lds	r21, 0x022B	; 0x80022b <i_old_4+0x3>
     e6e:	f6 d2       	rcall	.+1516   	; 0x145c <__addsf3>
     e70:	60 93 30 02 	sts	0x0230, r22	; 0x800230 <i_4>
     e74:	70 93 31 02 	sts	0x0231, r23	; 0x800231 <i_4+0x1>
     e78:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <i_4+0x2>
     e7c:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <i_4+0x3>
	d_4 = (e_4 - e_old_4) * KD;
     e80:	60 91 38 02 	lds	r22, 0x0238	; 0x800238 <e_4>
     e84:	70 91 39 02 	lds	r23, 0x0239	; 0x800239 <e_4+0x1>
     e88:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <e_4+0x2>
     e8c:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <e_4+0x3>
     e90:	20 91 92 02 	lds	r18, 0x0292	; 0x800292 <e_old_4>
     e94:	30 91 93 02 	lds	r19, 0x0293	; 0x800293 <e_old_4+0x1>
     e98:	40 91 94 02 	lds	r20, 0x0294	; 0x800294 <e_old_4+0x2>
     e9c:	50 91 95 02 	lds	r21, 0x0295	; 0x800295 <e_old_4+0x3>
     ea0:	dc d2       	rcall	.+1464   	; 0x145a <__subsf3>
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	a9 01       	movw	r20, r18
     ea8:	28 d4       	rcall	.+2128   	; 0x16fa <__mulsf3>
     eaa:	60 93 2c 02 	sts	0x022C, r22	; 0x80022c <d_4>
     eae:	70 93 2d 02 	sts	0x022D, r23	; 0x80022d <d_4+0x1>
     eb2:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <d_4+0x2>
     eb6:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <d_4+0x3>
	if(i_4>I_MAX){
     eba:	60 91 30 02 	lds	r22, 0x0230	; 0x800230 <i_4>
     ebe:	70 91 31 02 	lds	r23, 0x0231	; 0x800231 <i_4+0x1>
     ec2:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <i_4+0x2>
     ec6:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <i_4+0x3>
     eca:	20 e0       	ldi	r18, 0x00	; 0
     ecc:	30 ec       	ldi	r19, 0xC0	; 192
     ece:	4f e7       	ldi	r20, 0x7F	; 127
     ed0:	54 e4       	ldi	r21, 0x44	; 68
     ed2:	0f d4       	rcall	.+2078   	; 0x16f2 <__gesf2>
     ed4:	18 16       	cp	r1, r24
     ed6:	64 f4       	brge	.+24     	; 0xef0 <PID4+0x11a>
		i_4 = I_MAX;
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	90 ec       	ldi	r25, 0xC0	; 192
     edc:	af e7       	ldi	r26, 0x7F	; 127
     ede:	b4 e4       	ldi	r27, 0x44	; 68
     ee0:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <i_4>
     ee4:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <i_4+0x1>
     ee8:	a0 93 32 02 	sts	0x0232, r26	; 0x800232 <i_4+0x2>
     eec:	b0 93 33 02 	sts	0x0233, r27	; 0x800233 <i_4+0x3>
	}
	if(i_4<I_MIN){
     ef0:	60 91 30 02 	lds	r22, 0x0230	; 0x800230 <i_4>
     ef4:	70 91 31 02 	lds	r23, 0x0231	; 0x800231 <i_4+0x1>
     ef8:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <i_4+0x2>
     efc:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <i_4+0x3>
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	a9 01       	movw	r20, r18
     f06:	0e d3       	rcall	.+1564   	; 0x1524 <__cmpsf2>
     f08:	88 23       	and	r24, r24
     f0a:	44 f4       	brge	.+16     	; 0xf1c <PID4+0x146>
		i_4=I_MIN;
     f0c:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <i_4>
     f10:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <i_4+0x1>
     f14:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <i_4+0x2>
     f18:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <i_4+0x3>
	}
	i_old_4 = i_4;
     f1c:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <i_4>
     f20:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <i_4+0x1>
     f24:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <i_4+0x2>
     f28:	b0 91 33 02 	lds	r27, 0x0233	; 0x800233 <i_4+0x3>
     f2c:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <i_old_4>
     f30:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <i_old_4+0x1>
     f34:	a0 93 2a 02 	sts	0x022A, r26	; 0x80022a <i_old_4+0x2>
     f38:	b0 93 2b 02 	sts	0x022B, r27	; 0x80022b <i_old_4+0x3>
	e_old_4 = e_4;
     f3c:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <e_4>
     f40:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <e_4+0x1>
     f44:	a0 91 3a 02 	lds	r26, 0x023A	; 0x80023a <e_4+0x2>
     f48:	b0 91 3b 02 	lds	r27, 0x023B	; 0x80023b <e_4+0x3>
     f4c:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <e_old_4>
     f50:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <e_old_4+0x1>
     f54:	a0 93 94 02 	sts	0x0294, r26	; 0x800294 <e_old_4+0x2>
     f58:	b0 93 95 02 	sts	0x0295, r27	; 0x800295 <e_old_4+0x3>
	pid4 = p_4+i_4+d_4;
     f5c:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <p_4>
     f60:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <p_4+0x1>
     f64:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <p_4+0x2>
     f68:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <p_4+0x3>
     f6c:	20 91 30 02 	lds	r18, 0x0230	; 0x800230 <i_4>
     f70:	30 91 31 02 	lds	r19, 0x0231	; 0x800231 <i_4+0x1>
     f74:	40 91 32 02 	lds	r20, 0x0232	; 0x800232 <i_4+0x2>
     f78:	50 91 33 02 	lds	r21, 0x0233	; 0x800233 <i_4+0x3>
     f7c:	6f d2       	rcall	.+1246   	; 0x145c <__addsf3>
     f7e:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <d_4>
     f82:	30 91 2d 02 	lds	r19, 0x022D	; 0x80022d <d_4+0x1>
     f86:	40 91 2e 02 	lds	r20, 0x022E	; 0x80022e <d_4+0x2>
     f8a:	50 91 2f 02 	lds	r21, 0x022F	; 0x80022f <d_4+0x3>
     f8e:	66 d2       	rcall	.+1228   	; 0x145c <__addsf3>
     f90:	60 93 24 02 	sts	0x0224, r22	; 0x800224 <pid4>
     f94:	70 93 25 02 	sts	0x0225, r23	; 0x800225 <pid4+0x1>
     f98:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <pid4+0x2>
     f9c:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <pid4+0x3>
	if(pid4<0){
     fa0:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <pid4>
     fa4:	70 91 25 02 	lds	r23, 0x0225	; 0x800225 <pid4+0x1>
     fa8:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <pid4+0x2>
     fac:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <pid4+0x3>
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	a9 01       	movw	r20, r18
     fb6:	b6 d2       	rcall	.+1388   	; 0x1524 <__cmpsf2>
     fb8:	88 23       	and	r24, r24
     fba:	44 f4       	brge	.+16     	; 0xfcc <PID4+0x1f6>
		pid4 = 0;
     fbc:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <pid4>
     fc0:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <pid4+0x1>
     fc4:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <pid4+0x2>
     fc8:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <pid4+0x3>
	}
	if(pid4>1023){
     fcc:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <pid4>
     fd0:	70 91 25 02 	lds	r23, 0x0225	; 0x800225 <pid4+0x1>
     fd4:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <pid4+0x2>
     fd8:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <pid4+0x3>
     fdc:	20 e0       	ldi	r18, 0x00	; 0
     fde:	30 ec       	ldi	r19, 0xC0	; 192
     fe0:	4f e7       	ldi	r20, 0x7F	; 127
     fe2:	54 e4       	ldi	r21, 0x44	; 68
     fe4:	86 d3       	rcall	.+1804   	; 0x16f2 <__gesf2>
     fe6:	18 16       	cp	r1, r24
     fe8:	64 f4       	brge	.+24     	; 0x1002 <__EEPROM_REGION_LENGTH__+0x2>
		pid4 = 1023;
     fea:	80 e0       	ldi	r24, 0x00	; 0
     fec:	90 ec       	ldi	r25, 0xC0	; 192
     fee:	af e7       	ldi	r26, 0x7F	; 127
     ff0:	b4 e4       	ldi	r27, 0x44	; 68
     ff2:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <pid4>
     ff6:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <pid4+0x1>
     ffa:	a0 93 26 02 	sts	0x0226, r26	; 0x800226 <pid4+0x2>
	}
	Set_PWM4((int) pid4);
     ffe:	b0 93 27 02 	sts	0x0227, r27	; 0x800227 <pid4+0x3>
    1002:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <pid4>
    1006:	70 91 25 02 	lds	r23, 0x0225	; 0x800225 <pid4+0x1>
    100a:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <pid4+0x2>
    100e:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <pid4+0x3>
    1012:	8c d2       	rcall	.+1304   	; 0x152c <__fixsfsi>
    1014:	cb 01       	movw	r24, r22
    1016:	68 db       	rcall	.-2352   	; 0x6e8 <Set_PWM4>
}
    1018:	ff 90       	pop	r15
    101a:	ef 90       	pop	r14
    101c:	df 90       	pop	r13
    101e:	cf 90       	pop	r12
    1020:	08 95       	ret

00001022 <__vector_42>:

ISR(TIMER4_COMPA_vect){
    1022:	1f 92       	push	r1
    1024:	0f 92       	push	r0
    1026:	0f b6       	in	r0, 0x3f	; 63
    1028:	0f 92       	push	r0
    102a:	11 24       	eor	r1, r1
    102c:	0b b6       	in	r0, 0x3b	; 59
    102e:	0f 92       	push	r0
    1030:	2f 93       	push	r18
    1032:	3f 93       	push	r19
    1034:	4f 93       	push	r20
    1036:	5f 93       	push	r21
    1038:	6f 93       	push	r22
    103a:	7f 93       	push	r23
    103c:	8f 93       	push	r24
    103e:	9f 93       	push	r25
    1040:	af 93       	push	r26
    1042:	bf 93       	push	r27
    1044:	ef 93       	push	r30
    1046:	ff 93       	push	r31
	PID1();
    1048:	54 db       	rcall	.-2392   	; 0x6f2 <PID1>
	PID2();
    104a:	79 dc       	rcall	.-1806   	; 0x93e <PID2>
	PID3();
    104c:	9e dd       	rcall	.-1220   	; 0xb8a <PID3>
    104e:	c3 de       	rcall	.-634    	; 0xdd6 <PID4>
	PID4();
    1050:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
	TCNT4 = 0;
    1054:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    1058:	ff 91       	pop	r31
    105a:	ef 91       	pop	r30
}
    105c:	bf 91       	pop	r27
    105e:	af 91       	pop	r26
    1060:	9f 91       	pop	r25
    1062:	8f 91       	pop	r24
    1064:	7f 91       	pop	r23
    1066:	6f 91       	pop	r22
    1068:	5f 91       	pop	r21
    106a:	4f 91       	pop	r20
    106c:	3f 91       	pop	r19
    106e:	2f 91       	pop	r18
    1070:	0f 90       	pop	r0
    1072:	0b be       	out	0x3b, r0	; 59
    1074:	0f 90       	pop	r0
    1076:	0f be       	out	0x3f, r0	; 63
    1078:	0f 90       	pop	r0
    107a:	1f 90       	pop	r1
    107c:	18 95       	reti

0000107e <PWM>:
    107e:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>

void PWM(){
	
	TCCR5A = 0;
	TCCR5B = 1<<CS52;
    1082:	84 e0       	ldi	r24, 0x04	; 4
    1084:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x7c0121>
	
	DDRH = 1<<PH4;
    1088:	80 e1       	ldi	r24, 0x10	; 16
    108a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
	DDRA = 0xFF;
    108e:	8f ef       	ldi	r24, 0xFF	; 255
    1090:	81 b9       	out	0x01, r24	; 1
	DDRF = 1;
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	80 bb       	out	0x10, r24	; 16
	
	Init_PWM123();
    1096:	05 db       	rcall	.-2550   	; 0x6a2 <Init_PWM123>
	Init_PWM4();
    1098:	0a db       	rcall	.-2540   	; 0x6ae <Init_PWM4>
	
	Start_PWM123();
    109a:	0f db       	rcall	.-2530   	; 0x6ba <Start_PWM123>
    109c:	12 db       	rcall	.-2524   	; 0x6c2 <Start_PWM4>
	Start_PWM4();
    109e:	84 ef       	ldi	r24, 0xF4	; 244
	
	Set_PWM1(SET_INT_PWM);
    10a0:	91 e0       	ldi	r25, 0x01	; 1
    10a2:	13 db       	rcall	.-2522   	; 0x6ca <Set_PWM1>
    10a4:	84 ef       	ldi	r24, 0xF4	; 244
	Set_PWM2(SET_INT_PWM);
    10a6:	91 e0       	ldi	r25, 0x01	; 1
    10a8:	15 db       	rcall	.-2518   	; 0x6d4 <Set_PWM2>
    10aa:	84 ef       	ldi	r24, 0xF4	; 244
	Set_PWM3(SET_INT_PWM);
    10ac:	91 e0       	ldi	r25, 0x01	; 1
    10ae:	17 db       	rcall	.-2514   	; 0x6de <Set_PWM3>
    10b0:	84 ef       	ldi	r24, 0xF4	; 244
    10b2:	91 e0       	ldi	r25, 0x01	; 1
	Set_PWM4(SET_INT_PWM);
    10b4:	19 cb       	rjmp	.-2510   	; 0x6e8 <Set_PWM4>
    10b6:	08 95       	ret

000010b8 <PID>:
    10b8:	83 e2       	ldi	r24, 0x23	; 35
    10ba:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
}

void PID(){
	TCCR4A = (1<<COM1B1) | (1<<WGM41) | (1<<WGM40);//inizializza il servo
	TCCR4B = (1<<WGM42) | (1<<CS42);//N=256
    10be:	8c e0       	ldi	r24, 0x0C	; 12
    10c0:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
	TIMSK4 = 1<<OCIE4A;
    10c4:	82 e0       	ldi	r24, 0x02	; 2
    10c6:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x7c0072>
	OCR4A = 125;
    10ca:	8d e7       	ldi	r24, 0x7D	; 125
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
    10d2:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
	
	EICRA = (1<<ISC20) | (1<<ISC21) | (1<<ISC30) | (1<<ISC31);//interrupt rising edge
    10d6:	80 ef       	ldi	r24, 0xF0	; 240
    10d8:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	EICRB = (1<<ISC40) | (1<<ISC41) | (1<<ISC50) | (1<<ISC51);
    10dc:	8f e0       	ldi	r24, 0x0F	; 15
    10de:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
	EIMSK = 1<<INT2 | 1<<INT3 | 1<<INT4 |1<<INT5;//attivamento interrupt esterni
    10e2:	8c e3       	ldi	r24, 0x3C	; 60
    10e4:	8d bb       	out	0x1d, r24	; 29
	sei();//attivamento ogni interrupt
    10e6:	78 94       	sei
    10e8:	08 95       	ret

000010ea <avanti>:
}

void avanti(){
	SET_POINT_VELOCITA = 1000.0;
    10ea:	80 e0       	ldi	r24, 0x00	; 0
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	aa e7       	ldi	r26, 0x7A	; 122
    10f0:	b4 e4       	ldi	r27, 0x44	; 68
    10f2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
    10f6:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    10fa:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    10fe:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
	PORTA = (1<<PA1) | (1<<PA2) | (1<<PA5)| (1<<PA6);//Verso motore
    1102:	86 e6       	ldi	r24, 0x66	; 102
    1104:	82 b9       	out	0x02, r24	; 2
	
	Set_PWM4(SET_START_PWM);
    1106:	84 ef       	ldi	r24, 0xF4	; 244
    1108:	91 e0       	ldi	r25, 0x01	; 1
    110a:	ee da       	rcall	.-2596   	; 0x6e8 <Set_PWM4>
    110c:	2f ef       	ldi	r18, 0xFF	; 255
    110e:	87 e8       	ldi	r24, 0x87	; 135
    1110:	93 e1       	ldi	r25, 0x13	; 19
    1112:	21 50       	subi	r18, 0x01	; 1
    1114:	80 40       	sbci	r24, 0x00	; 0
    1116:	90 40       	sbci	r25, 0x00	; 0
    1118:	e1 f7       	brne	.-8      	; 0x1112 <avanti+0x28>
    111a:	00 c0       	rjmp	.+0      	; 0x111c <avanti+0x32>
    111c:	00 00       	nop
	_delay_ms(400);
	
	Set_PWM1(SET_START_PWM);
    111e:	84 ef       	ldi	r24, 0xF4	; 244
    1120:	91 e0       	ldi	r25, 0x01	; 1
    1122:	d3 da       	rcall	.-2650   	; 0x6ca <Set_PWM1>
	Set_PWM2(SET_START_PWM);
    1124:	84 ef       	ldi	r24, 0xF4	; 244
    1126:	91 e0       	ldi	r25, 0x01	; 1
    1128:	d5 da       	rcall	.-2646   	; 0x6d4 <Set_PWM2>
	Set_PWM3(SET_START_PWM);
    112a:	84 ef       	ldi	r24, 0xF4	; 244
    112c:	91 e0       	ldi	r25, 0x01	; 1
    112e:	d7 ca       	rjmp	.-2642   	; 0x6de <Set_PWM3>
    1130:	08 95       	ret

00001132 <indietro>:
    1132:	80 e0       	ldi	r24, 0x00	; 0
	
}

void indietro(){
	SET_POINT_VELOCITA = 1000.0;
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	aa e7       	ldi	r26, 0x7A	; 122
    1138:	b4 e4       	ldi	r27, 0x44	; 68
    113a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
    113e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1142:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1146:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
	PORTA = (1<<PA0) | (1<<PA3) | (1<<PA4)| (1<<PA7);//Verso motore
    114a:	89 e9       	ldi	r24, 0x99	; 153
    114c:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    114e:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    1152:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1156:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    115a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    115e:	e6 d1       	rcall	.+972    	; 0x152c <__fixsfsi>
    1160:	cb 01       	movw	r24, r22
    1162:	b3 da       	rcall	.-2714   	; 0x6ca <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    1164:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    1168:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    116c:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1170:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    1174:	db d1       	rcall	.+950    	; 0x152c <__fixsfsi>
    1176:	cb 01       	movw	r24, r22
    1178:	ad da       	rcall	.-2726   	; 0x6d4 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    117a:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    117e:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1182:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1186:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    118a:	d0 d1       	rcall	.+928    	; 0x152c <__fixsfsi>
    118c:	cb 01       	movw	r24, r22
    118e:	a7 da       	rcall	.-2738   	; 0x6de <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    1190:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    1194:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1198:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    119c:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    11a0:	c5 d1       	rcall	.+906    	; 0x152c <__fixsfsi>
    11a2:	cb 01       	movw	r24, r22
    11a4:	a1 ca       	rjmp	.-2750   	; 0x6e8 <Set_PWM4>
    11a6:	08 95       	ret

000011a8 <destra>:
}

void destra(){
	SET_POINT_VELOCITA = 400.0;
    11a8:	80 e0       	ldi	r24, 0x00	; 0
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	a8 ec       	ldi	r26, 0xC8	; 200
    11ae:	b3 e4       	ldi	r27, 0x43	; 67
    11b0:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
    11b4:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    11b8:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    11bc:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
	PORTA = (1<<PA0) | (1<<PA2) | (1<<PA4) | (1<<PA6);
    11c0:	85 e5       	ldi	r24, 0x55	; 85
    11c2:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    11c4:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    11c8:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    11cc:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    11d0:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    11d4:	ab d1       	rcall	.+854    	; 0x152c <__fixsfsi>
    11d6:	cb 01       	movw	r24, r22
    11d8:	78 da       	rcall	.-2832   	; 0x6ca <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    11da:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    11de:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    11e2:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    11e6:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    11ea:	a0 d1       	rcall	.+832    	; 0x152c <__fixsfsi>
    11ec:	cb 01       	movw	r24, r22
    11ee:	72 da       	rcall	.-2844   	; 0x6d4 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    11f0:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    11f4:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    11f8:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    11fc:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    1200:	95 d1       	rcall	.+810    	; 0x152c <__fixsfsi>
    1202:	cb 01       	movw	r24, r22
    1204:	6c da       	rcall	.-2856   	; 0x6de <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    1206:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    120a:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    120e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1212:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    1216:	8a d1       	rcall	.+788    	; 0x152c <__fixsfsi>
    1218:	cb 01       	movw	r24, r22
    121a:	66 ca       	rjmp	.-2868   	; 0x6e8 <Set_PWM4>
    121c:	08 95       	ret

0000121e <sinistra>:
}

void sinistra(){
	SET_POINT_VELOCITA = 400.0;
    121e:	80 e0       	ldi	r24, 0x00	; 0
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	a8 ec       	ldi	r26, 0xC8	; 200
    1224:	b3 e4       	ldi	r27, 0x43	; 67
    1226:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
    122a:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    122e:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1232:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
	PORTA = (1<<PA1) | (1<<PA3) | (1<<PA5)| (1<<PA7);
    1236:	8a ea       	ldi	r24, 0xAA	; 170
    1238:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    123a:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    123e:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1242:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1246:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    124a:	70 d1       	rcall	.+736    	; 0x152c <__fixsfsi>
    124c:	cb 01       	movw	r24, r22
    124e:	3d da       	rcall	.-2950   	; 0x6ca <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    1250:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    1254:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1258:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    125c:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    1260:	65 d1       	rcall	.+714    	; 0x152c <__fixsfsi>
    1262:	cb 01       	movw	r24, r22
    1264:	37 da       	rcall	.-2962   	; 0x6d4 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    1266:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    126a:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    126e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1272:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    1276:	5a d1       	rcall	.+692    	; 0x152c <__fixsfsi>
    1278:	cb 01       	movw	r24, r22
    127a:	31 da       	rcall	.-2974   	; 0x6de <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    127c:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    1280:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1284:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1288:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    128c:	4f d1       	rcall	.+670    	; 0x152c <__fixsfsi>
    128e:	cb 01       	movw	r24, r22
    1290:	2b ca       	rjmp	.-2986   	; 0x6e8 <Set_PWM4>
    1292:	08 95       	ret

00001294 <stop_tutto>:
}

void stop_tutto(){
	SET_POINT_VELOCITA = 0;
    1294:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
    1298:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    129c:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    12a0:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
	Set_PWM2(SET_POINT_VELOCITA);
    12a4:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    12a8:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    12ac:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    12b0:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    12b4:	3b d1       	rcall	.+630    	; 0x152c <__fixsfsi>
    12b6:	cb 01       	movw	r24, r22
    12b8:	0d da       	rcall	.-3046   	; 0x6d4 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    12ba:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    12be:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    12c2:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    12c6:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    12ca:	30 d1       	rcall	.+608    	; 0x152c <__fixsfsi>
    12cc:	cb 01       	movw	r24, r22
    12ce:	07 da       	rcall	.-3058   	; 0x6de <Set_PWM3>
    12d0:	2f ef       	ldi	r18, 0xFF	; 255
    12d2:	84 e3       	ldi	r24, 0x34	; 52
    12d4:	9c e0       	ldi	r25, 0x0C	; 12
    12d6:	21 50       	subi	r18, 0x01	; 1
    12d8:	80 40       	sbci	r24, 0x00	; 0
    12da:	90 40       	sbci	r25, 0x00	; 0
    12dc:	e1 f7       	brne	.-8      	; 0x12d6 <stop_tutto+0x42>
    12de:	00 c0       	rjmp	.+0      	; 0x12e0 <stop_tutto+0x4c>
    12e0:	00 00       	nop
	
	_delay_ms(250);
	Set_PWM1(SET_POINT_VELOCITA);
    12e2:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    12e6:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    12ea:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    12ee:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    12f2:	1c d1       	rcall	.+568    	; 0x152c <__fixsfsi>
    12f4:	cb 01       	movw	r24, r22
    12f6:	e9 d9       	rcall	.-3118   	; 0x6ca <Set_PWM1>
	Set_PWM4(SET_POINT_VELOCITA);
    12f8:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    12fc:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1300:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1304:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    1308:	11 d1       	rcall	.+546    	; 0x152c <__fixsfsi>
    130a:	cb 01       	movw	r24, r22
    130c:	ed c9       	rjmp	.-3110   	; 0x6e8 <Set_PWM4>
    130e:	08 95       	ret

00001310 <delay_movimento>:

volatile int seg_enc = 0;


void delay_movimento( int c){
	if(c==1){			//avanti
    1310:	81 30       	cpi	r24, 0x01	; 1
    1312:	91 05       	cpc	r25, r1
    1314:	e9 f4       	brne	.+58     	; 0x1350 <delay_movimento+0x40>
		while (seg_enc != 1230);
    1316:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <seg_enc>
    131a:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <seg_enc+0x1>
    131e:	8e 3c       	cpi	r24, 0xCE	; 206
    1320:	94 40       	sbci	r25, 0x04	; 4
    1322:	c9 f7       	brne	.-14     	; 0x1316 <delay_movimento+0x6>
		//stop_tutto();
		indietro();
    1324:	06 df       	rcall	.-500    	; 0x1132 <indietro>
    1326:	8f e5       	ldi	r24, 0x5F	; 95
    1328:	9a ee       	ldi	r25, 0xEA	; 234
    132a:	01 97       	sbiw	r24, 0x01	; 1
    132c:	f1 f7       	brne	.-4      	; 0x132a <delay_movimento+0x1a>
    132e:	00 c0       	rjmp	.+0      	; 0x1330 <delay_movimento+0x20>
		_delay_ms(15);
		stop_tutto();
    1330:	00 00       	nop
    1332:	b0 df       	rcall	.-160    	; 0x1294 <stop_tutto>
    1334:	9f ef       	ldi	r25, 0xFF	; 255
    1336:	25 ea       	ldi	r18, 0xA5	; 165
    1338:	8e e0       	ldi	r24, 0x0E	; 14
    133a:	91 50       	subi	r25, 0x01	; 1
    133c:	20 40       	sbci	r18, 0x00	; 0
    133e:	80 40       	sbci	r24, 0x00	; 0
    1340:	e1 f7       	brne	.-8      	; 0x133a <delay_movimento+0x2a>
    1342:	00 c0       	rjmp	.+0      	; 0x1344 <delay_movimento+0x34>
    1344:	00 00       	nop
		_delay_ms(300);
		seg_enc=0;
    1346:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <seg_enc+0x1>
    134a:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <seg_enc>
    134e:	08 95       	ret
	}
	else if(c==2){		//stop da girata sinistra
    1350:	82 30       	cpi	r24, 0x02	; 2
    1352:	91 05       	cpc	r25, r1
		//stop_tutto();
		destra();
    1354:	b1 f4       	brne	.+44     	; 0x1382 <delay_movimento+0x72>
    1356:	28 df       	rcall	.-432    	; 0x11a8 <destra>
    1358:	8f e7       	ldi	r24, 0x7F	; 127
    135a:	9b eb       	ldi	r25, 0xBB	; 187
    135c:	01 97       	sbiw	r24, 0x01	; 1
    135e:	f1 f7       	brne	.-4      	; 0x135c <delay_movimento+0x4c>
    1360:	00 c0       	rjmp	.+0      	; 0x1362 <delay_movimento+0x52>
		_delay_ms(12);
		stop_tutto();
    1362:	00 00       	nop
    1364:	97 df       	rcall	.-210    	; 0x1294 <stop_tutto>
    1366:	9f ef       	ldi	r25, 0xFF	; 255
    1368:	25 ea       	ldi	r18, 0xA5	; 165
    136a:	8e e0       	ldi	r24, 0x0E	; 14
    136c:	91 50       	subi	r25, 0x01	; 1
    136e:	20 40       	sbci	r18, 0x00	; 0
    1370:	80 40       	sbci	r24, 0x00	; 0
    1372:	e1 f7       	brne	.-8      	; 0x136c <delay_movimento+0x5c>
    1374:	00 c0       	rjmp	.+0      	; 0x1376 <delay_movimento+0x66>
    1376:	00 00       	nop
		_delay_ms(300);
		seg_enc=0;
    1378:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <seg_enc+0x1>
    137c:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <seg_enc>
	}
	else if(c==3){		//stop da girata destra
    1380:	08 95       	ret
    1382:	03 97       	sbiw	r24, 0x03	; 3
		//stop_tutto();
		sinistra();
    1384:	a9 f4       	brne	.+42     	; 0x13b0 <delay_movimento+0xa0>
    1386:	4b df       	rcall	.-362    	; 0x121e <sinistra>
    1388:	8f e7       	ldi	r24, 0x7F	; 127
    138a:	9b eb       	ldi	r25, 0xBB	; 187
    138c:	01 97       	sbiw	r24, 0x01	; 1
    138e:	f1 f7       	brne	.-4      	; 0x138c <delay_movimento+0x7c>
    1390:	00 c0       	rjmp	.+0      	; 0x1392 <delay_movimento+0x82>
		_delay_ms(12);
		stop_tutto();
    1392:	00 00       	nop
    1394:	7f df       	rcall	.-258    	; 0x1294 <stop_tutto>
    1396:	9f ef       	ldi	r25, 0xFF	; 255
    1398:	25 ea       	ldi	r18, 0xA5	; 165
    139a:	8e e0       	ldi	r24, 0x0E	; 14
    139c:	91 50       	subi	r25, 0x01	; 1
    139e:	20 40       	sbci	r18, 0x00	; 0
    13a0:	80 40       	sbci	r24, 0x00	; 0
    13a2:	e1 f7       	brne	.-8      	; 0x139c <delay_movimento+0x8c>
    13a4:	00 c0       	rjmp	.+0      	; 0x13a6 <delay_movimento+0x96>
    13a6:	00 00       	nop
		_delay_ms(300);
		seg_enc=0;
    13a8:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <seg_enc+0x1>
    13ac:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <seg_enc>
    13b0:	08 95       	ret

000013b2 <Set_Servo>:



//Servo
void Set_Servo(int duty_5){
	OCR4B = duty_5;
    13b2:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
    13b6:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
    13ba:	08 95       	ret

000013bc <cubetto>:
}

void cubetto(){
	Set_Servo(125);			//		PWM--> 30 : 200
    13bc:	8d e7       	ldi	r24, 0x7D	; 125
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	f8 df       	rcall	.-16     	; 0x13b2 <Set_Servo>
    13c2:	2f ef       	ldi	r18, 0xFF	; 255
    13c4:	8d e3       	ldi	r24, 0x3D	; 61
    13c6:	99 e4       	ldi	r25, 0x49	; 73
    13c8:	21 50       	subi	r18, 0x01	; 1
    13ca:	80 40       	sbci	r24, 0x00	; 0
    13cc:	90 40       	sbci	r25, 0x00	; 0
    13ce:	e1 f7       	brne	.-8      	; 0x13c8 <cubetto+0xc>
    13d0:	00 c0       	rjmp	.+0      	; 0x13d2 <cubetto+0x16>
    13d2:	00 00       	nop
	_delay_ms(1500);
	Set_Servo(150);
    13d4:	86 e9       	ldi	r24, 0x96	; 150
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	ec cf       	rjmp	.-40     	; 0x13b2 <Set_Servo>
    13da:	08 95       	ret

000013dc <Serial_Init>:
}
unsigned char Serial_Rx( void )
{
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}
    13dc:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <BAUD0>
    13e0:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <BAUD0+0x1>
    13e4:	a0 91 86 02 	lds	r26, 0x0286	; 0x800286 <BAUD0+0x2>
    13e8:	b0 91 87 02 	lds	r27, 0x0287	; 0x800287 <BAUD0+0x3>
    13ec:	89 2f       	mov	r24, r25
    13ee:	9a 2f       	mov	r25, r26
    13f0:	ab 2f       	mov	r26, r27
    13f2:	bb 27       	eor	r27, r27
    13f4:	a7 fd       	sbrc	r26, 7
    13f6:	ba 95       	dec	r27
    13f8:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    13fc:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <BAUD0>
    1400:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    1404:	88 e9       	ldi	r24, 0x98	; 152
    1406:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
    140a:	86 e0       	ldi	r24, 0x06	; 6
    140c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
    1410:	08 95       	ret

00001412 <Serial_Tx>:
    1412:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    1416:	95 ff       	sbrs	r25, 5
    1418:	fc cf       	rjmp	.-8      	; 0x1412 <Serial_Tx>
    141a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    141e:	08 95       	ret

00001420 <Serial_Send_String>:
	}
}


void Serial_Send_String(char *string1)
{
    1420:	0f 93       	push	r16
    1422:	1f 93       	push	r17
    1424:	cf 93       	push	r28
    1426:	df 93       	push	r29
    1428:	8c 01       	movw	r16, r24
	int i=0;
	for(i=0;i<strlen(string1);i++)
    142a:	c0 e0       	ldi	r28, 0x00	; 0
    142c:	d0 e0       	ldi	r29, 0x00	; 0
    142e:	06 c0       	rjmp	.+12     	; 0x143c <Serial_Send_String+0x1c>
	{
		Serial_Tx(string1[i]);
    1430:	f8 01       	movw	r30, r16
    1432:	ec 0f       	add	r30, r28
    1434:	fd 1f       	adc	r31, r29
    1436:	80 81       	ld	r24, Z
    1438:	ec df       	rcall	.-40     	; 0x1412 <Serial_Tx>


void Serial_Send_String(char *string1)
{
	int i=0;
	for(i=0;i<strlen(string1);i++)
    143a:	21 96       	adiw	r28, 0x01	; 1
    143c:	f8 01       	movw	r30, r16
    143e:	01 90       	ld	r0, Z+
    1440:	00 20       	and	r0, r0
    1442:	e9 f7       	brne	.-6      	; 0x143e <Serial_Send_String+0x1e>
    1444:	31 97       	sbiw	r30, 0x01	; 1
    1446:	e0 1b       	sub	r30, r16
    1448:	f1 0b       	sbc	r31, r17
    144a:	ce 17       	cp	r28, r30
    144c:	df 07       	cpc	r29, r31
    144e:	80 f3       	brcs	.-32     	; 0x1430 <Serial_Send_String+0x10>
	{
		Serial_Tx(string1[i]);
	}
}
    1450:	df 91       	pop	r29
    1452:	cf 91       	pop	r28
    1454:	1f 91       	pop	r17
    1456:	0f 91       	pop	r16
    1458:	08 95       	ret

0000145a <__subsf3>:
    145a:	50 58       	subi	r21, 0x80	; 128

0000145c <__addsf3>:
    145c:	bb 27       	eor	r27, r27
    145e:	aa 27       	eor	r26, r26
    1460:	0e d0       	rcall	.+28     	; 0x147e <__addsf3x>
    1462:	0d c1       	rjmp	.+538    	; 0x167e <__fp_round>
    1464:	fe d0       	rcall	.+508    	; 0x1662 <__fp_pscA>
    1466:	30 f0       	brcs	.+12     	; 0x1474 <__addsf3+0x18>
    1468:	03 d1       	rcall	.+518    	; 0x1670 <__fp_pscB>
    146a:	20 f0       	brcs	.+8      	; 0x1474 <__addsf3+0x18>
    146c:	31 f4       	brne	.+12     	; 0x147a <__addsf3+0x1e>
    146e:	9f 3f       	cpi	r25, 0xFF	; 255
    1470:	11 f4       	brne	.+4      	; 0x1476 <__addsf3+0x1a>
    1472:	1e f4       	brtc	.+6      	; 0x147a <__addsf3+0x1e>
    1474:	f3 c0       	rjmp	.+486    	; 0x165c <__fp_nan>
    1476:	0e f4       	brtc	.+2      	; 0x147a <__addsf3+0x1e>
    1478:	e0 95       	com	r30
    147a:	e7 fb       	bst	r30, 7
    147c:	e9 c0       	rjmp	.+466    	; 0x1650 <__fp_inf>

0000147e <__addsf3x>:
    147e:	e9 2f       	mov	r30, r25
    1480:	0f d1       	rcall	.+542    	; 0x16a0 <__fp_split3>
    1482:	80 f3       	brcs	.-32     	; 0x1464 <__addsf3+0x8>
    1484:	ba 17       	cp	r27, r26
    1486:	62 07       	cpc	r22, r18
    1488:	73 07       	cpc	r23, r19
    148a:	84 07       	cpc	r24, r20
    148c:	95 07       	cpc	r25, r21
    148e:	18 f0       	brcs	.+6      	; 0x1496 <__addsf3x+0x18>
    1490:	71 f4       	brne	.+28     	; 0x14ae <__addsf3x+0x30>
    1492:	9e f5       	brtc	.+102    	; 0x14fa <__addsf3x+0x7c>
    1494:	27 c1       	rjmp	.+590    	; 0x16e4 <__fp_zero>
    1496:	0e f4       	brtc	.+2      	; 0x149a <__addsf3x+0x1c>
    1498:	e0 95       	com	r30
    149a:	0b 2e       	mov	r0, r27
    149c:	ba 2f       	mov	r27, r26
    149e:	a0 2d       	mov	r26, r0
    14a0:	0b 01       	movw	r0, r22
    14a2:	b9 01       	movw	r22, r18
    14a4:	90 01       	movw	r18, r0
    14a6:	0c 01       	movw	r0, r24
    14a8:	ca 01       	movw	r24, r20
    14aa:	a0 01       	movw	r20, r0
    14ac:	11 24       	eor	r1, r1
    14ae:	ff 27       	eor	r31, r31
    14b0:	59 1b       	sub	r21, r25
    14b2:	99 f0       	breq	.+38     	; 0x14da <__addsf3x+0x5c>
    14b4:	59 3f       	cpi	r21, 0xF9	; 249
    14b6:	50 f4       	brcc	.+20     	; 0x14cc <__addsf3x+0x4e>
    14b8:	50 3e       	cpi	r21, 0xE0	; 224
    14ba:	68 f1       	brcs	.+90     	; 0x1516 <__addsf3x+0x98>
    14bc:	1a 16       	cp	r1, r26
    14be:	f0 40       	sbci	r31, 0x00	; 0
    14c0:	a2 2f       	mov	r26, r18
    14c2:	23 2f       	mov	r18, r19
    14c4:	34 2f       	mov	r19, r20
    14c6:	44 27       	eor	r20, r20
    14c8:	58 5f       	subi	r21, 0xF8	; 248
    14ca:	f3 cf       	rjmp	.-26     	; 0x14b2 <__addsf3x+0x34>
    14cc:	46 95       	lsr	r20
    14ce:	37 95       	ror	r19
    14d0:	27 95       	ror	r18
    14d2:	a7 95       	ror	r26
    14d4:	f0 40       	sbci	r31, 0x00	; 0
    14d6:	53 95       	inc	r21
    14d8:	c9 f7       	brne	.-14     	; 0x14cc <__addsf3x+0x4e>
    14da:	7e f4       	brtc	.+30     	; 0x14fa <__addsf3x+0x7c>
    14dc:	1f 16       	cp	r1, r31
    14de:	ba 0b       	sbc	r27, r26
    14e0:	62 0b       	sbc	r22, r18
    14e2:	73 0b       	sbc	r23, r19
    14e4:	84 0b       	sbc	r24, r20
    14e6:	ba f0       	brmi	.+46     	; 0x1516 <__addsf3x+0x98>
    14e8:	91 50       	subi	r25, 0x01	; 1
    14ea:	a1 f0       	breq	.+40     	; 0x1514 <__addsf3x+0x96>
    14ec:	ff 0f       	add	r31, r31
    14ee:	bb 1f       	adc	r27, r27
    14f0:	66 1f       	adc	r22, r22
    14f2:	77 1f       	adc	r23, r23
    14f4:	88 1f       	adc	r24, r24
    14f6:	c2 f7       	brpl	.-16     	; 0x14e8 <__addsf3x+0x6a>
    14f8:	0e c0       	rjmp	.+28     	; 0x1516 <__addsf3x+0x98>
    14fa:	ba 0f       	add	r27, r26
    14fc:	62 1f       	adc	r22, r18
    14fe:	73 1f       	adc	r23, r19
    1500:	84 1f       	adc	r24, r20
    1502:	48 f4       	brcc	.+18     	; 0x1516 <__addsf3x+0x98>
    1504:	87 95       	ror	r24
    1506:	77 95       	ror	r23
    1508:	67 95       	ror	r22
    150a:	b7 95       	ror	r27
    150c:	f7 95       	ror	r31
    150e:	9e 3f       	cpi	r25, 0xFE	; 254
    1510:	08 f0       	brcs	.+2      	; 0x1514 <__addsf3x+0x96>
    1512:	b3 cf       	rjmp	.-154    	; 0x147a <__addsf3+0x1e>
    1514:	93 95       	inc	r25
    1516:	88 0f       	add	r24, r24
    1518:	08 f0       	brcs	.+2      	; 0x151c <__addsf3x+0x9e>
    151a:	99 27       	eor	r25, r25
    151c:	ee 0f       	add	r30, r30
    151e:	97 95       	ror	r25
    1520:	87 95       	ror	r24
    1522:	08 95       	ret

00001524 <__cmpsf2>:
    1524:	71 d0       	rcall	.+226    	; 0x1608 <__fp_cmp>
    1526:	08 f4       	brcc	.+2      	; 0x152a <__cmpsf2+0x6>
    1528:	81 e0       	ldi	r24, 0x01	; 1
    152a:	08 95       	ret

0000152c <__fixsfsi>:
    152c:	04 d0       	rcall	.+8      	; 0x1536 <__fixunssfsi>
    152e:	68 94       	set
    1530:	b1 11       	cpse	r27, r1
    1532:	d9 c0       	rjmp	.+434    	; 0x16e6 <__fp_szero>
    1534:	08 95       	ret

00001536 <__fixunssfsi>:
    1536:	bc d0       	rcall	.+376    	; 0x16b0 <__fp_splitA>
    1538:	88 f0       	brcs	.+34     	; 0x155c <__fixunssfsi+0x26>
    153a:	9f 57       	subi	r25, 0x7F	; 127
    153c:	90 f0       	brcs	.+36     	; 0x1562 <__fixunssfsi+0x2c>
    153e:	b9 2f       	mov	r27, r25
    1540:	99 27       	eor	r25, r25
    1542:	b7 51       	subi	r27, 0x17	; 23
    1544:	a0 f0       	brcs	.+40     	; 0x156e <__fixunssfsi+0x38>
    1546:	d1 f0       	breq	.+52     	; 0x157c <__fixunssfsi+0x46>
    1548:	66 0f       	add	r22, r22
    154a:	77 1f       	adc	r23, r23
    154c:	88 1f       	adc	r24, r24
    154e:	99 1f       	adc	r25, r25
    1550:	1a f0       	brmi	.+6      	; 0x1558 <__fixunssfsi+0x22>
    1552:	ba 95       	dec	r27
    1554:	c9 f7       	brne	.-14     	; 0x1548 <__fixunssfsi+0x12>
    1556:	12 c0       	rjmp	.+36     	; 0x157c <__fixunssfsi+0x46>
    1558:	b1 30       	cpi	r27, 0x01	; 1
    155a:	81 f0       	breq	.+32     	; 0x157c <__fixunssfsi+0x46>
    155c:	c3 d0       	rcall	.+390    	; 0x16e4 <__fp_zero>
    155e:	b1 e0       	ldi	r27, 0x01	; 1
    1560:	08 95       	ret
    1562:	c0 c0       	rjmp	.+384    	; 0x16e4 <__fp_zero>
    1564:	67 2f       	mov	r22, r23
    1566:	78 2f       	mov	r23, r24
    1568:	88 27       	eor	r24, r24
    156a:	b8 5f       	subi	r27, 0xF8	; 248
    156c:	39 f0       	breq	.+14     	; 0x157c <__fixunssfsi+0x46>
    156e:	b9 3f       	cpi	r27, 0xF9	; 249
    1570:	cc f3       	brlt	.-14     	; 0x1564 <__fixunssfsi+0x2e>
    1572:	86 95       	lsr	r24
    1574:	77 95       	ror	r23
    1576:	67 95       	ror	r22
    1578:	b3 95       	inc	r27
    157a:	d9 f7       	brne	.-10     	; 0x1572 <__fixunssfsi+0x3c>
    157c:	3e f4       	brtc	.+14     	; 0x158c <__fixunssfsi+0x56>
    157e:	90 95       	com	r25
    1580:	80 95       	com	r24
    1582:	70 95       	com	r23
    1584:	61 95       	neg	r22
    1586:	7f 4f       	sbci	r23, 0xFF	; 255
    1588:	8f 4f       	sbci	r24, 0xFF	; 255
    158a:	9f 4f       	sbci	r25, 0xFF	; 255
    158c:	08 95       	ret

0000158e <__floatunsisf>:
    158e:	e8 94       	clt
    1590:	09 c0       	rjmp	.+18     	; 0x15a4 <__floatsisf+0x12>

00001592 <__floatsisf>:
    1592:	97 fb       	bst	r25, 7
    1594:	3e f4       	brtc	.+14     	; 0x15a4 <__floatsisf+0x12>
    1596:	90 95       	com	r25
    1598:	80 95       	com	r24
    159a:	70 95       	com	r23
    159c:	61 95       	neg	r22
    159e:	7f 4f       	sbci	r23, 0xFF	; 255
    15a0:	8f 4f       	sbci	r24, 0xFF	; 255
    15a2:	9f 4f       	sbci	r25, 0xFF	; 255
    15a4:	99 23       	and	r25, r25
    15a6:	a9 f0       	breq	.+42     	; 0x15d2 <__floatsisf+0x40>
    15a8:	f9 2f       	mov	r31, r25
    15aa:	96 e9       	ldi	r25, 0x96	; 150
    15ac:	bb 27       	eor	r27, r27
    15ae:	93 95       	inc	r25
    15b0:	f6 95       	lsr	r31
    15b2:	87 95       	ror	r24
    15b4:	77 95       	ror	r23
    15b6:	67 95       	ror	r22
    15b8:	b7 95       	ror	r27
    15ba:	f1 11       	cpse	r31, r1
    15bc:	f8 cf       	rjmp	.-16     	; 0x15ae <__floatsisf+0x1c>
    15be:	fa f4       	brpl	.+62     	; 0x15fe <__floatsisf+0x6c>
    15c0:	bb 0f       	add	r27, r27
    15c2:	11 f4       	brne	.+4      	; 0x15c8 <__floatsisf+0x36>
    15c4:	60 ff       	sbrs	r22, 0
    15c6:	1b c0       	rjmp	.+54     	; 0x15fe <__floatsisf+0x6c>
    15c8:	6f 5f       	subi	r22, 0xFF	; 255
    15ca:	7f 4f       	sbci	r23, 0xFF	; 255
    15cc:	8f 4f       	sbci	r24, 0xFF	; 255
    15ce:	9f 4f       	sbci	r25, 0xFF	; 255
    15d0:	16 c0       	rjmp	.+44     	; 0x15fe <__floatsisf+0x6c>
    15d2:	88 23       	and	r24, r24
    15d4:	11 f0       	breq	.+4      	; 0x15da <__floatsisf+0x48>
    15d6:	96 e9       	ldi	r25, 0x96	; 150
    15d8:	11 c0       	rjmp	.+34     	; 0x15fc <__floatsisf+0x6a>
    15da:	77 23       	and	r23, r23
    15dc:	21 f0       	breq	.+8      	; 0x15e6 <__floatsisf+0x54>
    15de:	9e e8       	ldi	r25, 0x8E	; 142
    15e0:	87 2f       	mov	r24, r23
    15e2:	76 2f       	mov	r23, r22
    15e4:	05 c0       	rjmp	.+10     	; 0x15f0 <__floatsisf+0x5e>
    15e6:	66 23       	and	r22, r22
    15e8:	71 f0       	breq	.+28     	; 0x1606 <__floatsisf+0x74>
    15ea:	96 e8       	ldi	r25, 0x86	; 134
    15ec:	86 2f       	mov	r24, r22
    15ee:	70 e0       	ldi	r23, 0x00	; 0
    15f0:	60 e0       	ldi	r22, 0x00	; 0
    15f2:	2a f0       	brmi	.+10     	; 0x15fe <__floatsisf+0x6c>
    15f4:	9a 95       	dec	r25
    15f6:	66 0f       	add	r22, r22
    15f8:	77 1f       	adc	r23, r23
    15fa:	88 1f       	adc	r24, r24
    15fc:	da f7       	brpl	.-10     	; 0x15f4 <__floatsisf+0x62>
    15fe:	88 0f       	add	r24, r24
    1600:	96 95       	lsr	r25
    1602:	87 95       	ror	r24
    1604:	97 f9       	bld	r25, 7
    1606:	08 95       	ret

00001608 <__fp_cmp>:
    1608:	99 0f       	add	r25, r25
    160a:	00 08       	sbc	r0, r0
    160c:	55 0f       	add	r21, r21
    160e:	aa 0b       	sbc	r26, r26
    1610:	e0 e8       	ldi	r30, 0x80	; 128
    1612:	fe ef       	ldi	r31, 0xFE	; 254
    1614:	16 16       	cp	r1, r22
    1616:	17 06       	cpc	r1, r23
    1618:	e8 07       	cpc	r30, r24
    161a:	f9 07       	cpc	r31, r25
    161c:	c0 f0       	brcs	.+48     	; 0x164e <__fp_cmp+0x46>
    161e:	12 16       	cp	r1, r18
    1620:	13 06       	cpc	r1, r19
    1622:	e4 07       	cpc	r30, r20
    1624:	f5 07       	cpc	r31, r21
    1626:	98 f0       	brcs	.+38     	; 0x164e <__fp_cmp+0x46>
    1628:	62 1b       	sub	r22, r18
    162a:	73 0b       	sbc	r23, r19
    162c:	84 0b       	sbc	r24, r20
    162e:	95 0b       	sbc	r25, r21
    1630:	39 f4       	brne	.+14     	; 0x1640 <__fp_cmp+0x38>
    1632:	0a 26       	eor	r0, r26
    1634:	61 f0       	breq	.+24     	; 0x164e <__fp_cmp+0x46>
    1636:	23 2b       	or	r18, r19
    1638:	24 2b       	or	r18, r20
    163a:	25 2b       	or	r18, r21
    163c:	21 f4       	brne	.+8      	; 0x1646 <__fp_cmp+0x3e>
    163e:	08 95       	ret
    1640:	0a 26       	eor	r0, r26
    1642:	09 f4       	brne	.+2      	; 0x1646 <__fp_cmp+0x3e>
    1644:	a1 40       	sbci	r26, 0x01	; 1
    1646:	a6 95       	lsr	r26
    1648:	8f ef       	ldi	r24, 0xFF	; 255
    164a:	81 1d       	adc	r24, r1
    164c:	81 1d       	adc	r24, r1
    164e:	08 95       	ret

00001650 <__fp_inf>:
    1650:	97 f9       	bld	r25, 7
    1652:	9f 67       	ori	r25, 0x7F	; 127
    1654:	80 e8       	ldi	r24, 0x80	; 128
    1656:	70 e0       	ldi	r23, 0x00	; 0
    1658:	60 e0       	ldi	r22, 0x00	; 0
    165a:	08 95       	ret

0000165c <__fp_nan>:
    165c:	9f ef       	ldi	r25, 0xFF	; 255
    165e:	80 ec       	ldi	r24, 0xC0	; 192
    1660:	08 95       	ret

00001662 <__fp_pscA>:
    1662:	00 24       	eor	r0, r0
    1664:	0a 94       	dec	r0
    1666:	16 16       	cp	r1, r22
    1668:	17 06       	cpc	r1, r23
    166a:	18 06       	cpc	r1, r24
    166c:	09 06       	cpc	r0, r25
    166e:	08 95       	ret

00001670 <__fp_pscB>:
    1670:	00 24       	eor	r0, r0
    1672:	0a 94       	dec	r0
    1674:	12 16       	cp	r1, r18
    1676:	13 06       	cpc	r1, r19
    1678:	14 06       	cpc	r1, r20
    167a:	05 06       	cpc	r0, r21
    167c:	08 95       	ret

0000167e <__fp_round>:
    167e:	09 2e       	mov	r0, r25
    1680:	03 94       	inc	r0
    1682:	00 0c       	add	r0, r0
    1684:	11 f4       	brne	.+4      	; 0x168a <__fp_round+0xc>
    1686:	88 23       	and	r24, r24
    1688:	52 f0       	brmi	.+20     	; 0x169e <__fp_round+0x20>
    168a:	bb 0f       	add	r27, r27
    168c:	40 f4       	brcc	.+16     	; 0x169e <__fp_round+0x20>
    168e:	bf 2b       	or	r27, r31
    1690:	11 f4       	brne	.+4      	; 0x1696 <__fp_round+0x18>
    1692:	60 ff       	sbrs	r22, 0
    1694:	04 c0       	rjmp	.+8      	; 0x169e <__fp_round+0x20>
    1696:	6f 5f       	subi	r22, 0xFF	; 255
    1698:	7f 4f       	sbci	r23, 0xFF	; 255
    169a:	8f 4f       	sbci	r24, 0xFF	; 255
    169c:	9f 4f       	sbci	r25, 0xFF	; 255
    169e:	08 95       	ret

000016a0 <__fp_split3>:
    16a0:	57 fd       	sbrc	r21, 7
    16a2:	90 58       	subi	r25, 0x80	; 128
    16a4:	44 0f       	add	r20, r20
    16a6:	55 1f       	adc	r21, r21
    16a8:	59 f0       	breq	.+22     	; 0x16c0 <__fp_splitA+0x10>
    16aa:	5f 3f       	cpi	r21, 0xFF	; 255
    16ac:	71 f0       	breq	.+28     	; 0x16ca <__fp_splitA+0x1a>
    16ae:	47 95       	ror	r20

000016b0 <__fp_splitA>:
    16b0:	88 0f       	add	r24, r24
    16b2:	97 fb       	bst	r25, 7
    16b4:	99 1f       	adc	r25, r25
    16b6:	61 f0       	breq	.+24     	; 0x16d0 <__fp_splitA+0x20>
    16b8:	9f 3f       	cpi	r25, 0xFF	; 255
    16ba:	79 f0       	breq	.+30     	; 0x16da <__fp_splitA+0x2a>
    16bc:	87 95       	ror	r24
    16be:	08 95       	ret
    16c0:	12 16       	cp	r1, r18
    16c2:	13 06       	cpc	r1, r19
    16c4:	14 06       	cpc	r1, r20
    16c6:	55 1f       	adc	r21, r21
    16c8:	f2 cf       	rjmp	.-28     	; 0x16ae <__fp_split3+0xe>
    16ca:	46 95       	lsr	r20
    16cc:	f1 df       	rcall	.-30     	; 0x16b0 <__fp_splitA>
    16ce:	08 c0       	rjmp	.+16     	; 0x16e0 <__fp_splitA+0x30>
    16d0:	16 16       	cp	r1, r22
    16d2:	17 06       	cpc	r1, r23
    16d4:	18 06       	cpc	r1, r24
    16d6:	99 1f       	adc	r25, r25
    16d8:	f1 cf       	rjmp	.-30     	; 0x16bc <__fp_splitA+0xc>
    16da:	86 95       	lsr	r24
    16dc:	71 05       	cpc	r23, r1
    16de:	61 05       	cpc	r22, r1
    16e0:	08 94       	sec
    16e2:	08 95       	ret

000016e4 <__fp_zero>:
    16e4:	e8 94       	clt

000016e6 <__fp_szero>:
    16e6:	bb 27       	eor	r27, r27
    16e8:	66 27       	eor	r22, r22
    16ea:	77 27       	eor	r23, r23
    16ec:	cb 01       	movw	r24, r22
    16ee:	97 f9       	bld	r25, 7
    16f0:	08 95       	ret

000016f2 <__gesf2>:
    16f2:	8a df       	rcall	.-236    	; 0x1608 <__fp_cmp>
    16f4:	08 f4       	brcc	.+2      	; 0x16f8 <__gesf2+0x6>
    16f6:	8f ef       	ldi	r24, 0xFF	; 255
    16f8:	08 95       	ret

000016fa <__mulsf3>:
    16fa:	0b d0       	rcall	.+22     	; 0x1712 <__mulsf3x>
    16fc:	c0 cf       	rjmp	.-128    	; 0x167e <__fp_round>
    16fe:	b1 df       	rcall	.-158    	; 0x1662 <__fp_pscA>
    1700:	28 f0       	brcs	.+10     	; 0x170c <__mulsf3+0x12>
    1702:	b6 df       	rcall	.-148    	; 0x1670 <__fp_pscB>
    1704:	18 f0       	brcs	.+6      	; 0x170c <__mulsf3+0x12>
    1706:	95 23       	and	r25, r21
    1708:	09 f0       	breq	.+2      	; 0x170c <__mulsf3+0x12>
    170a:	a2 cf       	rjmp	.-188    	; 0x1650 <__fp_inf>
    170c:	a7 cf       	rjmp	.-178    	; 0x165c <__fp_nan>
    170e:	11 24       	eor	r1, r1
    1710:	ea cf       	rjmp	.-44     	; 0x16e6 <__fp_szero>

00001712 <__mulsf3x>:
    1712:	c6 df       	rcall	.-116    	; 0x16a0 <__fp_split3>
    1714:	a0 f3       	brcs	.-24     	; 0x16fe <__mulsf3+0x4>

00001716 <__mulsf3_pse>:
    1716:	95 9f       	mul	r25, r21
    1718:	d1 f3       	breq	.-12     	; 0x170e <__mulsf3+0x14>
    171a:	95 0f       	add	r25, r21
    171c:	50 e0       	ldi	r21, 0x00	; 0
    171e:	55 1f       	adc	r21, r21
    1720:	62 9f       	mul	r22, r18
    1722:	f0 01       	movw	r30, r0
    1724:	72 9f       	mul	r23, r18
    1726:	bb 27       	eor	r27, r27
    1728:	f0 0d       	add	r31, r0
    172a:	b1 1d       	adc	r27, r1
    172c:	63 9f       	mul	r22, r19
    172e:	aa 27       	eor	r26, r26
    1730:	f0 0d       	add	r31, r0
    1732:	b1 1d       	adc	r27, r1
    1734:	aa 1f       	adc	r26, r26
    1736:	64 9f       	mul	r22, r20
    1738:	66 27       	eor	r22, r22
    173a:	b0 0d       	add	r27, r0
    173c:	a1 1d       	adc	r26, r1
    173e:	66 1f       	adc	r22, r22
    1740:	82 9f       	mul	r24, r18
    1742:	22 27       	eor	r18, r18
    1744:	b0 0d       	add	r27, r0
    1746:	a1 1d       	adc	r26, r1
    1748:	62 1f       	adc	r22, r18
    174a:	73 9f       	mul	r23, r19
    174c:	b0 0d       	add	r27, r0
    174e:	a1 1d       	adc	r26, r1
    1750:	62 1f       	adc	r22, r18
    1752:	83 9f       	mul	r24, r19
    1754:	a0 0d       	add	r26, r0
    1756:	61 1d       	adc	r22, r1
    1758:	22 1f       	adc	r18, r18
    175a:	74 9f       	mul	r23, r20
    175c:	33 27       	eor	r19, r19
    175e:	a0 0d       	add	r26, r0
    1760:	61 1d       	adc	r22, r1
    1762:	23 1f       	adc	r18, r19
    1764:	84 9f       	mul	r24, r20
    1766:	60 0d       	add	r22, r0
    1768:	21 1d       	adc	r18, r1
    176a:	82 2f       	mov	r24, r18
    176c:	76 2f       	mov	r23, r22
    176e:	6a 2f       	mov	r22, r26
    1770:	11 24       	eor	r1, r1
    1772:	9f 57       	subi	r25, 0x7F	; 127
    1774:	50 40       	sbci	r21, 0x00	; 0
    1776:	8a f0       	brmi	.+34     	; 0x179a <__mulsf3_pse+0x84>
    1778:	e1 f0       	breq	.+56     	; 0x17b2 <__mulsf3_pse+0x9c>
    177a:	88 23       	and	r24, r24
    177c:	4a f0       	brmi	.+18     	; 0x1790 <__mulsf3_pse+0x7a>
    177e:	ee 0f       	add	r30, r30
    1780:	ff 1f       	adc	r31, r31
    1782:	bb 1f       	adc	r27, r27
    1784:	66 1f       	adc	r22, r22
    1786:	77 1f       	adc	r23, r23
    1788:	88 1f       	adc	r24, r24
    178a:	91 50       	subi	r25, 0x01	; 1
    178c:	50 40       	sbci	r21, 0x00	; 0
    178e:	a9 f7       	brne	.-22     	; 0x177a <__mulsf3_pse+0x64>
    1790:	9e 3f       	cpi	r25, 0xFE	; 254
    1792:	51 05       	cpc	r21, r1
    1794:	70 f0       	brcs	.+28     	; 0x17b2 <__mulsf3_pse+0x9c>
    1796:	5c cf       	rjmp	.-328    	; 0x1650 <__fp_inf>
    1798:	a6 cf       	rjmp	.-180    	; 0x16e6 <__fp_szero>
    179a:	5f 3f       	cpi	r21, 0xFF	; 255
    179c:	ec f3       	brlt	.-6      	; 0x1798 <__mulsf3_pse+0x82>
    179e:	98 3e       	cpi	r25, 0xE8	; 232
    17a0:	dc f3       	brlt	.-10     	; 0x1798 <__mulsf3_pse+0x82>
    17a2:	86 95       	lsr	r24
    17a4:	77 95       	ror	r23
    17a6:	67 95       	ror	r22
    17a8:	b7 95       	ror	r27
    17aa:	f7 95       	ror	r31
    17ac:	e7 95       	ror	r30
    17ae:	9f 5f       	subi	r25, 0xFF	; 255
    17b0:	c1 f7       	brne	.-16     	; 0x17a2 <__mulsf3_pse+0x8c>
    17b2:	fe 2b       	or	r31, r30
    17b4:	88 0f       	add	r24, r24
    17b6:	91 1d       	adc	r25, r1
    17b8:	96 95       	lsr	r25
    17ba:	87 95       	ror	r24
    17bc:	97 f9       	bld	r25, 7
    17be:	08 95       	ret

000017c0 <__udivmodsi4>:
    17c0:	a1 e2       	ldi	r26, 0x21	; 33
    17c2:	1a 2e       	mov	r1, r26
    17c4:	aa 1b       	sub	r26, r26
    17c6:	bb 1b       	sub	r27, r27
    17c8:	fd 01       	movw	r30, r26
    17ca:	0d c0       	rjmp	.+26     	; 0x17e6 <__udivmodsi4_ep>

000017cc <__udivmodsi4_loop>:
    17cc:	aa 1f       	adc	r26, r26
    17ce:	bb 1f       	adc	r27, r27
    17d0:	ee 1f       	adc	r30, r30
    17d2:	ff 1f       	adc	r31, r31
    17d4:	a2 17       	cp	r26, r18
    17d6:	b3 07       	cpc	r27, r19
    17d8:	e4 07       	cpc	r30, r20
    17da:	f5 07       	cpc	r31, r21
    17dc:	20 f0       	brcs	.+8      	; 0x17e6 <__udivmodsi4_ep>
    17de:	a2 1b       	sub	r26, r18
    17e0:	b3 0b       	sbc	r27, r19
    17e2:	e4 0b       	sbc	r30, r20
    17e4:	f5 0b       	sbc	r31, r21

000017e6 <__udivmodsi4_ep>:
    17e6:	66 1f       	adc	r22, r22
    17e8:	77 1f       	adc	r23, r23
    17ea:	88 1f       	adc	r24, r24
    17ec:	99 1f       	adc	r25, r25
    17ee:	1a 94       	dec	r1
    17f0:	69 f7       	brne	.-38     	; 0x17cc <__udivmodsi4_loop>
    17f2:	60 95       	com	r22
    17f4:	70 95       	com	r23
    17f6:	80 95       	com	r24
    17f8:	90 95       	com	r25
    17fa:	9b 01       	movw	r18, r22
    17fc:	ac 01       	movw	r20, r24
    17fe:	bd 01       	movw	r22, r26
    1800:	cf 01       	movw	r24, r30
    1802:	08 95       	ret

00001804 <__usmulhisi3>:
    1804:	0b d0       	rcall	.+22     	; 0x181c <__umulhisi3>

00001806 <__usmulhisi3_tail>:
    1806:	b7 ff       	sbrs	r27, 7
    1808:	08 95       	ret
    180a:	82 1b       	sub	r24, r18
    180c:	93 0b       	sbc	r25, r19
    180e:	08 95       	ret

00001810 <__mulshisi3>:
    1810:	b7 ff       	sbrs	r27, 7
    1812:	13 c0       	rjmp	.+38     	; 0x183a <__muluhisi3>

00001814 <__mulohisi3>:
    1814:	12 d0       	rcall	.+36     	; 0x183a <__muluhisi3>
    1816:	82 1b       	sub	r24, r18
    1818:	93 0b       	sbc	r25, r19
    181a:	08 95       	ret

0000181c <__umulhisi3>:
    181c:	a2 9f       	mul	r26, r18
    181e:	b0 01       	movw	r22, r0
    1820:	b3 9f       	mul	r27, r19
    1822:	c0 01       	movw	r24, r0
    1824:	a3 9f       	mul	r26, r19
    1826:	70 0d       	add	r23, r0
    1828:	81 1d       	adc	r24, r1
    182a:	11 24       	eor	r1, r1
    182c:	91 1d       	adc	r25, r1
    182e:	b2 9f       	mul	r27, r18
    1830:	70 0d       	add	r23, r0
    1832:	81 1d       	adc	r24, r1
    1834:	11 24       	eor	r1, r1
    1836:	91 1d       	adc	r25, r1
    1838:	08 95       	ret

0000183a <__muluhisi3>:
    183a:	f0 df       	rcall	.-32     	; 0x181c <__umulhisi3>
    183c:	a5 9f       	mul	r26, r21
    183e:	90 0d       	add	r25, r0
    1840:	b4 9f       	mul	r27, r20
    1842:	90 0d       	add	r25, r0
    1844:	a4 9f       	mul	r26, r20
    1846:	80 0d       	add	r24, r0
    1848:	91 1d       	adc	r25, r1
    184a:	11 24       	eor	r1, r1
    184c:	08 95       	ret

0000184e <_exit>:
    184e:	f8 94       	cli

00001850 <__stop_program>:
    1850:	ff cf       	rjmp	.-2      	; 0x1850 <__stop_program>
